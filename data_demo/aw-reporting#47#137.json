[{"index": "0", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/processors/file/FileRunnableProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.file.FileRunnableProcessor.FileRunnableProcessor", "methodParameterType": "String#File#boolean#ModifiedCsvToBean<R>#ReportEntityMappingStrategy<R>#DateRangeAndType#EntityPersister#int#", "methodParameterName": "topCustomerId#file#fileDownloadedByAPI#csvToBean#mappingStrategy#dateRangeAndType#entityPersister#reportRowsSetSize#", "methodBody": "public FileRunnableProcessor(\n      String topCustomerId,\n      File file,\n      boolean fileDownloadedByAPI,\n      ModifiedCsvToBean<R> csvToBean,\n      ReportEntityMappingStrategy<R> mappingStrategy,\n      DateRangeAndType dateRangeAndType,\n      EntityPersister entityPersister,\n      int reportRowsSetSize) {\n    \n    this.topCustomerId = Preconditions.checkNotNull(topCustomerId, \"topCustomerId cannot be null\");\n    this.file = Preconditions.checkNotNull(file, \"file cannot be null\");\n    this.fileDownloadedByAPI = fileDownloadedByAPI;\n    this.csvToBean = Preconditions.checkNotNull(csvToBean, \"csvToBean cannot be null\");\n    this.mappingStrategy =\n        Preconditions.checkNotNull(mappingStrategy, \"mappingStrategy cannot be null\");\n    this.dateRangeAndType =\n        Preconditions.checkNotNull(dateRangeAndType, \"dateRangeAndType cannot be null\");\n    this.entityPersister =\n        Preconditions.checkNotNull(entityPersister, \"entityPersister cannot be null\");\n    this.reportRowsSetSize = reportRowsSetSize;\n    Preconditions.checkArgument(reportRowsSetSize > 0, \"reportRowsSetSize must be > 0\");\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#SimpleName#SimpleName#SimpleName#NumberLiteral#InfixExpression#StringLiteral#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(SimpleName)SimpleName(NumberLiteral)NumberLiteral)InfixExpression(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "@param topCustomerId the top customer account id.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "1", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/processors/file/FileRunnableProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.file.FileRunnableProcessor.run", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "@Override\n  public void run() {\n    try {\n      logger.debug(\"Starting parse of report rows...\");\n      AwReportCsvReader csvReader = createCsvReader();\n      CsvParserIterator<R> reportRowsList = csvToBean.lazyParse(mappingStrategy, csvReader);\n      logger.debug(\"... success.\");\n\n      logger.debug(\"Starting report persistence...\");\n      List<R> reportBuffer = Lists.newArrayListWithCapacity(reportRowsSetSize);\n      while (reportRowsList.hasNext()) {\n        R report = reportRowsList.next();\n\n        // Getting Account Id from File Name for reports that do not have Client Customer Id\n        if (report.getCustomerId() == null) {\n          String filename = file.getName();\n          if (filename.contains(\"-\") && filename.split(\"-\") != null\n              && filename.split(\"-\").length >= 2 && filename.split(\"-\")[1].matches(\"\\\\d*\")) {\n            report.setCustomerId(Long.parseLong(file.getName().split(\"-\")[1]));\n          } else {\n            throw new IllegalArgumentException(\n                \"Unknown customer id for report \"\n                    + report.getClass().getSimpleName()\n                    + \" file \"\n                    + file.getName());\n          }\n        }\n\n        report.setTopCustomerId(Long.parseLong(topCustomerId.replaceAll(\"-\", \"\")));\n        report.setDateRangeType(dateRangeAndType.getTypeStr());\n        report.setStartDate(dateRangeAndType.getStartDateStr());\n        report.setEndDate(dateRangeAndType.getEndDateStr());\n        report.setRowId();\n\n        reportBuffer.add(report);\n\n        if (reportBuffer.size() >= reportRowsSetSize) {\n          entityPersister.persistReportEntities(reportBuffer);\n          reportBuffer.clear();\n        }\n      }\n      if (reportBuffer.size() > 0) {\n        entityPersister.persistReportEntities(reportBuffer);\n      }\n      logger.debug(\"... success.\");\n    } catch (IOException | CsvReportParsingException e) {\n      logger.error(\"Error processing file: \" + file.getAbsolutePath(), e);\n    } catch (RuntimeException e) {\n      logger.error(\"Runtime error processing file: \" + file.getAbsolutePath(), e);\n    }\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#NullLiteral#InfixExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#SimpleName#SimpleName#StringLiteral#MethodInvocation#NullLiteral#InfixExpression#InfixExpression#SimpleName#SimpleName#StringLiteral#MethodInvocation#SimpleName#FieldAccess#NumberLiteral#InfixExpression#InfixExpression#SimpleName#SimpleName#StringLiteral#MethodInvocation#NumberLiteral#ArrayAccess#SimpleName#StringLiteral#MethodInvocation#InfixExpression#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#StringLiteral#MethodInvocation#NumberLiteral#ArrayAccess#MethodInvocation#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleType#StringLiteral#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#StringLiteral#SimpleName#SimpleName#MethodInvocation#InfixExpression#ClassInstanceCreation#ThrowStatement#Block#IfStatement#Block#IfStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#StringLiteral#StringLiteral#MethodInvocation#MethodInvocation#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#SimpleName#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#WhileStatement#SimpleName#SimpleName#MethodInvocation#NumberLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SimpleType#UnionType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#InfixExpression#SimpleName#MethodInvocation#ExpressionStatement#Block#CatchClause#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#InfixExpression#SimpleName#MethodInvocation#ExpressionStatement#Block#CatchClause#TryStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(WhileStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(NullLiteral)NullLiteral)InfixExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(InfixExpression(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation(NullLiteral)NullLiteral)InfixExpression)InfixExpression(InfixExpression(FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation(SimpleName)SimpleName)FieldAccess(NumberLiteral)NumberLiteral)InfixExpression)InfixExpression(MethodInvocation(ArrayAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation(NumberLiteral)NumberLiteral)ArrayAccess(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(ArrayAccess(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation(NumberLiteral)NumberLiteral)ArrayAccess)MethodInvocation)MethodInvocation)ExpressionStatement)Block(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression)ClassInstanceCreation)ThrowStatement)Block)IfStatement)Block)IfStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(StringLiteral)StringLiteral)MethodInvocation)MethodInvocation)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(IfStatement(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)WhileStatement(IfStatement(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(NumberLiteral)NumberLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(UnionType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)UnionType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)CatchClause(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)CatchClause)TryStatement)Block)MethodDeclaration", "methodDoc": "Executes the API call to download the report that was given when this  {@code Runnable} wascreated. The download blocks this thread until it is finished, and also does the file copying. There is also a retry logic implemented by this method, where the times retried depends on the value given in the constructor.", "call_func_name": ["org.slf4j.Logger.debug", "com.google.api.ads.adwords.awreporting.processors.file.FileRunnableProcessor.createCsvReader", "com.google.api.ads.adwords.awreporting.model.csv.ModifiedCsvToBean.lazyParse", "com.google.common.collect.Lists.newArrayListWithCapacity", "com.google.api.ads.adwords.awreporting.model.csv.CsvParserIterator.hasNext", "com.google.api.ads.adwords.awreporting.model.csv.CsvParserIterator.next", "com.google.api.ads.adwords.awreporting.model.entities.Report.getCustomerId", "java.io.File.getName", "java.lang.String.contains", "java.lang.String.split", "java.lang.String.matches", "java.lang.Long.parseLong", "java.lang.Long.valueOf", "com.google.api.ads.adwords.awreporting.model.entities.Report.setCustomerId", "java.lang.StringBuilder.<init>", "java.lang.StringBuilder.append", "java.lang.Object.getClass", "java.lang.Class.getSimpleName", "java.lang.StringBuilder.toString", "java.lang.IllegalArgumentException.<init>", "java.lang.String.replaceAll", "com.google.api.ads.adwords.awreporting.model.entities.Report.setTopCustomerId", "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType.getTypeStr", "com.google.api.ads.adwords.awreporting.model.entities.Report.setDateRangeType", "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType.getStartDateStr", "com.google.api.ads.adwords.awreporting.model.entities.Report.setStartDate", "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType.getEndDateStr", "com.google.api.ads.adwords.awreporting.model.entities.Report.setEndDate", "com.google.api.ads.adwords.awreporting.model.entities.Report.setRowId", "java.util.List.add", "java.util.List.size", "com.google.api.ads.adwords.awreporting.model.persistence.EntityPersister.persistReportEntities", "java.util.List.clear", "java.io.File.getAbsolutePath", "org.slf4j.Logger.error"], "call_func_parameter": [["java.lang.String"], [""], ["com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy", "com.google.api.ads.adwords.awreporting.model.csv.AwReportCsvReader"], ["int"], [""], [""], [""], [""], ["java.lang.CharSequence"], ["java.lang.String"], ["java.lang.String"], ["java.lang.String"], ["long"], ["java.lang.Long"], [""], ["java.lang.String"], [""], [""], [""], ["java.lang.String"], ["java.lang.String", "java.lang.String"], ["java.lang.Long"], [""], ["java.lang.String"], [""], ["java.lang.String"], [""], ["java.lang.String"], [""], ["java.lang.Object"], [""], ["java.util.List"], [""], [""], ["java.lang.String", "java.lang.Throwable"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.processors.file.FileRunnableProcessor.createCsvReader": "Creates the proper  {@link AwReportCsvReader} to parse the AW reports."}, {"com.google.api.ads.adwords.awreporting.processors.file.FileRunnableProcessor.createCsvReader": "Creates the proper  {@link AwReportCsvReader} to parse the AW reports."}, {"com.google.api.ads.adwords.awreporting.model.csv.ModifiedCsvToBean.lazyParse": "Parses the CSV lazily, letting the client class decide when getting new elements."}, {"com.google.api.ads.adwords.awreporting.model.entities.Report.setRowId": "Sets the primary key for each Report record."}, {"com.google.api.ads.adwords.awreporting.model.persistence.EntityPersister.persistReportEntities": "Persists the report entities so they can be retrieved later."}]}, {"index": "2", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/processors/file/FileRunnableProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.file.FileRunnableProcessor.createCsvReader", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "private AwReportCsvReader createCsvReader() throws IOException {\n    logger.debug(\"Creating CSVReader for file: \" + file.getAbsolutePath());\n\n    InputStreamReader reader =\n        new InputStreamReader(new FileInputStream(file), StandardCharsets.UTF_8);\n\n    // File downloaded by API means no header / summary lines.\n    boolean hasHeaderSummary = !fileDownloadedByAPI;\n    return new AwReportCsvReader(reader, hasHeaderSummary, hasHeaderSummary);\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#SimpleName#SimpleName#QualifiedName#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#PrimitiveType#SimpleName#SimpleName#PrefixExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#ClassInstanceCreation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(PrefixExpression(SimpleName)SimpleName)PrefixExpression)VariableDeclarationFragment)VariableDeclarationStatement(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)ClassInstanceCreation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Creates the proper  {@link AwReportCsvReader} to parse the AW reports.", "call_func_name": ["java.lang.StringBuilder.<init>", "java.lang.StringBuilder.append", "java.io.File.getAbsolutePath", "java.lang.StringBuilder.toString", "org.slf4j.Logger.debug", "java.io.FileInputStream.<init>", "java.io.InputStreamReader.<init>", "com.google.api.ads.adwords.awreporting.model.csv.AwReportCsvReader.<init>"], "call_func_parameter": [[""], ["java.lang.String"], [""], [""], ["java.lang.String"], ["java.io.File"], ["java.io.InputStream", "java.nio.charset.Charset"], ["java.io.Reader", "boolean", "boolean"]], "passed_comments": "/"}, {"index": "3", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/processors/file/FileReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.file.FileReportProcessor.FileReportProcessor", "methodParameterType": "Integer#Integer#Authenticator#", "methodParameterName": "reportRowsSetSize#numberOfReportProcessors#authenticator#", "methodBody": "@Autowired\n  public FileReportProcessor(\n      @Value(value = \"${aw.report.processor.rows.size}\") Integer reportRowsSetSize,\n      @Value(value = \"${aw.report.processor.threads}\") Integer numberOfReportProcessors,\n      Authenticator authenticator)\n      throws ReportProcessingException {\n    super(reportRowsSetSize, numberOfReportProcessors, authenticator);\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#Modifier#SimpleName#SimpleName#SimpleName#StringLiteral#MemberValuePair#NormalAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#MemberValuePair#NormalAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SuperConstructorInvocation#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(NormalAnnotation(SimpleName)SimpleName(MemberValuePair(SimpleName)SimpleName(StringLiteral)StringLiteral)MemberValuePair)NormalAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(NormalAnnotation(SimpleName)SimpleName(MemberValuePair(SimpleName)SimpleName(StringLiteral)StringLiteral)MemberValuePair)NormalAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(SuperConstructorInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)SuperConstructorInvocation)Block)MethodDeclaration", "methodDoc": "Constructor.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "4", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/processors/file/FileReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.file.FileReportProcessor.downloadAndProcess", "methodParameterType": "String#ReportDefinitionReportType#DateRangeAndType#Set<Long>#String#Properties#", "methodParameterName": "topCustomerId#reportType#dateRangeAndType#accountIdList#reportDefinitionKey#properties#", "methodBody": "@Override\n  protected void downloadAndProcess(\n      String topCustomerId,\n      ReportDefinitionReportType reportType,\n      DateRangeAndType dateRangeAndType,\n      Set<Long> accountIdList,\n      String reportDefinitionKey,\n      Properties properties)\n      throws ReportProcessingException {\n\n    // Download Reports to local files and Generate Report objects\n    logger.info(\"\\n\\n ** Generating: \" + reportType.name() + \" **\");\n    logger.info(\" Downloading reports...\");\n    Collection<File> localFiles = Lists.newArrayList();\n    ReportDefinition reportDefinition =\n        getReportDefinition(reportType, dateRangeAndType, reportDefinitionKey, properties);\n    MultipleClientReportDownloader multipleClientReportDownloader =\n        new MultipleClientReportDownloader(downloadSetting.getNumThreads());\n    localFiles =\n        multipleClientReportDownloader.downloadReports(\n            sessionBuilder, reportDefinition, accountIdList);\n    processLocalFiles(topCustomerId, reportType, localFiles, dateRangeAndType);\n    deleteTemporaryFiles(localFiles, reportType);\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#MethodInvocation#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Downloads all the files from the API using  {@code MultipleClientReportDownloader} and stores onlocal file system. The local files are processed using  {@code FileRunnableProcessor} to readall the rows in each file and persist the data to the configured database.", "call_func_name": ["java.lang.StringBuilder.<init>", "java.lang.StringBuilder.append", "com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionReportType.name", "java.lang.StringBuilder.toString", "org.slf4j.Logger.info", "com.google.common.collect.Lists.newArrayList", "com.google.api.ads.adwords.awreporting.processors.file.FileReportProcessor.getReportDefinition", "com.google.api.ads.adwords.awreporting.downloader.DownloadSetting.getNumThreads", "java.lang.Integer.intValue", "com.google.api.ads.adwords.awreporting.downloader.MultipleClientReportDownloader.<init>", "com.google.api.ads.adwords.awreporting.processors.file.FileReportProcessor.processLocalFiles", "com.google.api.ads.adwords.awreporting.processors.file.FileReportProcessor.deleteTemporaryFiles"], "call_func_parameter": [[""], ["java.lang.String"], [""], [""], ["java.lang.String"], [""], ["com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionReportType", "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType", "java.lang.String", "java.util.Properties"], [""], [""], ["int"], ["java.lang.String", "com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionReportType", "java.util.Collection", "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType"], ["java.util.Collection", "com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionReportType"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.processors.file.FileReportProcessor.processLocalFiles": "Process the local files delegating the call to the concrete implementation."}, {"com.google.api.ads.adwords.awreporting.processors.file.FileReportProcessor.processLocalFiles": "Process the local files delegating the call to the concrete implementation."}, {"com.google.api.ads.adwords.awreporting.processors.file.FileReportProcessor.deleteTemporaryFiles": "Deletes the local files used as temporary containers."}, {"com.google.api.ads.adwords.awreporting.processors.file.FileReportProcessor.deleteTemporaryFiles": "Deletes the local files used as temporary containers."}]}, {"index": "5", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/processors/file/FileReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.file.FileReportProcessor.processFiles", "methodParameterType": "String#Class<R>#Collection<File>#boolean#DateRangeAndType#", "methodParameterName": "topCustomerId#reportBeanClass#localFiles#filesDownloadedByAPI#dateRangeAndType#", "methodBody": "private <R extends Report> void processFiles(\n      String topCustomerId,\n      Class<R> reportBeanClass,\n      Collection<File> localFiles,\n      boolean filesDownloadedByAPI,\n      DateRangeAndType dateRangeAndType)\n      throws ReportProcessingException {\n    logger.info(\"Processing report files...\");\n    Stopwatch stopwatch = Stopwatch.createStarted();\n\n    ExecutorService executorService = Executors.newFixedThreadPool(numberOfReportProcessors);\n    List<Callable<Object>> taskJobs = Lists.newArrayList();\n    \n    for (File file : localFiles) {\n      logger.trace(\".\");\n      // We need to create a csvToBean and mappingStrategy for each thread\n      ModifiedCsvToBean<R> csvToBean = new ModifiedCsvToBean<R>();\n        ReportEntityMappingStrategy<R> mappingStrategy =\n            new ReportEntityMappingStrategy<R>(reportBeanClass);\n\n        logger.debug(\"Parsing file: \" + file.getAbsolutePath());\n        FileRunnableProcessor<R> runnableProcessor =\n            new FileRunnableProcessor<R>(\n                topCustomerId,\n                file,\n                filesDownloadedByAPI,\n                csvToBean,\n                mappingStrategy,\n                dateRangeAndType,\n                persister,\n                reportRowsSetSize);\n      taskJobs.add(Executors.callable(runnableProcessor));\n    }\n    \n    try {\n      executorService.invokeAll(taskJobs);\n    } catch (InterruptedException e) {\n      throw new ReportProcessingException(\n          \"FileReportProcessor encounters InterruptedException.\", e);\n    }\n\n    executorService.shutdown();\n    stopwatch.stop();\n    logger.info(\n        \"*** Finished processing all reports in \"\n            + stopwatch.elapsed(TimeUnit.SECONDS)\n            + \" seconds ***\\n\");\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleName#SimpleType#TypeParameter#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#EnhancedForStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#StringLiteral#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(TypeParameter(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)TypeParameter(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleName)SimpleName(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block)EnhancedForStatement(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(StringLiteral)StringLiteral(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Each of the files downloaded is processed using  {@code FileRunnableProcessor} to read the CSV,map to a  {@code Report}, and then persist to configured database.", "call_func_name": ["org.slf4j.Logger.info", "com.google.common.base.Stopwatch.createStarted", "java.util.concurrent.Executors.newFixedThreadPool", "com.google.common.collect.Lists.newArrayList", "java.util.Collection.iterator", "java.util.Iterator.hasNext", "java.util.Iterator.next", "org.slf4j.Logger.trace", "com.google.api.ads.adwords.awreporting.model.csv.ModifiedCsvToBean.<init>", "com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy.<init>", "java.lang.StringBuilder.<init>", "java.lang.StringBuilder.append", "java.io.File.getAbsolutePath", "java.lang.StringBuilder.toString", "org.slf4j.Logger.debug", "com.google.api.ads.adwords.awreporting.processors.file.FileRunnableProcessor.<init>", "java.util.concurrent.Executors.callable", "java.util.List.add", "java.util.concurrent.ExecutorService.invokeAll", "com.google.api.ads.adwords.awreporting.ReportProcessingException.<init>", "java.util.concurrent.ExecutorService.shutdown", "com.google.common.base.Stopwatch.stop", "com.google.common.base.Stopwatch.elapsed", "java.lang.StringBuilder.append"], "call_func_parameter": [["java.lang.String"], [""], ["int"], [""], [""], [""], [""], ["java.lang.String"], [""], ["java.lang.Class"], [""], ["java.lang.String"], [""], [""], ["java.lang.String"], ["java.lang.String", "java.io.File", "boolean", "com.google.api.ads.adwords.awreporting.model.csv.ModifiedCsvToBean", "com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy", "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType", "com.google.api.ads.adwords.awreporting.model.persistence.EntityPersister", "int"], ["java.lang.Runnable"], ["java.lang.Object"], ["java.util.Collection"], ["java.lang.String", "java.lang.Throwable"], [""], [""], ["java.util.concurrent.TimeUnit"], ["long"]], "passed_comments": "/"}, {"index": "6", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/processors/file/FileReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.file.FileReportProcessor.processLocalFiles", "methodParameterType": "String#ReportDefinitionReportType#Collection<File>#DateRangeAndType#", "methodParameterName": "topCustomerId#reportType#localFiles#dateRangeAndType#", "methodBody": "private void processLocalFiles(\n      String topCustomerId,\n      ReportDefinitionReportType reportType,\n      Collection<File> localFiles,\n      DateRangeAndType dateRangeAndType)\n      throws ReportProcessingException {\n    Class<? extends Report> reportBeanClass =\n        csvReportEntitiesMapping.getReportBeanClass(reportType);\n    processFiles(topCustomerId, reportBeanClass, localFiles, true, dateRangeAndType);\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#BooleanLiteral#SimpleName#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType(SimpleType(SimpleName)SimpleName)SimpleType)WildcardType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Process the local files delegating the call to the concrete implementation.", "call_func_name": ["com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.getReportBeanClass", "com.google.api.ads.adwords.awreporting.processors.file.FileReportProcessor.processFiles"], "call_func_parameter": [["com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionReportType"], ["java.lang.String", "java.lang.Class", "java.util.Collection", "boolean", "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.getReportBeanClass": "Retrieves the bean class that maps the report data in the CSV file."}, {"com.google.api.ads.adwords.awreporting.processors.file.FileReportProcessor.processFiles": "Each of the files downloaded is processed using  {@code FileRunnableProcessor} to read the CSV,map to a  {@code Report}, and then persist to configured database."}, {"com.google.api.ads.adwords.awreporting.processors.file.FileReportProcessor.processFiles": "Each of the files downloaded is processed using  {@code FileRunnableProcessor} to read the CSV,map to a  {@code Report}, and then persist to configured database."}]}, {"index": "7", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/processors/file/FileReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.file.FileReportProcessor.processInputFiles", "methodParameterType": "String#String#Collection<File>#DateRangeAndType#", "methodParameterName": "topCustomerId#reportTypeName#localFiles#dateRangeAndType#", "methodBody": "public void processInputFiles(\n      String topCustomerId,\n      String reportTypeName,\n      Collection<File> localFiles,\n      DateRangeAndType dateRangeAndType)\n      throws ReportProcessingException {\n\n    Class<? extends Report> reportBeanClass;\n    try {\n      ReportDefinitionReportType reportType = ReportDefinitionReportType.valueOf(reportTypeName);\n      reportBeanClass = csvReportEntitiesMapping.getReportBeanClass(reportType);\n    } catch (IllegalArgumentException e) {\n      reportBeanClass = csvReportEntitiesMapping.getExperimentalReportBeanClass(reportTypeName);\n    }\n    if (reportBeanClass == null) {\n      throw new IllegalArgumentException(\"Report type not found: \" + reportTypeName);\n    }\n\n    processFiles(topCustomerId, reportBeanClass, localFiles, false, dateRangeAndType);\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#CatchClause#TryStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleType#StringLiteral#SimpleName#InfixExpression#ClassInstanceCreation#ThrowStatement#Block#IfStatement#SimpleName#SimpleName#SimpleName#SimpleName#BooleanLiteral#SimpleName#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType(SimpleType(SimpleName)SimpleName)SimpleType)WildcardType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName)VariableDeclarationFragment)VariableDeclarationStatement(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block)CatchClause)TryStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)ClassInstanceCreation)ThrowStatement)Block)IfStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Process the input files delegating the call to the concrete implementation.", "call_func_name": ["com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionReportType.valueOf", "com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.getReportBeanClass", "com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.getExperimentalReportBeanClass", "java.lang.StringBuilder.<init>", "java.lang.StringBuilder.append", "java.lang.StringBuilder.toString", "java.lang.IllegalArgumentException.<init>", "com.google.api.ads.adwords.awreporting.processors.file.FileReportProcessor.processFiles"], "call_func_parameter": [["java.lang.String"], ["com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionReportType"], ["java.lang.String"], [""], ["java.lang.String"], [""], ["java.lang.String"], ["java.lang.String", "java.lang.Class", "java.util.Collection", "boolean", "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.getReportBeanClass": "Retrieves the bean class that maps the report data in the CSV file."}, {"com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.getExperimentalReportBeanClass": "Retrieves the bean class that maps the report data in the CSV file, and it's in the experimental set."}, {"com.google.api.ads.adwords.awreporting.processors.file.FileReportProcessor.processFiles": "Each of the files downloaded is processed using  {@code FileRunnableProcessor} to read the CSV,map to a  {@code Report}, and then persist to configured database."}, {"com.google.api.ads.adwords.awreporting.processors.file.FileReportProcessor.processFiles": "Each of the files downloaded is processed using  {@code FileRunnableProcessor} to read the CSV,map to a  {@code Report}, and then persist to configured database."}]}, {"index": "8", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/processors/file/FileReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.file.FileReportProcessor.deleteTemporaryFiles", "methodParameterType": "Collection<File>#ReportDefinitionReportType#", "methodParameterName": "localFiles#reportType#", "methodBody": "private void deleteTemporaryFiles(\n      Collection<File> localFiles, ReportDefinitionReportType reportType) {\n\n    // Delete temporary report files\n    logger.info(\"\\n Deleting temporary report files after Parsing...\");\n    for (File file : localFiles) {\n      file.delete();\n      logger.trace(\".\");\n    }\n    logger.info(\"\\n ** Finished: \" + reportType.name() + \" **\");\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#Block#EnhancedForStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleName)SimpleName(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement)Block)EnhancedForStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Deletes the local files used as temporary containers.", "call_func_name": ["org.slf4j.Logger.info", "java.util.Collection.iterator", "java.util.Iterator.hasNext", "java.util.Iterator.next", "java.io.File.delete", "org.slf4j.Logger.trace", "java.lang.StringBuilder.<init>", "java.lang.StringBuilder.append", "com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionReportType.name", "java.lang.StringBuilder.toString"], "call_func_parameter": [["java.lang.String"], [""], [""], [""], [""], ["java.lang.String"], [""], ["java.lang.String"], [""], [""]], "passed_comments": "/"}, {"index": "9", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/processors/ReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.ReportProcessor", "methodParameterType": "Integer#Integer#Authenticator#", "methodParameterName": "reportRowsSetSize#numberOfReportProcessors#authenticator#", "methodBody": "@Autowired\n  public ReportProcessor(\n      Integer reportRowsSetSize, Integer numberOfReportProcessors, Authenticator authenticator)\n      throws ReportProcessingException {\n    Preconditions.checkNotNull(reportRowsSetSize, \"ReportRowSetSize cannot be null!\");\n    Preconditions.checkNotNull(\n        numberOfReportProcessors, \"NumberOfReportProcessors cannot be null!\");\n    Preconditions.checkNotNull(authenticator, \"Authenticator cannot be null!\");\n    Preconditions.checkArgument(reportRowsSetSize > 0, \"ReportRowSetSize must be > 0\");\n    Preconditions.checkArgument(\n        numberOfReportProcessors > 0, \"NumberOfReportProcessors must be > 0\");\n    \n    this.reportRowsSetSize = reportRowsSetSize.intValue();\n    this.numberOfReportProcessors = numberOfReportProcessors.intValue();\n\n    try {\n      sessionBuilder = authenticator.authenticate();\n    } catch (OAuthException e) {\n      throw new ReportProcessingException(\"Failed to authenticate AdWordsSession.\", e);\n    }\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#Modifier#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#NumberLiteral#InfixExpression#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#NumberLiteral#InfixExpression#StringLiteral#MethodInvocation#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#StringLiteral#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(SimpleName)SimpleName(NumberLiteral)NumberLiteral)InfixExpression(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(SimpleName)SimpleName(NumberLiteral)NumberLiteral)InfixExpression(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement(TryStatement(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(StringLiteral)StringLiteral(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement)Block)MethodDeclaration", "methodDoc": "Constructor.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "10", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/processors/ReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.generateReportsForManagerAccount", "methodParameterType": "String#DateRangeAndType#Set<Long>#Properties#", "methodParameterName": "topCustomerId#dateRangeAndType#accountIdsSet#properties#", "methodBody": "public void generateReportsForManagerAccount(\n      String topCustomerId,\n      DateRangeAndType dateRangeAndType,\n      Set<Long> accountIdsSet,\n      Properties properties)\n      throws ReportProcessingException {\n    logger.info(\"*** Retrieving account IDs ***\");\n\n    if (accountIdsSet == null || accountIdsSet.size() == 0) {\n      boolean excludeHiddenAccounts = getExcludeHiddenAccounts(properties);\n      accountIdsSet = retrieveAccountIds(topCustomerId, excludeHiddenAccounts);\n    } else {\n      logger.info(\"Accounts loaded from file.\");\n    }\n\n    ReportingConfiguration reportingConfig = getReportingConfiguration(properties);\n    sessionBuilder.withReportingConfiguration(reportingConfig);\n\n    logger.info(\"*** Generating Reports for \" + accountIdsSet.size() + \" accounts ***\");\n    Stopwatch stopwatch = Stopwatch.createStarted();\n    Set<ReportDefinitionReportType> reports = csvReportEntitiesMapping.getDefinedReports();\n\n    // reports\n    Set<Object> propertiesKeys = properties.keySet();\n    for (Object key : propertiesKeys) {\n\n      String reportDefinitionKey = key.toString();\n      ReportDefinitionReportType reportType = extractReportTypeFromKey(reportDefinitionKey);\n      if (reportType != null && reports.contains(reportType)) {\n        try {\n          downloadAndProcess(\n              topCustomerId,\n              reportType,\n              dateRangeAndType,\n              accountIdsSet,\n              reportDefinitionKey,\n              properties);\n        } catch (ReportProcessingException e) {\n          logger.error(\"Unable to download and process \" + reportType + \" for \" + topCustomerId, e);\n        }\n      }\n    }\n\n    stopwatch.stop();\n    logger.info(\n        \"*** Finished processing all reports in \"\n            + stopwatch.elapsed(TimeUnit.SECONDS)\n            + \" seconds ***\\n\");\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#MethodInvocation#NumberLiteral#InfixExpression#InfixExpression#PrimitiveType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#InfixExpression#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#SimpleName#StringLiteral#SimpleName#InfixExpression#SimpleName#MethodInvocation#ExpressionStatement#Block#CatchClause#TryStatement#Block#IfStatement#Block#EnhancedForStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(IfStatement(InfixExpression(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(NumberLiteral)NumberLiteral)InfixExpression)InfixExpression(Block(VariableDeclarationStatement(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement)Block)IfStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleName)SimpleName(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)CatchClause)TryStatement)Block)IfStatement)Block)EnhancedForStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Generate all the mapped reports of (optionally) given account IDs under the specified manager account.", "call_func_name": ["org.slf4j.Logger.info", "java.util.Set.size", "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.getExcludeHiddenAccounts", "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.retrieveAccountIds", "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.getReportingConfiguration", "java.lang.StringBuilder.<init>", "java.lang.StringBuilder.append", "java.lang.StringBuilder.append", "java.lang.StringBuilder.toString", "com.google.common.base.Stopwatch.createStarted", "com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.getDefinedReports", "java.util.Properties.keySet", "java.util.Set.iterator", "java.util.Iterator.hasNext", "java.util.Iterator.next", "java.lang.Object.toString", "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.extractReportTypeFromKey", "java.util.Set.contains", "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.downloadAndProcess", "java.lang.StringBuilder.append", "org.slf4j.Logger.error", "com.google.common.base.Stopwatch.stop", "com.google.common.base.Stopwatch.elapsed", "java.lang.StringBuilder.append"], "call_func_parameter": [["java.lang.String"], [""], ["java.util.Properties"], ["java.lang.String", "boolean"], ["java.util.Properties"], [""], ["java.lang.String"], ["int"], [""], [""], [""], [""], [""], [""], [""], [""], ["java.lang.String"], ["java.lang.Object"], ["java.lang.String", "com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionReportType", "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType", "java.util.Set", "java.lang.String", "java.util.Properties"], ["java.lang.Object"], ["java.lang.String", "java.lang.Throwable"], [""], ["java.util.concurrent.TimeUnit"], ["long"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.processors.ReportProcessor.retrieveAccountIds": "Uses the API to retrieve the managed accounts and extract their IDs."}, {"com.google.api.ads.adwords.awreporting.processors.ReportProcessor.retrieveAccountIds": "Uses the API to retrieve the managed accounts and extract their IDs."}, {"com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.getDefinedReports": "Retrieves the report definitions defined by the report bean classes."}, {"com.google.api.ads.adwords.awreporting.processors.ReportProcessor.extractReportTypeFromKey": "Extracts the report type name from the given key name."}, {"com.google.api.ads.adwords.awreporting.processors.ReportProcessor.extractReportTypeFromKey": "Extracts the report type name from the given key name."}, {"com.google.api.ads.adwords.awreporting.processors.ReportProcessor.downloadAndProcess": "Downloads all the files from the API and process all the rows, saving the data to the configured database."}, {"com.google.api.ads.adwords.awreporting.processors.ReportProcessor.downloadAndProcess": "Downloads all the files from the API and process all the rows, saving the data to the configured database."}]}, {"index": "11", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/processors/ReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.downloadAndProcess", "methodParameterType": "String#ReportDefinitionReportType#DateRangeAndType#Set<Long>#String#Properties#", "methodParameterName": "topCustomerId#reportType#dateRangeAndType#accountIdList#reportDefinitionKey#properties#", "methodBody": "protected abstract void downloadAndProcess(\n      String topCustomerId,\n      ReportDefinitionReportType reportType,\n      DateRangeAndType dateRangeAndType,\n      Set<Long> accountIdList,\n      String reportDefinitionKey,\n      Properties properties)\n      throws ReportProcessingException;", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType)MethodDeclaration", "methodDoc": "Downloads all the files from the API and process all the rows, saving the data to the configured database.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "12", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/processors/ReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.retrieveAccountIds", "methodParameterType": "String#boolean#", "methodParameterName": "topCustomerId#excludeHiddenAccounts#", "methodBody": "public Set<Long> retrieveAccountIds(String topCustomerId, boolean excludeHiddenAccounts)\n      throws ReportProcessingException {\n    logger.info(\"Client customer IDs being retrieved from the API. This may take a while...\");\n    logger.info(\"Property ExcludeHiddenAccounts=\" + String.valueOf(excludeHiddenAccounts));\n    \n    try {\n      ImmutableAdWordsSession session =\n          AdWordsSessionUtil.buildImmutableSessionForCid(sessionBuilder, topCustomerId);\n      Set<Long> accountIdsSet =\n          new ManagedCustomerDelegate(session, excludeHiddenAccounts).getClientCustomerIds();\n\n      cacheAccounts(accountIdsSet);\n      return accountIdsSet;\n    } catch (ValidationException e) {\n      throw new ReportProcessingException(\n          \"Failed to create valid session for account \" + topCustomerId, e);\n    } catch (ApiException e) {\n      throw new ReportProcessingException(\n          \"Failed to retrieve account IDs under \" + topCustomerId, e);\n    }\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#SimpleName#MethodInvocation#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#ClassInstanceCreation#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#ReturnStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#StringLiteral#SimpleName#InfixExpression#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#StringLiteral#SimpleName#InfixExpression#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression)MethodInvocation)ExpressionStatement(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleName)SimpleName)ClassInstanceCreation(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement)Block)MethodDeclaration", "methodDoc": "Uses the API to retrieve the managed accounts and extract their IDs.", "call_func_name": ["org.slf4j.Logger.info", "java.lang.StringBuilder.<init>", "java.lang.StringBuilder.append", "java.lang.String.valueOf", "java.lang.StringBuilder.toString", "com.google.api.ads.adwords.awreporting.util.ManagedCustomerDelegate.<init>", "com.google.api.ads.adwords.awreporting.util.ManagedCustomerDelegate.getClientCustomerIds", "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.cacheAccounts", "com.google.api.ads.adwords.awreporting.ReportProcessingException.<init>"], "call_func_parameter": [["java.lang.String"], [""], ["java.lang.String"], ["boolean"], [""], ["com.google.api.ads.adwords.lib.client.AdWordsSession", "boolean"], [""], ["java.util.Set"], ["java.lang.String", "java.lang.Throwable"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.util.ManagedCustomerDelegate.getClientCustomerIds": "Gets all the client customer IDs for the  {@link AdWordsSession}. <p>The accounts are read in complete, and after all accounts have been retrieved, their IDs are extracted and returned in a  {@code Set}."}, {"com.google.api.ads.adwords.awreporting.util.ManagedCustomerDelegate.getClientCustomerIds": "Gets all the client customer IDs for the  {@link AdWordsSession}. <p>The accounts are read in complete, and after all accounts have been retrieved, their IDs are extracted and returned in a  {@code Set}."}, {"com.google.api.ads.adwords.awreporting.processors.ReportProcessor.cacheAccounts": "Caches the accounts into a temporary file."}, {"com.google.api.ads.adwords.awreporting.processors.ReportProcessor.cacheAccounts": "Caches the accounts into a temporary file."}]}, {"index": "13", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/processors/ReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.cacheAccounts", "methodParameterType": "Set<Long>#", "methodParameterName": "accountIdsSet#", "methodBody": "private void cacheAccounts(Set<Long> accountIdsSet) {\n    String nowFormat = TIMESTAMPFORMAT.print(DateTime.now());\n    \n    File tempFile = null;\n    try {\n      tempFile = File.createTempFile(nowFormat + \"-accounts-ids\", \".txt\");\n      logger.info(\"Cache file created for accounts: \" + tempFile.getAbsolutePath());\n    } catch (IOException e) {\n      logger.error(\n          \"Could not create temporary file with the accounts. Accounts won't be cached.\", e);\n    }\n\n    try (OutputStreamWriter writer =\n        new OutputStreamWriter(new FileOutputStream(tempFile), StandardCharsets.UTF_8)) {\n      for (Long accountId : accountIdsSet) {\n        writer.write(Long.toString(accountId) + \"\\n\");\n      }\n      logger.info(\"All account IDs added to cache file.\");\n    } catch (IOException e) {\n      logger.error(\"Failed ot cache accounts into temporary file.\", e);\n    }\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#StringLiteral#InfixExpression#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#InfixExpression#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#SimpleName#MethodInvocation#ExpressionStatement#Block#CatchClause#TryStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#SimpleName#SimpleName#QualifiedName#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationExpression#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#Block#EnhancedForStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#SimpleName#MethodInvocation#ExpressionStatement#Block#CatchClause#TryStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(TryStatement(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(SimpleName)SimpleName(StringLiteral)StringLiteral)InfixExpression(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression)MethodInvocation)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)CatchClause)TryStatement(TryStatement(VariableDeclarationExpression(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationExpression(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleName)SimpleName(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement)Block)EnhancedForStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)CatchClause)TryStatement)Block)MethodDeclaration", "methodDoc": "Caches the accounts into a temporary file.", "call_func_name": ["org.joda.time.DateTime.now", "org.joda.time.format.DateTimeFormatter.print", "java.lang.StringBuilder.<init>", "java.lang.StringBuilder.append", "java.lang.StringBuilder.toString", "java.io.File.createTempFile", "java.io.File.getAbsolutePath", "org.slf4j.Logger.info", "org.slf4j.Logger.error", "java.io.FileOutputStream.<init>", "java.io.OutputStreamWriter.<init>", "java.util.Set.iterator", "java.util.Iterator.hasNext", "java.util.Iterator.next", "java.lang.Long.longValue", "java.lang.Long.toString", "java.io.OutputStreamWriter.write", "java.io.OutputStreamWriter.close", "java.lang.Throwable.addSuppressed"], "call_func_parameter": [[""], ["org.joda.time.ReadableInstant"], [""], ["java.lang.String"], [""], ["java.lang.String", "java.lang.String"], [""], ["java.lang.String"], ["java.lang.String", "java.lang.Throwable"], ["java.io.File"], ["java.io.OutputStream", "java.nio.charset.Charset"], [""], [""], [""], [""], ["long"], ["java.lang.String"], [""], ["java.lang.Throwable"]], "passed_comments": "/"}, {"index": "14", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/processors/ReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.getReportDefinition", "methodParameterType": "ReportDefinitionReportType#DateRangeAndType#String#Properties#", "methodParameterName": "reportDefinitionReportType#dateRangeAndType#reportDefinitionKey#properties#", "methodBody": "protected ReportDefinition getReportDefinition(\n      ReportDefinitionReportType reportDefinitionReportType,\n      DateRangeAndType dateRangeAndType,\n      String reportDefinitionKey,\n      Properties properties) {\n\n    // Create the Selector with all the fields defined in the Mapping\n    Selector selector = new Selector();\n\n    List<String> reportFields =\n        csvReportEntitiesMapping.retrievePropertiesToSelect(reportDefinitionReportType);\n\n    // Add the inclusions from the properties file\n    List<String> reportFieldsToInclude = getReportInclusions(reportDefinitionKey, properties);\n    for (String reportField : reportFields) {\n      if (reportFieldsToInclude.contains(reportField)) {\n        selector.getFields().add(reportField);\n      }\n    }\n    adjustDateRange(reportDefinitionReportType, dateRangeAndType, selector);\n\n    return instantiateReportDefinition(\n        reportDefinitionReportType, dateRangeAndType.getType(), selector);\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#EnhancedForStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleName)SimpleName(Block(IfStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(ExpressionStatement(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)EnhancedForStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Creates the complete report definition with all the dates and types properly set.", "call_func_name": ["com.google.api.ads.adwords.lib.jaxb.v201809.Selector.<init>", "com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.retrievePropertiesToSelect", "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.getReportInclusions", "java.util.List.iterator", "java.util.Iterator.hasNext", "java.util.Iterator.next", "java.util.List.contains", "com.google.api.ads.adwords.lib.jaxb.v201809.Selector.getFields", "java.util.List.add", "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.adjustDateRange", "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType.getType", "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.instantiateReportDefinition"], "call_func_parameter": [[""], ["com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionReportType"], ["java.lang.String", "java.util.Properties"], [""], [""], [""], ["java.lang.Object"], [""], ["java.lang.Object"], ["com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionReportType", "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType", "com.google.api.ads.adwords.lib.jaxb.v201809.Selector"], [""], ["com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionReportType", "com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionDateRangeType", "com.google.api.ads.adwords.lib.jaxb.v201809.Selector"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.retrievePropertiesToSelect": "Retrieves the properties that should be selected in the report."}, {"com.google.api.ads.adwords.awreporting.processors.ReportProcessor.getReportInclusions": "Look for properties to include in the reports."}, {"com.google.api.ads.adwords.awreporting.processors.ReportProcessor.getReportInclusions": "Look for properties to include in the reports."}, {"com.google.api.ads.adwords.awreporting.processors.ReportProcessor.adjustDateRange": "Adjusts the date range in case of a custom date type. The adjustment do not apply for certain reports, like  {@code CAMPAIGN_NEGATIVE_KEYWORDS_PERFORMANCE_REPORT}."}, {"com.google.api.ads.adwords.awreporting.processors.ReportProcessor.adjustDateRange": "Adjusts the date range in case of a custom date type. The adjustment do not apply for certain reports, like  {@code CAMPAIGN_NEGATIVE_KEYWORDS_PERFORMANCE_REPORT}."}, {"com.google.api.ads.adwords.awreporting.processors.ReportProcessor.instantiateReportDefinition": "Instantiates the report definition, setting all the correct formats."}, {"com.google.api.ads.adwords.awreporting.processors.ReportProcessor.instantiateReportDefinition": "Instantiates the report definition, setting all the correct formats."}]}, {"index": "15", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/processors/ReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.extractReportTypeFromKey", "methodParameterType": "String#", "methodParameterName": "keyName#", "methodBody": "private ReportDefinitionReportType extractReportTypeFromKey(String keyName) {\n    int indexOfDollar = keyName.indexOf(REPORT_KEY_SEPARATOR);\n    if (indexOfDollar > 0) {\n      keyName = keyName.substring(0, indexOfDollar);\n    }\n    try {\n      return ReportDefinitionReportType.valueOf(keyName);\n    } catch (IllegalArgumentException e) {\n      return null;\n    }\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NumberLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#NumberLiteral#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#NullLiteral#ReturnStatement#Block#CatchClause#TryStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NumberLiteral)NumberLiteral)InfixExpression(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block)IfStatement(TryStatement(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(NullLiteral)NullLiteral)ReturnStatement)Block)CatchClause)TryStatement)Block)MethodDeclaration", "methodDoc": "Extracts the report type name from the given key name.", "call_func_name": ["java.lang.String.indexOf", "java.lang.String.substring", "com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionReportType.valueOf"], "call_func_parameter": [["int"], ["int", "int"], ["java.lang.String"]], "passed_comments": "/"}, {"index": "16", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/processors/ReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.adjustDateRange", "methodParameterType": "ReportDefinitionReportType#DateRangeAndType#Selector#", "methodParameterName": "reportDefinitionReportType#dateRangeAndType#selector#", "methodBody": "protected void adjustDateRange(\n      ReportDefinitionReportType reportDefinitionReportType,\n      DateRangeAndType dateRangeAndType,\n      Selector selector) {\n    if (dateRangeAndType.getType().equals(ReportDefinitionDateRangeType.CUSTOM_DATE)\n        && csvReportEntitiesMapping.supportsDateRange(reportDefinitionReportType)) {\n      selector.setDateRange(dateRangeAndType.getDateRange());\n    }\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#SimpleName#SimpleName#SimpleName#MethodInvocation#InfixExpression#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)MethodDeclaration", "methodDoc": "Adjusts the date range in case of a custom date type. The adjustment do not apply for certain reports, like  {@code CAMPAIGN_NEGATIVE_KEYWORDS_PERFORMANCE_REPORT}.", "call_func_name": ["com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType.getType", "com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionDateRangeType.equals", "com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.supportsDateRange", "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType.getDateRange", "com.google.api.ads.adwords.lib.jaxb.v201809.Selector.setDateRange"], "call_func_parameter": [[""], ["java.lang.Object"], ["com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionReportType"], [""], ["com.google.api.ads.adwords.lib.jaxb.v201809.DateRange"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.supportsDateRange": "Checks whether the specified report type supports date range."}]}, {"index": "17", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/processors/ReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.instantiateReportDefinition", "methodParameterType": "ReportDefinitionReportType#ReportDefinitionDateRangeType#Selector#", "methodParameterName": "reportDefinitionReportType#dateRangeType#selector#", "methodBody": "protected ReportDefinition instantiateReportDefinition(\n      ReportDefinitionReportType reportDefinitionReportType,\n      ReportDefinitionDateRangeType dateRangeType,\n      Selector selector) {\n\n    // Create the Report Definition\n    ReportDefinition reportDefinition = new ReportDefinition();\n    reportDefinition.setReportName(\n        REPORT_PREFIX + reportDefinitionReportType.value() + \" \" + System.currentTimeMillis());\n    reportDefinition.setDateRangeType(dateRangeType);\n    reportDefinition.setReportType(reportDefinitionReportType);\n    reportDefinition.setDownloadFormat(DownloadFormat.GZIPPED_CSV);\n    reportDefinition.setSelector(selector);\n    return reportDefinition;\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#StringLiteral#SimpleName#SimpleName#MethodInvocation#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Instantiates the report definition, setting all the correct formats.", "call_func_name": ["com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinition.<init>", "java.lang.StringBuilder.<init>", "java.lang.StringBuilder.append", "com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionReportType.value", "java.lang.System.currentTimeMillis", "java.lang.StringBuilder.append", "java.lang.StringBuilder.toString", "com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinition.setReportName", "com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinition.setDateRangeType", "com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinition.setReportType", "com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinition.setDownloadFormat", "com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinition.setSelector"], "call_func_parameter": [[""], [""], ["java.lang.String"], [""], [""], ["long"], [""], ["java.lang.String"], ["com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionDateRangeType"], ["com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionReportType"], ["com.google.api.ads.adwords.lib.jaxb.v201809.DownloadFormat"], ["com.google.api.ads.adwords.lib.jaxb.v201809.Selector"]], "passed_comments": "/"}, {"index": "18", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/processors/ReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.getReportInclusions", "methodParameterType": "String#Properties#", "methodParameterName": "reportDefinitionKey#properties#", "methodBody": "private List<String> getReportInclusions(String reportDefinitionKey, Properties properties) {\n    String propertyInclusions = properties.getProperty(reportDefinitionKey);\n    return Lists.newArrayList(\n        Splitter.on(',').omitEmptyStrings().trimResults().split(propertyInclusions));\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#CharacterLiteral#MethodInvocation#SimpleName#MethodInvocation#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(CharacterLiteral)CharacterLiteral)MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Look for properties to include in the reports.", "call_func_name": ["java.util.Properties.getProperty", "com.google.common.base.Splitter.on", "com.google.common.base.Splitter.omitEmptyStrings", "com.google.common.base.Splitter.trimResults", "com.google.common.base.Splitter.split", "com.google.common.collect.Lists.newArrayList"], "call_func_parameter": [["java.lang.String"], ["char"], [""], [""], ["java.lang.CharSequence"], ["java.lang.Iterable"]], "passed_comments": "/"}, {"index": "19", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/processors/stream/StreamingRunnableProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.stream.StreamingRunnableProcessor.StreamingRunnableProcessor", "methodParameterType": "String#ImmutableAdWordsSession#ReportDefinition#DateRangeAndType#ModifiedCsvToBean<R>#ReportEntityMappingStrategy<R>#EntityPersister#int#", "methodParameterName": "topCustomerId#session#reportDefinition#dateRangeAndType#csvToBean#mappingStrategy#entityPersister#reportRowsSetSize#", "methodBody": "public StreamingRunnableProcessor(\n      String topCustomerId,\n      ImmutableAdWordsSession session,\n      ReportDefinition reportDefinition,\n      DateRangeAndType dateRangeAndType,\n      ModifiedCsvToBean<R> csvToBean,\n      ReportEntityMappingStrategy<R> mappingStrategy,\n      EntityPersister entityPersister,\n      int reportRowsSetSize) {\n    this.topCustomerId = Preconditions.checkNotNull(topCustomerId, \"topCustomerId cannot be null\");\n    \n    this.session = Preconditions.checkNotNull(session, \"session cannot be null.\");\n    this.reportDefinition =\n        Preconditions.checkNotNull(reportDefinition, \"reportDefinition cannot be null\");\n    this.dateRangeAndType =\n        Preconditions.checkNotNull(dateRangeAndType, \"dateRangeAndType cannot be null\");\n    \n    this.csvToBean = Preconditions.checkNotNull(csvToBean, \"csvToBean cannot be null\");\n    this.mappingStrategy =\n        Preconditions.checkNotNull(mappingStrategy, \"mappingStrategy cannot be null\");\n    this.entityPersister =\n        Preconditions.checkNotNull(entityPersister, \"entityPersister cannot be null\");\n    this.reportRowsSetSize = reportRowsSetSize;\n    Preconditions.checkArgument(reportRowsSetSize > 0, \"reportRowsSetSize must be > 0\");\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#SimpleName#SimpleName#SimpleName#NumberLiteral#InfixExpression#StringLiteral#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(SimpleName)SimpleName(NumberLiteral)NumberLiteral)InfixExpression(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Constructor for  {@code Runnable} to download reports from AdWords API.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "20", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/processors/stream/StreamingRunnableProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.stream.StreamingRunnableProcessor.run", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "@Override\n  public void run() {\n    // Report Input Streams comes GZipped\n    try (GZIPInputStream gZIPInputStream = new GZIPInputStream(getReportInputStream())) {\n      AwReportCsvReader csvReader = createCsvReader(gZIPInputStream);\n      parseCsv(csvReader);\n    } catch (IOException | CsvReportParsingException e) {\n      logger.error(\"Error processing report for account: \" + session.getClientCustomerId(), e);\n    } catch (RuntimeException e) {\n      logger.error(\n          \"Runtime error processing report for account: \" + session.getClientCustomerId(), e);\n    }\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#MethodInvocation#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SimpleType#UnionType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#InfixExpression#SimpleName#MethodInvocation#ExpressionStatement#Block#CatchClause#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#InfixExpression#SimpleName#MethodInvocation#ExpressionStatement#Block#CatchClause#TryStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(Block(TryStatement(VariableDeclarationExpression(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(UnionType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)UnionType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)CatchClause(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)CatchClause)TryStatement)Block)MethodDeclaration", "methodDoc": "Executes the API call to download the report that was given when this  {@code Runnable} wascreated. <p>The download blocks this thread until it is finished, does the file copying and stream parsing. <p>There is also a retry logic implemented by this method, where the times retried depends on the value given in the constructor.", "call_func_name": ["com.google.api.ads.adwords.awreporting.processors.stream.StreamingRunnableProcessor.getReportInputStream", "java.util.zip.GZIPInputStream.<init>", "com.google.api.ads.adwords.awreporting.processors.stream.StreamingRunnableProcessor.createCsvReader", "com.google.api.ads.adwords.awreporting.processors.stream.StreamingRunnableProcessor.parseCsv", "java.util.zip.GZIPInputStream.close", "java.lang.Throwable.addSuppressed", "java.lang.StringBuilder.<init>", "java.lang.StringBuilder.append", "java.lang.StringBuilder.toString", "org.slf4j.Logger.error"], "call_func_parameter": [[""], ["java.io.InputStream"], ["java.io.InputStream"], ["com.google.api.ads.adwords.awreporting.model.csv.AwReportCsvReader"], [""], ["java.lang.Throwable"], [""], ["java.lang.String"], [""], ["java.lang.String", "java.lang.Throwable"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.processors.stream.StreamingRunnableProcessor.getReportInputStream": "Downloads the file from the API into an InputStream."}, {"com.google.api.ads.adwords.awreporting.processors.stream.StreamingRunnableProcessor.getReportInputStream": "Downloads the file from the API into an InputStream."}, {"com.google.api.ads.adwords.awreporting.processors.stream.StreamingRunnableProcessor.createCsvReader": "Creates the proper  {@link AwReportCsvReader} to parse the AW reports."}, {"com.google.api.ads.adwords.awreporting.processors.stream.StreamingRunnableProcessor.createCsvReader": "Creates the proper  {@link AwReportCsvReader} to parse the AW reports."}, {"com.google.api.ads.adwords.awreporting.processors.stream.StreamingRunnableProcessor.parseCsv": "Parse the CSV content and persist data."}, {"com.google.api.ads.adwords.awreporting.processors.stream.StreamingRunnableProcessor.parseCsv": "Parse the CSV content and persist data."}]}, {"index": "21", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/processors/stream/StreamingRunnableProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.stream.StreamingRunnableProcessor.createCsvReader", "methodParameterType": "InputStream#", "methodParameterName": "inputStream#", "methodBody": "private AwReportCsvReader createCsvReader(InputStream inputStream) throws IOException {\n    InputStreamReader reader = new InputStreamReader(inputStream, StandardCharsets.UTF_8);\n    return new AwReportCsvReader(reader, false, false);\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#QualifiedName#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#BooleanLiteral#BooleanLiteral#ClassInstanceCreation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral(BooleanLiteral)BooleanLiteral)ClassInstanceCreation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Creates the proper  {@link AwReportCsvReader} to parse the AW reports.", "call_func_name": ["java.io.InputStreamReader.<init>", "com.google.api.ads.adwords.awreporting.model.csv.AwReportCsvReader.<init>"], "call_func_parameter": [["java.io.InputStream", "java.nio.charset.Charset"], ["java.io.Reader", "boolean", "boolean"]], "passed_comments": "/"}, {"index": "22", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/processors/stream/StreamingRunnableProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.stream.StreamingRunnableProcessor.getReportInputStream", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "private InputStream getReportInputStream() {\n    ReportDownloaderInterface reportDownloader =\n        AdWordsServicesUtil.getUtility(session, ReportDownloaderInterface.class);\n    \n    InputStream result = null;\n    try {\n      ReportDownloadResponse reportDownloadResponse =\n          reportDownloader.downloadReport(reportDefinition);\n      result = reportDownloadResponse.getInputStream();\n    } catch (ReportException | ReportDownloadResponseException e) {\n      logger.error(\n          \"Failed to download report stream for {} with account {}.\",\n          reportDefinition.getReportType(),\n          session.getClientCustomerId(),\n          e);\n    }\n\n    return result;\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleType#TypeLiteral#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SimpleType#UnionType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#ExpressionStatement#Block#CatchClause#TryStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(TypeLiteral(SimpleType(SimpleName)SimpleName)SimpleType)TypeLiteral)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(UnionType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)UnionType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)CatchClause)TryStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Downloads the file from the API into an InputStream.", "call_func_name": ["com.google.api.ads.adwords.awreporting.util.AdWordsServicesUtil.getUtility", "com.google.api.ads.adwords.lib.utils.v201809.ReportDownloaderInterface.downloadReport", "com.google.api.ads.adwords.lib.utils.ReportDownloadResponse.getInputStream", "com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinition.getReportType", "org.slf4j.Logger.error"], "call_func_parameter": [["com.google.api.ads.adwords.lib.client.AdWordsSession", "java.lang.Class"], ["com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinition"], [""], [""], ["java.lang.String", "java.lang.Object[]"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.util.AdWordsServicesUtil.getUtility": "Creates a new specific utility using the  {@link AdWordsServicesWithRateLimiter}."}, {"com.google.api.ads.adwords.awreporting.util.AdWordsServicesUtil.getUtility": "Creates a new specific utility using the  {@link AdWordsServicesWithRateLimiter}."}]}, {"index": "23", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/processors/stream/StreamingRunnableProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.stream.StreamingRunnableProcessor.parseCsv", "methodParameterType": "AwReportCsvReader#", "methodParameterName": "csvReader#", "methodBody": "private void parseCsv(AwReportCsvReader csvReader) throws CsvReportParsingException {\n    logger.debug(\"Starting parse of report rows...\");\n    CsvParserIterator<R> reportRowsList = csvToBean.lazyParse(mappingStrategy, csvReader);\n    logger.debug(\"Successfully finished parse of report rows.\");\n\n    logger.debug(\"Starting report persistence...\");\n    List<R> reportBuffer = Lists.newArrayList();\n    while (reportRowsList.hasNext()) {\n      R report = reportRowsList.next();\n      report.setCustomerId(StringsUtil.parseCustomerId(session.getClientCustomerId()));\n      report.setTopCustomerId(StringsUtil.parseCustomerId(topCustomerId));\n      report.setDateRangeType(dateRangeAndType.getTypeStr());\n      report.setStartDate(dateRangeAndType.getStartDateStr());\n      report.setEndDate(dateRangeAndType.getEndDateStr());\n      report.setRowId();\n      reportBuffer.add(report);\n\n      if (reportBuffer.size() >= reportRowsSetSize) {\n        entityPersister.persistReportEntities(reportBuffer);\n        reportBuffer.clear();\n      }\n    }\n    if (reportBuffer.size() > 0) {\n      entityPersister.persistReportEntities(reportBuffer);\n    }\n    logger.debug(\"Successfully finished report persistence.\");\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#SimpleName#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#WhileStatement#SimpleName#SimpleName#MethodInvocation#NumberLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(WhileStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(IfStatement(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)WhileStatement(IfStatement(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(NumberLiteral)NumberLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Parse the CSV content and persist data.", "call_func_name": ["org.slf4j.Logger.debug", "com.google.api.ads.adwords.awreporting.model.csv.ModifiedCsvToBean.lazyParse", "com.google.common.collect.Lists.newArrayList", "com.google.api.ads.adwords.awreporting.model.csv.CsvParserIterator.hasNext", "com.google.api.ads.adwords.awreporting.model.csv.CsvParserIterator.next", "com.google.api.ads.adwords.awreporting.model.util.StringsUtil.parseCustomerId", "com.google.api.ads.adwords.awreporting.model.entities.Report.setCustomerId", "com.google.api.ads.adwords.awreporting.model.entities.Report.setTopCustomerId", "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType.getTypeStr", "com.google.api.ads.adwords.awreporting.model.entities.Report.setDateRangeType", "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType.getStartDateStr", "com.google.api.ads.adwords.awreporting.model.entities.Report.setStartDate", "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType.getEndDateStr", "com.google.api.ads.adwords.awreporting.model.entities.Report.setEndDate", "com.google.api.ads.adwords.awreporting.model.entities.Report.setRowId", "java.util.List.add", "java.util.List.size", "com.google.api.ads.adwords.awreporting.model.persistence.EntityPersister.persistReportEntities", "java.util.List.clear"], "call_func_parameter": [["java.lang.String"], ["com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy", "com.google.api.ads.adwords.awreporting.model.csv.AwReportCsvReader"], [""], [""], [""], ["java.lang.String"], ["java.lang.Long"], ["java.lang.Long"], [""], ["java.lang.String"], [""], ["java.lang.String"], [""], ["java.lang.String"], [""], ["java.lang.Object"], [""], ["java.util.List"], [""]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.csv.ModifiedCsvToBean.lazyParse": "Parses the CSV lazily, letting the client class decide when getting new elements."}, {"com.google.api.ads.adwords.awreporting.model.util.StringsUtil.parseCustomerId": "Returns customer id as long with dashes removed or empty String."}, {"com.google.api.ads.adwords.awreporting.model.entities.Report.setRowId": "Sets the primary key for each Report record."}, {"com.google.api.ads.adwords.awreporting.model.persistence.EntityPersister.persistReportEntities": "Persists the report entities so they can be retrieved later."}]}, {"index": "24", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/processors/stream/StreamingReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.stream.StreamingReportProcessor.StreamingReportProcessor", "methodParameterType": "Integer#Integer#Authenticator#", "methodParameterName": "reportRowsSetSize#numberOfReportProcessors#authenticator#", "methodBody": "@Autowired\n  public StreamingReportProcessor(\n      @Value(value = \"${aw.report.processor.rows.size}\") Integer reportRowsSetSize,\n      @Value(value = \"${aw.report.processor.threads}\") Integer numberOfReportProcessors,\n      Authenticator authenticator)\n      throws ReportProcessingException {\n    super(reportRowsSetSize, numberOfReportProcessors, authenticator);\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#Modifier#SimpleName#SimpleName#SimpleName#StringLiteral#MemberValuePair#NormalAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#MemberValuePair#NormalAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SuperConstructorInvocation#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(NormalAnnotation(SimpleName)SimpleName(MemberValuePair(SimpleName)SimpleName(StringLiteral)StringLiteral)MemberValuePair)NormalAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(NormalAnnotation(SimpleName)SimpleName(MemberValuePair(SimpleName)SimpleName(StringLiteral)StringLiteral)MemberValuePair)NormalAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(SuperConstructorInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)SuperConstructorInvocation)Block)MethodDeclaration", "methodDoc": "Constructor.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "25", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/processors/stream/StreamingReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.stream.StreamingReportProcessor.downloadAndProcess", "methodParameterType": "String#ReportDefinitionReportType#DateRangeAndType#Set<Long>#String#Properties#", "methodParameterName": "topCustomerId#reportType#dateRangeAndType#accountIdList#reportDefinitionKey#properties#", "methodBody": "@Override\n  protected void downloadAndProcess(\n      String topCustomerId,\n      ReportDefinitionReportType reportType,\n      DateRangeAndType dateRangeAndType,\n      Set<Long> accountIdList,\n      String reportDefinitionKey,\n      Properties properties)\n      throws ReportProcessingException {\n    // Download Reports to local files and Generate Report objects\n    logger.info(\"\\n\\n ** Generating: \" + reportType.name() + \" **\");\n    logger.info(\" Processing reports...\");\n\n    ReportDefinition reportDefinition =\n        getReportDefinition(reportType, dateRangeAndType, reportDefinitionKey, properties);\n\n    Class<? extends Report> reportBeanClass =\n        this.csvReportEntitiesMapping.getReportBeanClass(reportType);\n\n    downloadAndProcessReports(\n        topCustomerId, reportBeanClass, accountIdList, reportDefinition, dateRangeAndType);\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType(SimpleType(SimpleName)SimpleName)SimpleType)WildcardType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Downloads all the files from the API and process all the rows, saving the data to the configured database.", "call_func_name": ["java.lang.StringBuilder.<init>", "java.lang.StringBuilder.append", "com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionReportType.name", "java.lang.StringBuilder.toString", "org.slf4j.Logger.info", "com.google.api.ads.adwords.awreporting.processors.stream.StreamingReportProcessor.getReportDefinition", "com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.getReportBeanClass", "com.google.api.ads.adwords.awreporting.processors.stream.StreamingReportProcessor.downloadAndProcessReports"], "call_func_parameter": [[""], ["java.lang.String"], [""], [""], ["java.lang.String"], ["com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionReportType", "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType", "java.lang.String", "java.util.Properties"], ["com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionReportType"], ["java.lang.String", "java.lang.Class", "java.util.Set", "com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinition", "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.getReportBeanClass": "Retrieves the bean class that maps the report data in the CSV file."}, {"com.google.api.ads.adwords.awreporting.processors.stream.StreamingReportProcessor.downloadAndProcessReports": "For each account, download report stream, map to a  {@code Report}, and then persist to configured database."}, {"com.google.api.ads.adwords.awreporting.processors.stream.StreamingReportProcessor.downloadAndProcessReports": "For each account, download report stream, map to a  {@code Report}, and then persist to configured database."}]}, {"index": "26", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/processors/stream/StreamingReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.stream.StreamingReportProcessor.downloadAndProcessReports", "methodParameterType": "String#Class<R>#Set<Long>#ReportDefinition#DateRangeAndType#", "methodParameterName": "topCustomerId#reportBeanClass#accountIdList#reportDefinition#dateRangeAndType#", "methodBody": "private <R extends Report> void downloadAndProcessReports(\n      String topCustomerId,\n      Class<R> reportBeanClass,\n      Set<Long> accountIdList,\n      ReportDefinition reportDefinition,\n      DateRangeAndType dateRangeAndType)\n      throws ReportProcessingException {\n    logger.info(\"Processing report streams...\");\n    Stopwatch stopwatch = Stopwatch.createStarted();\n    \n    ExecutorService executorService = Executors.newFixedThreadPool(numberOfReportProcessors);\n    List<Callable<Object>> taskJobs = Lists.newArrayList();\n\n    for (Long accountId : accountIdList) {\n      try {\n        logger.debug(\"Processing account: \" + accountId);\n\n        // We need to create a csvToBean and mappingStrategy for each thread\n        ModifiedCsvToBean<R> csvToBean = new ModifiedCsvToBean<R>();\n        ReportEntityMappingStrategy<R> mappingStrategy =\n            new ReportEntityMappingStrategy<R>(reportBeanClass);\n\n        ImmutableAdWordsSession accountSession =\n            AdWordsSessionUtil.buildImmutableSessionForCid(sessionBuilder, accountId);\n\n        StreamingRunnableProcessor<R> runnableProcessor =\n            new StreamingRunnableProcessor<R>(\n                topCustomerId,\n                accountSession,\n                reportDefinition,\n                dateRangeAndType,\n                csvToBean,\n                mappingStrategy,\n                persister,\n                reportRowsSetSize);\n        taskJobs.add(Executors.callable(runnableProcessor));\n      } catch (ValidationException e) {\n        logger.warn(\"Ignoring account (Error when processing): \" + accountId, e);\n      }\n    }\n\n    try {\n      executorService.invokeAll(taskJobs);\n    } catch (InterruptedException e) {\n      throw new ReportProcessingException(\n          \"StreamingReportProcessor encounters InterruptedException.\", e);\n    }\n    \n    executorService.shutdown();\n    stopwatch.stop();\n    logger.info(\n        \"*** Finished processing all reports in \"\n            + stopwatch.elapsed(TimeUnit.SECONDS)\n            + \" seconds ***\\n\");\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleName#SimpleType#TypeParameter#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#StringLiteral#SimpleName#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#SimpleName#InfixExpression#SimpleName#MethodInvocation#ExpressionStatement#Block#CatchClause#TryStatement#Block#EnhancedForStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#StringLiteral#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(TypeParameter(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)TypeParameter(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleName)SimpleName(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)CatchClause)TryStatement)Block)EnhancedForStatement(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(StringLiteral)StringLiteral(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "For each account, download report stream, map to a  {@code Report}, and then persist to configured database.", "call_func_name": ["org.slf4j.Logger.info", "com.google.common.base.Stopwatch.createStarted", "java.util.concurrent.Executors.newFixedThreadPool", "com.google.common.collect.Lists.newArrayList", "java.util.Set.iterator", "java.util.Iterator.hasNext", "java.util.Iterator.next", "java.lang.StringBuilder.<init>", "java.lang.StringBuilder.append", "java.lang.StringBuilder.append", "java.lang.StringBuilder.toString", "org.slf4j.Logger.debug", "com.google.api.ads.adwords.awreporting.model.csv.ModifiedCsvToBean.<init>", "com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy.<init>", "java.util.concurrent.Executors.callable", "java.util.List.add", "org.slf4j.Logger.warn", "java.util.concurrent.ExecutorService.invokeAll", "com.google.api.ads.adwords.awreporting.ReportProcessingException.<init>", "java.util.concurrent.ExecutorService.shutdown", "com.google.common.base.Stopwatch.stop", "com.google.common.base.Stopwatch.elapsed", "java.lang.StringBuilder.append"], "call_func_parameter": [["java.lang.String"], [""], ["int"], [""], [""], [""], [""], [""], ["java.lang.String"], ["java.lang.Object"], [""], ["java.lang.String"], [""], ["java.lang.Class"], ["java.lang.Runnable"], ["java.lang.Object"], ["java.lang.String", "java.lang.Throwable"], ["java.util.Collection"], ["java.lang.String", "java.lang.Throwable"], [""], [""], ["java.util.concurrent.TimeUnit"], ["long"]], "passed_comments": "/"}, {"index": "27", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/downloader/MultipleClientReportDownloader.java", "methodName": "com.google.api.ads.adwords.awreporting.downloader.MultipleClientReportDownloader.downloadReports", "methodParameterType": "AdWordsSession.Builder#ReportDefinition#Set<Long>#", "methodParameterName": "sessionBuilder#reportDefinition#clientCustomerIds#", "methodBody": "public Collection<File> downloadReports(\n      AdWordsSession.Builder sessionBuilder,\n      ReportDefinition reportDefinition,\n      Set<Long> clientCustomerIds)\n      throws ReportProcessingException {\n    ExecutorService executorService = Executors.newFixedThreadPool(numThreads);\n    Stopwatch stopwatch = Stopwatch.createStarted();\n    logger.info(\"Downloading {\" + reportDefinition.getReportType() + \"} reports...\");\n\n    List<Long> taskIds = Lists.newArrayList();\n    List<CallableReportDownloader> taskJobs = Lists.newArrayList();\n    Map<Long, String> failures = Maps.newHashMap();\n    ImmutableAdWordsSession session = null;\n    for (Long clientCustomerId : clientCustomerIds) {\n      try {\n        session = AdWordsSessionUtil.buildImmutableSessionForCid(sessionBuilder, clientCustomerId);\n      } catch (ValidationException e) {\n        logger.error(\"Failed to create valid adwords session for CID \" + clientCustomerId\n            + \", skipping it.\");\n        failures.put(clientCustomerId, e.getMessage());\n        continue;\n      }\n\n      taskIds.add(clientCustomerId);\n      taskJobs.add(genCallableReportDownloader(session, reportDefinition));\n    }\n\n    List<Future<File>> taskResults;\n    try {\n      //Note that invokeAll() returns results in the same sequence as input tasks.\n      taskResults = executorService.invokeAll(taskJobs);\n    } catch (InterruptedException e) {\n      throw new ReportProcessingException(\n        \"MultipleClientReportDownloader encounters InterruptedException.\", e);\n    }\n\n    List<File> results = Lists.newArrayList();\n    for (int i = 0; i < taskResults.size(); i++) {\n      try {\n        results.add(taskResults.get(i).get());\n      } catch (ExecutionException e) {\n        failures.put(taskIds.get(i), e.getMessage());\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        throw new ReportProcessingException(\n            \"MultiClientReportDownloader encounters InterruptedException.\", e);\n      }\n    }\n\n    executorService.shutdown();\n    stopwatch.stop();\n\n    logger.info(\"Downloaded reports for \" + clientCustomerIds.size() + \" accounts in \"\n        + stopwatch.elapsed(TimeUnit.SECONDS) + \" seconds.\");\n    logger.info(\"Result: \" +  results.size() + \" successes, \" + failures.size() + \" failures.\");\n    if (!failures.isEmpty()) {\n      StringBuilder sb = new StringBuilder(\"*** Account IDs of download failures ***\");\n      sb.append(SEPARATOR);\n      sb.append(Joiner.on(SEPARATOR).withKeyValueSeparator(\": \").join(failures));\n      logger.error(sb.toString());\n    }\n\n    return results;\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#SimpleName#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#ContinueStatement#Block#CatchClause#TryStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#EnhancedForStatement#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#ParameterizedType#SimpleName#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#StringLiteral#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#PrimitiveType#SimpleName#NumberLiteral#VariableDeclarationFragment#VariableDeclarationExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#InfixExpression#SimpleName#PostfixExpression#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#CatchClause#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#StringLiteral#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#Block#ForStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#StringLiteral#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#StringLiteral#SimpleName#SimpleName#MethodInvocation#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#PrefixExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#StringLiteral#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#StringLiteral#MethodInvocation#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleName)SimpleName(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement(ContinueStatement)ContinueStatement)Block)CatchClause)TryStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block)EnhancedForStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName)VariableDeclarationFragment)VariableDeclarationStatement(TryStatement(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(StringLiteral)StringLiteral(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ForStatement(VariableDeclarationExpression(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(NumberLiteral)NumberLiteral)VariableDeclarationFragment)VariableDeclarationExpression(InfixExpression(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression(PostfixExpression(SimpleName)SimpleName)PostfixExpression(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block)CatchClause(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(StringLiteral)StringLiteral(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement)Block)ForStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement(IfStatement(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(StringLiteral)StringLiteral)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Downloads the specified report for all specified CIDs.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "28", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/downloader/MultipleClientReportDownloader.java", "methodName": "com.google.api.ads.adwords.awreporting.downloader.MultipleClientReportDownloader.genCallableReportDownloader", "methodParameterType": "ImmutableAdWordsSession#ReportDefinition#", "methodParameterName": "session#reportDefinition#", "methodBody": "protected CallableReportDownloader genCallableReportDownloader(\n      ImmutableAdWordsSession session, ReportDefinition reportDefinition) {\n    return new CallableReportDownloader(session, reportDefinition);\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#ClassInstanceCreation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleName)SimpleName)ClassInstanceCreation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Generates a CallableReportDownloader for downloading report in a service thread.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "29", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/downloader/CallableReportDownloader.java", "methodName": "com.google.api.ads.adwords.awreporting.downloader.CallableReportDownloader.CallableReportDownloader", "methodParameterType": "ImmutableAdWordsSession#ReportDefinition#", "methodParameterName": "session#reportDefinition#", "methodBody": "public CallableReportDownloader(\n      ImmutableAdWordsSession session, ReportDefinition reportDefinition) {\n    this.session = Preconditions.checkNotNull(session, \"session cannot be null.\");\n    this.reportDefinition = Preconditions.checkNotNull(reportDefinition,\n        \"reportDefinition cannot be null.\");\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "@param session the adwords session used for downloading report", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "30", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/downloader/CallableReportDownloader.java", "methodName": "com.google.api.ads.adwords.awreporting.downloader.CallableReportDownloader.call", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "@Override\n  public File call() throws ReportProcessingException {\n    ReportDownloadResponse reportDownloadResponse = getReportDownloadResponse();\n\n    InputStream inputStream = reportDownloadResponse.getInputStream();\n    return handleReportStreamResult(inputStream);\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Downloads report from API (with retry logic) and returns a  {@link File} object.", "call_func_name": ["com.google.api.ads.adwords.awreporting.downloader.CallableReportDownloader.call"], "call_func_parameter": [[""]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.downloader.CallableReportDownloader.call": "Downloads report from API (with retry logic) and returns a  {@link File} object."}, {"com.google.api.ads.adwords.awreporting.downloader.CallableReportDownloader.call": "Downloads report from API (with retry logic) and returns a  {@link File} object."}]}, {"index": "31", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/downloader/CallableReportDownloader.java", "methodName": "com.google.api.ads.adwords.awreporting.downloader.CallableReportDownloader.getReportDownloadResponse", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "@VisibleForTesting\n  ReportDownloadResponse getReportDownloadResponse() throws ReportProcessingException {\n    ReportDownloaderInterface reportDownloader =\n        AdWordsServicesUtil.getUtility(session, ReportDownloaderInterface.class);\n    \n    ReportDownloadResponse result = null;\n    try {\n      result = reportDownloader.downloadReport(reportDefinition);\n    } catch (ReportException | ReportDownloadResponseException e) {\n      String msg =\n          \"Failed to download report file for \"\n              + reportDefinition.getReportType()\n              + \" with account \"\n              + session.getClientCustomerId()\n              + \".\";\n      logger.error(msg, e);\n      throw new ReportProcessingException(msg, e);\n    }\n\n    return result;\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleType#TypeLiteral#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SimpleType#UnionType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#StringLiteral#SimpleName#SimpleName#MethodInvocation#StringLiteral#InfixExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(TypeLiteral(SimpleType(SimpleName)SimpleName)SimpleType)TypeLiteral)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(TryStatement(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(UnionType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)UnionType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the report download response from the API and retries on failure.", "call_func_name": ["com.google.api.ads.adwords.awreporting.util.AdWordsServicesUtil.getUtility", "com.google.api.ads.adwords.lib.utils.v201809.ReportDownloaderInterface.downloadReport", "java.lang.StringBuilder.<init>", "java.lang.StringBuilder.append", "com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinition.getReportType", "java.lang.StringBuilder.append", "java.lang.StringBuilder.toString", "org.slf4j.Logger.error", "com.google.api.ads.adwords.awreporting.ReportProcessingException.<init>"], "call_func_parameter": [["com.google.api.ads.adwords.lib.client.AdWordsSession", "java.lang.Class"], ["com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinition"], [""], ["java.lang.String"], [""], ["java.lang.Object"], [""], ["java.lang.String", "java.lang.Throwable"], ["java.lang.String", "java.lang.Throwable"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.util.AdWordsServicesUtil.getUtility": "Creates a new specific utility using the  {@link AdWordsServicesWithRateLimiter}."}, {"com.google.api.ads.adwords.awreporting.util.AdWordsServicesUtil.getUtility": "Creates a new specific utility using the  {@link AdWordsServicesWithRateLimiter}."}]}, {"index": "32", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/downloader/CallableReportDownloader.java", "methodName": "com.google.api.ads.adwords.awreporting.downloader.CallableReportDownloader.handleReportStreamResult", "methodParameterType": "InputStream#", "methodParameterName": "reportStream#", "methodBody": "@VisibleForTesting File handleReportStreamResult(InputStream reportStream)\n      throws ReportProcessingException {\n    Preconditions.checkState(reportStream != null, \"Cannot get report data: input stream is NULL.\");\n\n    // Get clientCustomerId from session and covert to Long type. The string field was set from\n    // Long type in AwqlReportDownloader, so it's able to parse back to Long.\n    Long clientCustomerId = Long.parseLong(session.getClientCustomerId());\n\n    try (GZIPInputStream gzipReportStream = new GZIPInputStream(reportStream)) {\n      String filenamePrefix = reportDefinition.getReportType() + \"-\" + clientCustomerId + \"-\";\n      File reportFile = File.createTempFile(filenamePrefix, \".csv\");\n\n      // Copy stream to CSV report.\n      logger.debug(\"Starting processing rules of \" + reportFile.getPath() + \" report...\");\n      Streams.copy(gzipReportStream, new FileOutputStream(reportFile));\n      logger.debug(\"... \" + reportFile.getPath()  + \" copied successfully.\");\n\n      return reportFile;\n    } catch (IOException e) {\n      String errorMessage = \"Failed to load report data from stream for \"\n          + reportDefinition.getReportType() + \" with account \"\n          + session.getClientCustomerId() + \".\";\n      logger.error(errorMessage, e);\n      throw new ReportProcessingException(errorMessage, e);\n    }\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#NullLiteral#InfixExpression#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#StringLiteral#SimpleName#StringLiteral#InfixExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#ReturnStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#StringLiteral#SimpleName#SimpleName#MethodInvocation#StringLiteral#InfixExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(TryStatement(VariableDeclarationExpression(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral(SimpleName)SimpleName(StringLiteral)StringLiteral)InfixExpression)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement)Block)MethodDeclaration", "methodDoc": "Transforms the downloaded result into a  {@link File} object.", "call_func_name": ["com.google.common.base.Preconditions.checkState", "java.lang.Long.parseLong", "java.lang.Long.valueOf", "java.util.zip.GZIPInputStream.<init>", "java.lang.StringBuilder.<init>", "com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinition.getReportType", "java.lang.StringBuilder.append", "java.lang.StringBuilder.append", "java.lang.StringBuilder.toString", "java.io.File.createTempFile", "java.io.File.getPath", "org.slf4j.Logger.debug", "java.io.FileOutputStream.<init>", "com.google.api.ads.common.lib.utils.Streams.copy", "java.util.zip.GZIPInputStream.close", "java.lang.Throwable.addSuppressed", "org.slf4j.Logger.error", "com.google.api.ads.adwords.awreporting.ReportProcessingException.<init>"], "call_func_parameter": [["boolean", "java.lang.Object"], ["java.lang.String"], ["long"], ["java.io.InputStream"], [""], [""], ["java.lang.Object"], ["java.lang.String"], [""], ["java.lang.String", "java.lang.String"], [""], ["java.lang.String"], ["java.io.File"], ["java.io.InputStream", "java.io.OutputStream"], [""], ["java.lang.Throwable"], ["java.lang.String", "java.lang.Throwable"], ["java.lang.String", "java.lang.Throwable"]], "passed_comments": "/"}, {"index": "33", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/downloader/DownloadSetting.java", "methodName": "com.google.api.ads.adwords.awreporting.downloader.DownloadSetting.applyToRateLimiter", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public void applyToRateLimiter() {\n    System.setProperty(\n        \"com.google.api.ads.adwords.extension.ratelimiter.ApiReportingRetryStrategy.maxAttemptsOnRateExceededError\",\n        String.valueOf(numAttempts));\n    System.setProperty(\n        \"com.google.api.ads.adwords.extension.ratelimiter.ApiReportingRetryStrategy.backoffIntervalOnRateExceededError\",\n        String.valueOf(backoffInterval));\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Apply relevant settings ( {@link #numAttempts},  {@link #backoffInterval}) to the RateLimiter regarding report downloading.", "call_func_name": ["java.lang.String.valueOf", "java.lang.System.setProperty"], "call_func_parameter": [["int"], ["java.lang.String", "java.lang.String"]], "passed_comments": "/"}, {"index": "34", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/util/ManagedCustomerDelegate.java", "methodName": "com.google.api.ads.adwords.awreporting.util.ManagedCustomerDelegate.getManagedCustomerServiceInterface", "methodParameterType": "AdWordsSession#", "methodParameterName": "adWordsSession#", "methodBody": "@VisibleForTesting\n  ManagedCustomerServiceInterface getManagedCustomerServiceInterface(\n      AdWordsSession adWordsSession){\n    return AdWordsServicesUtil.getService(adWordsSession, ManagedCustomerServiceInterface.class);\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#SimpleType#TypeLiteral#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(TypeLiteral(SimpleType(SimpleName)SimpleName)SimpleType)TypeLiteral)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Returns a ManagedCustomerServiceInterface with the given adWordsSession.", "call_func_name": ["com.google.api.ads.adwords.awreporting.util.AdWordsServicesUtil.getService"], "call_func_parameter": [["com.google.api.ads.adwords.lib.client.AdWordsSession", "java.lang.Class"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.util.AdWordsServicesUtil.getService": "Creates a new specific service using the  {@link AdWordsServicesWithRateLimiter}."}, {"com.google.api.ads.adwords.awreporting.util.AdWordsServicesUtil.getService": "Creates a new specific service using the  {@link AdWordsServicesWithRateLimiter}."}]}, {"index": "35", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/util/ManagedCustomerDelegate.java", "methodName": "com.google.api.ads.adwords.awreporting.util.ManagedCustomerDelegate.getClientCustomerIds", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public Set<Long> getClientCustomerIds() throws ApiException {\n    Set<Long> clientCustomerIdsSet = new LinkedHashSet<Long>();\n    ManagedCustomerPage managedCustomerPage;\n    int offset = 0;\n\n    SelectorBuilder builder = new SelectorBuilder();\n    Selector selector =\n        builder.fields(ManagedCustomerField.CustomerId)\n            .offset(offset)\n            .limit(NUMBER_OF_RESULTS)\n            .equals(ManagedCustomerField.CanManageClients, String.valueOf(false))\n            .equals(\"ExcludeHiddenAccounts\", String.valueOf(excludeHiddenAccounts))\n            .build();\n\n    do {\n      LOGGER.info(\"Retrieving next {} accounts.\", NUMBER_OF_RESULTS);\n\n      managedCustomerPage = managedCustomerService.get(selector);\n      addClientCustomerIds(managedCustomerPage, clientCustomerIdsSet);\n\n      LOGGER.info(\"{} accounts retrieved.\", clientCustomerIdsSet.size());\n      offset += NUMBER_OF_RESULTS;\n      selector = builder.increaseOffsetBy(NUMBER_OF_RESULTS).build();\n    } while (managedCustomerPage.getTotalNumEntries() > offset);\n\n    return clientCustomerIdsSet;\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#VariableDeclarationFragment#VariableDeclarationStatement#PrimitiveType#SimpleName#NumberLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#BooleanLiteral#MethodInvocation#MethodInvocation#SimpleName#StringLiteral#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#StringLiteral#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#Assignment#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#SimpleName#SimpleName#MethodInvocation#SimpleName#InfixExpression#DoStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(NumberLiteral)NumberLiteral)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral)MethodInvocation)MethodInvocation(SimpleName)SimpleName(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(DoStatement(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)InfixExpression)DoStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets all the client customer IDs for the  {@link AdWordsSession}. <p>The accounts are read in complete, and after all accounts have been retrieved, their IDs are extracted and returned in a  {@code Set}.", "call_func_name": ["java.util.LinkedHashSet.<init>", "com.google.api.ads.adwords.jaxws.utils.v201809.SelectorBuilder.<init>", "com.google.api.ads.adwords.jaxws.utils.v201809.SelectorBuilder.fields", "com.google.api.ads.adwords.jaxws.utils.v201809.SelectorBuilder.offset", "com.google.api.ads.adwords.jaxws.utils.v201809.SelectorBuilder.limit", "java.lang.String.valueOf", "com.google.api.ads.adwords.jaxws.utils.v201809.SelectorBuilder.equals", "com.google.api.ads.adwords.jaxws.utils.v201809.SelectorBuilder.equals", "com.google.api.ads.adwords.jaxws.utils.v201809.SelectorBuilder.build", "java.lang.Integer.valueOf", "org.slf4j.Logger.info", "com.google.api.ads.adwords.jaxws.v201809.mcm.ManagedCustomerServiceInterface.get", "com.google.api.ads.adwords.awreporting.util.ManagedCustomerDelegate.addClientCustomerIds", "java.util.Set.size", "com.google.api.ads.adwords.jaxws.utils.v201809.SelectorBuilder.increaseOffsetBy", "com.google.api.ads.adwords.jaxws.v201809.mcm.ManagedCustomerPage.getTotalNumEntries", "java.lang.Integer.intValue"], "call_func_parameter": [[""], [""], ["com.google.api.ads.adwords.lib.selectorfields.EntityField[]"], ["int"], ["int"], ["boolean"], ["com.google.api.ads.adwords.lib.selectorfields.EntityField", "java.lang.String"], ["java.lang.String", "java.lang.String"], [""], ["int"], ["java.lang.String", "java.lang.Object"], ["com.google.api.ads.adwords.jaxws.v201809.cm.Selector"], ["com.google.api.ads.adwords.jaxws.v201809.mcm.ManagedCustomerPage", "java.util.Set"], [""], ["int"], [""], [""]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.util.ManagedCustomerDelegate.addClientCustomerIds": "Add client customer IDs into the result set."}, {"com.google.api.ads.adwords.awreporting.util.ManagedCustomerDelegate.addClientCustomerIds": "Add client customer IDs into the result set."}]}, {"index": "36", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/util/ManagedCustomerDelegate.java", "methodName": "com.google.api.ads.adwords.awreporting.util.ManagedCustomerDelegate.addClientCustomerIds", "methodParameterType": "ManagedCustomerPage#Set<Long>#", "methodParameterName": "managedCustomerPage#clientCustomerIdsSet#", "methodBody": "private static void addClientCustomerIds(\n      @Nullable ManagedCustomerPage managedCustomerPage, Set<Long> clientCustomerIdsSet) {\n    if (managedCustomerPage != null) {\n      List<ManagedCustomer> managedCustomers = managedCustomerPage.getEntries();\n\n      // ManagedCustomerPage.getEntries() could return null.\n      if (managedCustomers != null) {\n        for (ManagedCustomer managedCustomer : managedCustomers) {\n          clientCustomerIdsSet.add(managedCustomer.getCustomerId());\n        }\n      }\n    }\n  }", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#SimpleName#MarkerAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#EnhancedForStatement#Block#IfStatement#Block#IfStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleName)SimpleName(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block)EnhancedForStatement)Block)IfStatement)Block)IfStatement)Block)MethodDeclaration", "methodDoc": "Add client customer IDs into the result set.", "call_func_name": ["com.google.api.ads.adwords.jaxws.v201809.mcm.ManagedCustomerPage.getEntries", "java.util.List.iterator", "java.util.Iterator.hasNext", "java.util.Iterator.next", "com.google.api.ads.adwords.jaxws.v201809.mcm.ManagedCustomer.getCustomerId", "java.util.Set.add"], "call_func_parameter": [[""], [""], [""], [""], [""], ["java.lang.Object"]], "passed_comments": "/"}, {"index": "37", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/util/TemplateStringsUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.util.TemplateStringsUtil.formatFullMonthDateRange", "methodParameterType": "LocalDate#LocalDate#", "methodParameterName": "startDate#endDate#", "methodBody": "public static String formatFullMonthDateRange(@Nullable LocalDate startDate,\n      @Nullable LocalDate endDate) {\n    String formattedStartDate = formatDateFullMonthYear(startDate);\n    String formattedEndDate = formatDateFullMonthYear(endDate);\n    String formattedDateRange = \"\";\n\n    if (formattedStartDate.equals(formattedEndDate)) {\n      formattedDateRange = formattedStartDate;\n    } else {\n      formattedDateRange = formattedStartDate + \" - \" + formattedEndDate;\n    }\n\n    return formattedDateRange;\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#MarkerAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#MarkerAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#StringLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#Assignment#ExpressionStatement#Block#SimpleName#SimpleName#StringLiteral#SimpleName#InfixExpression#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(StringLiteral)StringLiteral)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(SimpleName)SimpleName)Assignment)ExpressionStatement)Block(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(InfixExpression(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)Assignment)ExpressionStatement)Block)IfStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Convenience method to format a date range in monthly format (e.g. March 2015 - April 2016). If start and end months are the same, just one month is returned (March 2015).", "call_func_name": ["com.google.api.ads.adwords.awreporting.util.TemplateStringsUtil.formatDateFullMonthYear", "java.lang.String.equals", "java.lang.StringBuilder.<init>", "java.lang.StringBuilder.append", "java.lang.StringBuilder.toString"], "call_func_parameter": [["org.joda.time.LocalDate"], ["java.lang.Object"], [""], ["java.lang.String"], [""]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.util.TemplateStringsUtil.formatDateFullMonthYear": "Formats the date to the format: MMMM yyyy (e.g. 'March 2015')"}, {"com.google.api.ads.adwords.awreporting.util.TemplateStringsUtil.formatDateFullMonthYear": "Formats the date to the format: MMMM yyyy (e.g. 'March 2015')"}]}, {"index": "38", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/util/TemplateStringsUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.util.TemplateStringsUtil.formatDateFullMonthYear", "methodParameterType": "LocalDate#", "methodParameterName": "date#", "methodBody": "public static String formatDateFullMonthYear(@Nullable LocalDate date) {\n    return TemplateStringsUtil.dateFormatterFullMonthYear.print(date);\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#MarkerAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Formats the date to the format: MMMM yyyy (e.g. 'March 2015')", "call_func_name": ["org.joda.time.format.DateTimeFormatter.print"], "call_func_parameter": [["org.joda.time.ReadablePartial"]], "passed_comments": "/"}, {"index": "39", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/util/TemplateStringsUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.util.TemplateStringsUtil.formatDateAbrieviatedMonthYear", "methodParameterType": "LocalDate#", "methodParameterName": "date#", "methodBody": "public static String formatDateAbrieviatedMonthYear(@Nullable LocalDate date) {\n    return TemplateStringsUtil.dateFormatterAbrieviatedMonthYear.print(date);\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#MarkerAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Formats the date to the format: MMM yyyy (e.g. 'Mar 2015')", "call_func_name": ["org.joda.time.format.DateTimeFormatter.print"], "call_func_parameter": [["org.joda.time.ReadablePartial"]], "passed_comments": "/"}, {"index": "40", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/util/AdWordsSessionUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.util.AdWordsSessionUtil.buildImmutableSessionForCid", "methodParameterType": "AdWordsSession.Builder#Long#", "methodParameterName": "sessionBuilder#cid#", "methodBody": "public static ImmutableAdWordsSession buildImmutableSessionForCid(\n      AdWordsSession.Builder sessionBuilder, Long cid) throws ValidationException {\n    String cidStr = cid == null ? null : String.valueOf(cid);\n    return buildImmutableSessionForCid(sessionBuilder, cidStr);\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleName#NullLiteral#InfixExpression#NullLiteral#SimpleName#SimpleName#SimpleName#MethodInvocation#ConditionalExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ConditionalExpression(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(NullLiteral)NullLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ConditionalExpression)VariableDeclarationFragment)VariableDeclarationStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Build a new  {@code ImmutableAdWordsSession} for the given cid.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "41", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/util/AdWordsSessionUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.util.AdWordsSessionUtil.buildImmutableSessionForCid", "methodParameterType": "AdWordsSession.Builder#String#", "methodParameterName": "sessionBuilder#cid#", "methodBody": "public static ImmutableAdWordsSession buildImmutableSessionForCid(\n      AdWordsSession.Builder sessionBuilder, String cid) throws ValidationException {\n    return sessionBuilder.withClientCustomerId(cid).buildImmutable();\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(ReturnStatement(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Build a new  {@code ImmutableAdWordsSession} for the given cid.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "42", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/util/AdWordsServicesUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.util.AdWordsServicesUtil.getService", "methodParameterType": "AdWordsSession#Class<T>#", "methodParameterName": "session#interfaceClass#", "methodBody": "public static <T> T getService(AdWordsSession session, Class<T> interfaceClass) {\n    return instance.get(session, interfaceClass);\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#TypeParameter#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(TypeParameter(SimpleName)SimpleName)TypeParameter(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Creates a new specific service using the  {@link AdWordsServicesWithRateLimiter}.", "call_func_name": ["com.google.api.ads.adwords.extension.ratelimiter.AdWordsServicesWithRateLimiter.get"], "call_func_parameter": [["com.google.api.ads.adwords.lib.client.AdWordsSession", "java.lang.Class"]], "passed_comments": "/"}, {"index": "43", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/util/AdWordsServicesUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.util.AdWordsServicesUtil.getUtility", "methodParameterType": "AdWordsSession#Class<T>#", "methodParameterName": "session#utilityClass#", "methodBody": "public static <T> T getUtility(AdWordsSession session, Class<T> utilityClass) {\n    return instance.getUtility(session, utilityClass);\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#TypeParameter#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(TypeParameter(SimpleName)SimpleName)TypeParameter(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Creates a new specific utility using the  {@link AdWordsServicesWithRateLimiter}.", "call_func_name": ["com.google.api.ads.adwords.extension.ratelimiter.AdWordsServicesWithRateLimiter.getUtility"], "call_func_parameter": [["com.google.api.ads.adwords.lib.client.AdWordsSession", "java.lang.Class"]], "passed_comments": "/"}, {"index": "44", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/proxy/JaxWsProxySelector.java", "methodName": "com.google.api.ads.adwords.awreporting.proxy.JaxWsProxySelector.select", "methodParameterType": "URI#", "methodParameterName": "uri#", "methodBody": "@Override\n  public List<Proxy> select(URI uri) {\n    List<Proxy> list = Lists.newArrayList();\n\n    if (uri == null) {\n      throw new IllegalArgumentException(\"URI can't be null.\");\n    }\n\n    String scheme = uri.getScheme().toLowerCase();\n    \n    if (SUPPORTED_SCHEMES.contains(scheme)){\n      Proxy proxy = getProxy(scheme, proxyProperties.getProperty(scheme + \".\" + PROXY_HOST),\n          proxyProperties.getProperty(scheme + \".\" + PROXY_PORT), \n          proxyProperties.getProperty(scheme + \".\" + PROXY_USER));\n      \n      if (proxy != null){\n        list.add(proxy);\n      }\n    }\n    \n    if (scheme.startsWith(\"http\") || \"ftp\".equals(scheme) || scheme.startsWith(\"socks\")){\n      Proxy proxy = getProxy(\"socks\", proxyProperties.getProperty(SOCKS_PROXY_HOST),\n          proxyProperties.getProperty(SOCKS_PROXY_PORT), \n          proxyProperties.getProperty(SOCKS_PROXY_USER));\n      \n      if (proxy != null){\n        list.add(proxy);\n      }\n    }\n\n    if (list.size() > 0) {\n      return list;\n    }\n    return delegateSelect(uri);\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#Modifier#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleType#StringLiteral#ClassInstanceCreation#ThrowStatement#Block#IfStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#StringLiteral#SimpleName#InfixExpression#MethodInvocation#SimpleName#SimpleName#SimpleName#StringLiteral#SimpleName#InfixExpression#MethodInvocation#SimpleName#SimpleName#SimpleName#StringLiteral#SimpleName#InfixExpression#MethodInvocation#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#IfStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#StringLiteral#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#StringLiteral#MethodInvocation#InfixExpression#SimpleName#SimpleType#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#IfStatement#SimpleName#SimpleName#MethodInvocation#NumberLiteral#InfixExpression#SimpleName#ReturnStatement#Block#IfStatement#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(Modifier)Modifier(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(StringLiteral)StringLiteral)ClassInstanceCreation)ThrowStatement)Block)IfStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)MethodInvocation)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)IfStatement(IfStatement(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation(MethodInvocation(StringLiteral)StringLiteral(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)InfixExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)IfStatement(IfStatement(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(NumberLiteral)NumberLiteral)InfixExpression(Block(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Selects the Proxies available to do the user authentication.", "call_func_name": ["com.google.common.collect.Lists.newArrayList", "java.lang.IllegalArgumentException.<init>", "java.net.URI.getScheme", "java.lang.String.toLowerCase", "java.util.Set.contains", "java.lang.StringBuilder.<init>", "java.lang.StringBuilder.append", "java.lang.StringBuilder.toString", "java.util.Properties.getProperty", "com.google.api.ads.adwords.awreporting.proxy.JaxWsProxySelector.getProxy", "java.util.List.add", "java.lang.String.startsWith", "java.lang.String.equals", "java.util.List.size", "com.google.api.ads.adwords.awreporting.proxy.JaxWsProxySelector.delegateSelect"], "call_func_parameter": [[""], ["java.lang.String"], [""], [""], ["java.lang.Object"], [""], ["java.lang.String"], [""], ["java.lang.String"], ["java.lang.String", "java.lang.String", "java.lang.String", "java.lang.String"], ["java.lang.Object"], ["java.lang.String"], ["java.lang.Object"], [""], ["java.net.URI"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.proxy.JaxWsProxySelector.getProxy": "Create  {@code Proxy} based on the scheme, host, port and password and set the default{@code Authenticator}."}, {"com.google.api.ads.adwords.awreporting.proxy.JaxWsProxySelector.getProxy": "Create  {@code Proxy} based on the scheme, host, port and password and set the default{@code Authenticator}."}, {"com.google.api.ads.adwords.awreporting.proxy.JaxWsProxySelector.delegateSelect": "Delegates the select to the embedded selector."}, {"com.google.api.ads.adwords.awreporting.proxy.JaxWsProxySelector.delegateSelect": "Delegates the select to the embedded selector."}]}, {"index": "45", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/proxy/JaxWsProxySelector.java", "methodName": "com.google.api.ads.adwords.awreporting.proxy.JaxWsProxySelector.getProxy", "methodParameterType": "String#String#String#String#", "methodParameterName": "scheme#proxyHost#proxyPort#proxyUser#", "methodBody": "private Proxy getProxy(String scheme, String proxyHost, String proxyPort, String proxyUser){\n    if (!Strings.isNullOrEmpty(proxyHost) && !Strings.isNullOrEmpty(proxyPort)){\n      if (!Strings.isNullOrEmpty(proxyUser)){\n        Authenticator.setDefault(new JaxWsProxyAuthenticator(scheme, proxyProperties));\n      }\n      \n      if (\"socks\".equals(scheme)) {\n        return new Proxy(Proxy.Type.SOCKS, new InetSocketAddress(proxyHost,\n            Integer.parseInt(proxyPort)));\n      } else {\n        return new Proxy(Proxy.Type.HTTP, new InetSocketAddress(proxyHost, \n            Integer.parseInt(proxyPort)));\n      }\n    }\n    return null;\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#PrefixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#PrefixExpression#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#PrefixExpression#SimpleName#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#ClassInstanceCreation#MethodInvocation#ExpressionStatement#Block#IfStatement#StringLiteral#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleType#SimpleName#SimpleName#QualifiedName#SimpleName#QualifiedName#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ClassInstanceCreation#ClassInstanceCreation#ReturnStatement#Block#SimpleName#SimpleType#SimpleName#SimpleName#QualifiedName#SimpleName#QualifiedName#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ClassInstanceCreation#ClassInstanceCreation#ReturnStatement#Block#IfStatement#Block#IfStatement#NullLiteral#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression)InfixExpression(Block(IfStatement(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleName)SimpleName)ClassInstanceCreation)MethodInvocation)ExpressionStatement)Block)IfStatement(IfStatement(MethodInvocation(StringLiteral)StringLiteral(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(QualifiedName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)QualifiedName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ClassInstanceCreation)ClassInstanceCreation)ReturnStatement)Block(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(QualifiedName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)QualifiedName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ClassInstanceCreation)ClassInstanceCreation)ReturnStatement)Block)IfStatement)Block)IfStatement(ReturnStatement(NullLiteral)NullLiteral)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Create  {@code Proxy} based on the scheme, host, port and password and set the default{@code Authenticator}.", "call_func_name": ["com.google.common.base.Strings.isNullOrEmpty", "java.net.Authenticator.setDefault", "java.lang.String.equals", "java.lang.Integer.parseInt", "java.net.InetSocketAddress.<init>"], "call_func_parameter": [["java.lang.String"], ["java.net.Authenticator"], ["java.lang.Object"], ["java.lang.String"], ["java.lang.String", "int"]], "passed_comments": "/"}, {"index": "46", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/proxy/JaxWsProxySelector.java", "methodName": "com.google.api.ads.adwords.awreporting.proxy.JaxWsProxySelector.delegateSelect", "methodParameterType": "URI#", "methodParameterName": "uri#", "methodBody": "private List<Proxy> delegateSelect(URI uri) {\n    if (delegate != null) {\n      return delegate.select(uri);\n    }\n    \n    return Arrays.asList(Proxy.NO_PROXY);\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#IfStatement#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Delegates the select to the embedded selector.", "call_func_name": ["java.net.ProxySelector.select", "java.util.Arrays.asList"], "call_func_parameter": [["java.net.URI"], ["java.lang.Object[]"]], "passed_comments": "/"}, {"index": "47", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/proxy/JaxWsProxySelector.java", "methodName": "com.google.api.ads.adwords.awreporting.proxy.JaxWsProxySelector.connectFailed", "methodParameterType": "URI#SocketAddress#IOException#", "methodParameterName": "uri#socketAddress#ioException#", "methodBody": "@Override\n  public void connectFailed(URI uri, SocketAddress socketAddress, IOException ioException) {\n    Preconditions.checkNotNull(uri, \"Uri can not be null\");\n    Preconditions.checkNotNull(socketAddress, \"SocketAddress can not be null\");\n    Preconditions.checkNotNull(ioException, \"IOException can not be null\");\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Handles the connection failing when connecting to the Proxy. This method does not handle selecting or reordering proxies. It simply checks parameters for null.", "call_func_name": ["com.google.common.base.Preconditions.checkNotNull"], "call_func_parameter": [["java.lang.Object", "java.lang.Object"]], "passed_comments": "/"}, {"index": "48", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/authentication/InstalledOAuth2Authenticator.java", "methodName": "com.google.api.ads.adwords.awreporting.authentication.InstalledOAuth2Authenticator.InstalledOAuth2Authenticator", "methodParameterType": "String#String#String#String#String#", "methodParameterName": "userAgent#developerToken#clientId#clientSecret#managerAccountId#", "methodBody": "@Autowired\n  public InstalledOAuth2Authenticator(\n      @Value(value = \"${userAgent}\") String userAgent,\n      @Value(value = \"${developerToken}\") String developerToken,\n      @Value(value = \"${clientId}\") String clientId,\n      @Value(value = \"${clientSecret}\") String clientSecret,\n      @Value(value = \"${managerAccountId}\") String managerAccountId) {\n    this.userAgent = userAgent;\n    this.developerToken = developerToken;\n    this.clientId = clientId;\n    this.clientSecret = clientSecret;\n    this.managerAccountId = managerAccountId;\n    this.scope = OAuthScope.getScopeCsv(OAuthScope.ADWORDS);\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#Modifier#SimpleName#SimpleName#SimpleName#StringLiteral#MemberValuePair#NormalAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#MemberValuePair#NormalAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#MemberValuePair#NormalAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#MemberValuePair#NormalAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#MemberValuePair#NormalAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#Assignment#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(NormalAnnotation(SimpleName)SimpleName(MemberValuePair(SimpleName)SimpleName(StringLiteral)StringLiteral)MemberValuePair)NormalAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(NormalAnnotation(SimpleName)SimpleName(MemberValuePair(SimpleName)SimpleName(StringLiteral)StringLiteral)MemberValuePair)NormalAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(NormalAnnotation(SimpleName)SimpleName(MemberValuePair(SimpleName)SimpleName(StringLiteral)StringLiteral)MemberValuePair)NormalAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(NormalAnnotation(SimpleName)SimpleName(MemberValuePair(SimpleName)SimpleName(StringLiteral)StringLiteral)MemberValuePair)NormalAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(NormalAnnotation(SimpleName)SimpleName(MemberValuePair(SimpleName)SimpleName(StringLiteral)StringLiteral)MemberValuePair)NormalAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation)Assignment)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Constructor with the OAuth2 parameters autowired by Spring.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "49", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/authentication/InstalledOAuth2Authenticator.java", "methodName": "com.google.api.ads.adwords.awreporting.authentication.InstalledOAuth2Authenticator.authenticate", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "@Override\n  public AdWordsSession.Builder authenticate() throws OAuthException {\n    return getSessionBuilderWithoutCredential().withOAuth2Credential(getOAuth2Credential());\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#Modifier#SimpleName#SimpleName#QualifiedName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(Modifier)Modifier(SimpleType(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)SimpleType(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType(Block(ReturnStatement(MethodInvocation(MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Get an adwords session builder with the authentication info.", "call_func_name": ["com.google.api.ads.adwords.awreporting.authentication.InstalledOAuth2Authenticator.getSessionBuilderWithoutCredential", "com.google.api.ads.adwords.awreporting.authentication.InstalledOAuth2Authenticator.getOAuth2Credential"], "call_func_parameter": [[""], [""]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.authentication.InstalledOAuth2Authenticator.getOAuth2Credential": "Obtains an OAuth  {@link Credential} configured for AwReporting by obtaining a refresh token.This method should be invoked for any users for which a refresh token is not known or is invalid."}, {"com.google.api.ads.adwords.awreporting.authentication.InstalledOAuth2Authenticator.getOAuth2Credential": "Obtains an OAuth  {@link Credential} configured for AwReporting by obtaining a refresh token.This method should be invoked for any users for which a refresh token is not known or is invalid."}]}, {"index": "50", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/authentication/InstalledOAuth2Authenticator.java", "methodName": "com.google.api.ads.adwords.awreporting.authentication.InstalledOAuth2Authenticator.buildOAuth2Credential", "methodParameterType": "String#", "methodParameterName": "authToken#", "methodBody": "private Credential buildOAuth2Credential(String authToken) {\n    return new GoogleCredential.Builder()\n            .setClientSecrets(clientId, clientSecret)\n            .setJsonFactory(new JacksonFactory())\n            .setTransport(new NetHttpTransport())\n            .build()\n            .setRefreshToken(authToken);\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#QualifiedName#SimpleType#ClassInstanceCreation#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#MethodInvocation#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#MethodInvocation#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(ClassInstanceCreation(SimpleType(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)SimpleType)ClassInstanceCreation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation)MethodInvocation(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation)MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Builds the OAuth 2.0 credential for the user with a known authToken", "call_func_name": ["com.google.api.client.json.jackson2.JacksonFactory.<init>", "com.google.api.client.http.javanet.NetHttpTransport.<init>", "com.google.api.client.googleapis.auth.oauth2.GoogleCredential.setRefreshToken"], "call_func_parameter": [[""], [""], ["java.lang.String"]], "passed_comments": "/"}, {"index": "51", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/authentication/InstalledOAuth2Authenticator.java", "methodName": "com.google.api.ads.adwords.awreporting.authentication.InstalledOAuth2Authenticator.getOAuth2Credential", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "private Credential getOAuth2Credential() throws OAuthException {\n    Credential credential = null;\n\n    logger.debug(\"Retrieving Auth Token from DB.\");\n    AuthToken authMcc = getAuthTokenFromStorage(managerAccountId);\n\n    // Generate a new Auth Token if necessary\n    if (authMcc == null || authMcc.getScope() == null || !authMcc.getScope().equals(scope)) {\n      try {\n        logger.debug(\"Auth Token FORCED. Getting a new one.\");\n        credential = getNewOAuth2Credential();\n      } catch (OAuthException e) {\n        if (e.getMessage().contains(\"Connection reset\")) {\n          logger.info(\"Connection reset when getting Auth Token, retrying...\");\n          credential = getNewOAuth2Credential();\n        } else {\n          logger.error(\"Error Authenticating\",  e);\n          throw e;\n        }\n      } finally {\n        if (credential != null) {\n          // Try to get the manager account's DescriptiveName.\n          String name = \"\";\n          try {\n            AdWordsSession adWordsSession = authenticate(credential).buildImmutable();\n            CustomerServiceInterface customerService =\n                AdWordsServicesUtil.getService(adWordsSession, CustomerServiceInterface.class);\n\n            // The AdWords session has clientCustomerId specified, so only details of that customer\n            // will be returned by CustomerService.getCustomers().\n            List<Customer> customers = customerService.getCustomers();\n            if (customers != null && !customers.isEmpty()) {\n              name = customers.get(0).getDescriptiveName();\n            }\n          } catch (ValidationException | ApiException e) {\n            logger.error(\"Error trying to get manager account name\", e);\n          }\n\n          logger.info(\"Saving Refresh Token to DB...\");\n          saveAuthTokenToStorage(managerAccountId, name, credential.getRefreshToken(), scope);\n        }\n      }\n    } else {\n      credential = buildOAuth2Credential(authMcc.getAuthToken());\n    }\n\n    return credential;\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#MethodInvocation#NullLiteral#InfixExpression#InfixExpression#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#PrefixExpression#InfixExpression#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#MethodInvocation#SimpleName#StringLiteral#MethodInvocation#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#SimpleName#SimpleName#StringLiteral#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#ThrowStatement#Block#IfStatement#Block#CatchClause#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleType#SimpleName#StringLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleType#TypeLiteral#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#MethodInvocation#PrefixExpression#InfixExpression#SimpleName#SimpleName#SimpleName#NumberLiteral#MethodInvocation#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#IfStatement#Block#SimpleName#SimpleType#SimpleName#SimpleType#UnionType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#SimpleName#MethodInvocation#ExpressionStatement#Block#CatchClause#TryStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#TryStatement#Block#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(InfixExpression(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(NullLiteral)NullLiteral)InfixExpression)InfixExpression(PrefixExpression(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression)InfixExpression(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ThrowStatement(SimpleName)SimpleName)ThrowStatement)Block)IfStatement)Block)CatchClause(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(StringLiteral)StringLiteral)VariableDeclarationFragment)VariableDeclarationStatement(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(TypeLiteral(SimpleType(SimpleName)SimpleName)SimpleType)TypeLiteral)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression)InfixExpression(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block)IfStatement)Block(CatchClause(SingleVariableDeclaration(UnionType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)UnionType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)CatchClause)TryStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)TryStatement)Block(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)Assignment)ExpressionStatement)Block)IfStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Obtains an OAuth  {@link Credential} configured for AwReporting by obtaining a refresh token.This method should be invoked for any users for which a refresh token is not known or is invalid.", "call_func_name": ["org.slf4j.Logger.debug", "com.google.api.ads.adwords.awreporting.authentication.InstalledOAuth2Authenticator.getAuthTokenFromStorage", "com.google.api.ads.adwords.awreporting.model.entities.AuthToken.getScope", "java.lang.String.equals", "com.google.api.ads.adwords.awreporting.authentication.InstalledOAuth2Authenticator.getNewOAuth2Credential", "com.google.api.ads.adwords.awreporting.authentication.InstalledOAuth2Authenticator.authenticate", "com.google.api.ads.adwords.awreporting.util.AdWordsServicesUtil.getService", "com.google.api.ads.adwords.jaxws.v201809.mcm.CustomerServiceInterface.getCustomers", "java.util.List.isEmpty", "java.util.List.get", "com.google.api.ads.adwords.jaxws.v201809.mcm.Customer.getDescriptiveName", "org.slf4j.Logger.error", "org.slf4j.Logger.info", "com.google.api.client.auth.oauth2.Credential.getRefreshToken", "com.google.api.ads.adwords.awreporting.authentication.InstalledOAuth2Authenticator.saveAuthTokenToStorage", "com.google.api.ads.common.lib.exception.OAuthException.getMessage", "java.lang.String.contains", "com.google.api.ads.adwords.awreporting.model.entities.AuthToken.getAuthToken", "com.google.api.ads.adwords.awreporting.authentication.InstalledOAuth2Authenticator.buildOAuth2Credential"], "call_func_parameter": [["java.lang.String"], ["java.lang.String"], [""], ["java.lang.Object"], [""], ["com.google.api.client.auth.oauth2.Credential"], ["com.google.api.ads.adwords.lib.client.AdWordsSession", "java.lang.Class"], [""], [""], ["int"], [""], ["java.lang.String", "java.lang.Throwable"], ["java.lang.String"], [""], ["java.lang.String", "java.lang.String", "java.lang.String", "java.lang.String"], [""], ["java.lang.CharSequence"], [""], ["java.lang.String"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.authentication.InstalledOAuth2Authenticator.getAuthTokenFromStorage": "The implementation should retrieve the authentication token previously persisted."}, {"com.google.api.ads.adwords.awreporting.authentication.InstalledOAuth2Authenticator.getAuthTokenFromStorage": "The implementation should retrieve the authentication token previously persisted."}, {"com.google.api.ads.adwords.awreporting.util.AdWordsServicesUtil.getService": "Creates a new specific service using the  {@link AdWordsServicesWithRateLimiter}."}, {"com.google.api.ads.adwords.awreporting.util.AdWordsServicesUtil.getService": "Creates a new specific service using the  {@link AdWordsServicesWithRateLimiter}."}, {"com.google.api.ads.adwords.awreporting.authentication.InstalledOAuth2Authenticator.saveAuthTokenToStorage": "The implementation must persist the token to be retrieved later."}, {"com.google.api.ads.adwords.awreporting.authentication.InstalledOAuth2Authenticator.saveAuthTokenToStorage": "The implementation must persist the token to be retrieved later."}, {"com.google.api.ads.adwords.awreporting.authentication.InstalledOAuth2Authenticator.buildOAuth2Credential": "Builds the OAuth 2.0 credential for the user with a known authToken"}, {"com.google.api.ads.adwords.awreporting.authentication.InstalledOAuth2Authenticator.buildOAuth2Credential": "Builds the OAuth 2.0 credential for the user with a known authToken"}]}, {"index": "52", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/authentication/InstalledOAuth2Authenticator.java", "methodName": "com.google.api.ads.adwords.awreporting.authentication.InstalledOAuth2Authenticator.saveAuthTokenToStorage", "methodParameterType": "String#String#String#String#", "methodParameterName": "managerAccountId#managerAccountName#authToken#scope#", "methodBody": "private void saveAuthTokenToStorage(String managerAccountId, String managerAccountName,\n      String authToken, String scope) {\n    logger.debug(\"Persisting refresh token...\");\n    AuthToken authMcc = new AuthToken(managerAccountId, managerAccountName, authToken, scope);\n    authTokenPersister.persistAuthToken(authMcc);\n    logger.debug(\"... success.\");\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "The implementation must persist the token to be retrieved later.", "call_func_name": ["org.slf4j.Logger.debug", "com.google.api.ads.adwords.awreporting.model.entities.AuthToken.<init>", "com.google.api.ads.adwords.awreporting.model.persistence.AuthTokenPersister.persistAuthToken"], "call_func_parameter": [["java.lang.String"], ["java.lang.String", "java.lang.String", "java.lang.String", "java.lang.String"], ["com.google.api.ads.adwords.awreporting.model.entities.AuthToken"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.persistence.AuthTokenPersister.persistAuthToken": "Persists the token."}]}, {"index": "53", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/authentication/InstalledOAuth2Authenticator.java", "methodName": "com.google.api.ads.adwords.awreporting.authentication.InstalledOAuth2Authenticator.getAuthTokenFromStorage", "methodParameterType": "String#", "methodParameterName": "managerAccountId#", "methodBody": "private AuthToken getAuthTokenFromStorage(String managerAccountId) {\n    AuthToken authToken = authTokenPersister.getAuthToken(managerAccountId);\n    if (authToken != null) {\n      return authToken;\n    }\n    return null;\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#ReturnStatement#Block#IfStatement#NullLiteral#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)IfStatement(ReturnStatement(NullLiteral)NullLiteral)ReturnStatement)Block)MethodDeclaration", "methodDoc": "The implementation should retrieve the authentication token previously persisted.", "call_func_name": ["com.google.api.ads.adwords.awreporting.model.persistence.AuthTokenPersister.getAuthToken"], "call_func_parameter": [["java.lang.String"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.persistence.AuthTokenPersister.getAuthToken": "Retrieves the authentication token."}]}, {"index": "54", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/authentication/Authenticator.java", "methodName": "com.google.api.ads.adwords.awreporting.authentication.Authenticator.authenticate", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "AdWordsSession.Builder authenticate() throws OAuthException;", "AST": "Javadoc#SimpleName#SimpleName#QualifiedName#SimpleType#SimpleName#SimpleName#SimpleType#MethodDeclaration#", "SBT": "(MethodDeclaration(SimpleType(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)SimpleType(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)MethodDeclaration", "methodDoc": "Authenticates the user against the API(s) depending on the OAuth scope and then returns an {@link com.google.api.ads.adwords.lib.client.AdWordsSession.Builder}.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "55", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/AwReporting.java", "methodName": "com.google.api.ads.adwords.awreporting.AwReporting.main", "methodParameterType": "String[]#", "methodParameterName": "args#", "methodBody": "public static void main(String[] args) {\n    // Proxy\n    JaxWsProxySelector ps = new JaxWsProxySelector(ProxySelector.getDefault());\n    ProxySelector.setDefault(ps);\n\n    try {\n      Options options = AwReportingOption.createCommandLineOptions();\n      CommandLine cmdLine = parseCommandLine(options, args);\n\n      if (cmdLine.hasOption(\"help\")) {\n        printHelpMessage(options);\n        printSamplePropertiesFile();\n        System.exit(0);\n      }\n\n      String propertiesPath = getPropertiesPath(cmdLine);\n\n      Set<Long> accountIdsSet = Sets.newHashSet();\n      String accountIdsFile = AwReportingOption.ACCOUNT_IDS_FILE.getOptionValue(cmdLine);\n      if (accountIdsFile != null) {\n        addAccountsFromFile(accountIdsSet, accountIdsFile);\n        if (accountIdsSet.isEmpty()) {\n          logger.error(\n              \"Account IDs file does not contain any AdWords CIDs (\" + accountIdsFile + \")\");\n          System.exit(1);\n        }\n      }\n\n      ReportDefinitionDateRangeType dateRangeType = ReportDefinitionDateRangeType.CUSTOM_DATE;\n      String dateRangeStr = AwReportingOption.DATE_RANGE.getOptionValue(cmdLine);\n      if (dateRangeStr != null) {\n        dateRangeType = ReportDefinitionDateRangeType.fromValue(dateRangeStr);\n      }\n\n      LocalDate startDate =\n          DateUtil.parseLocalDate(AwReportingOption.START_DATE.getOptionValue(cmdLine));\n      LocalDate endDate =\n          DateUtil.parseLocalDate(AwReportingOption.END_DATE.getOptionValue(cmdLine));\n\n      String reportFileTypeName = AwReportingOption.REPORT_FILE_TYPE.getOptionValue(cmdLine);\n      String csvReportFile = AwReportingOption.CSV_FILE_INPUT.getOptionValue(cmdLine);\n\n      boolean forceFileProcessor = !Strings.isNullOrEmpty(reportFileTypeName);\n      Properties properties = init(propertiesPath, forceFileProcessor);\n\n      logger.debug(\"Creating ReportProcessor bean...\");\n      ReportProcessor processor = createReportProcessor();\n      logger.debug(\"... success.\");\n\n      String managerAccountId = properties.getProperty(\"managerAccountId\").replaceAll(\"-\", \"\");\n      DateRangeAndType dateRangeAndType =\n          DateRangeAndType.fromValues(startDate, endDate, dateRangeType);\n\n      if (forceFileProcessor) {\n        validateFileReportArguments(startDate, endDate, csvReportFile);\n        List<File> localFiles = getCsvFiles(csvReportFile);\n        ((FileReportProcessor) processor)\n            .processInputFiles(managerAccountId, reportFileTypeName, localFiles, dateRangeAndType);\n      } else {\n        processor.generateReportsForManagerAccount(\n            managerAccountId,\n            dateRangeAndType,\n            accountIdsSet,\n            properties);\n      }\n    } catch (ReportConfigLoadException e) {\n      logger.error(\"Failed to load configuration.\", e);\n      System.exit(1);\n    } catch (ReportProcessingException e) {\n      logger.error(\"Failed to process reports.\", e);\n      System.exit(1);\n    }\n  }", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#Dimension#ArrayType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#MethodInvocation#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#NumberLiteral#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#StringLiteral#SimpleName#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#NumberLiteral#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#IfStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#QualifiedName#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#PrimitiveType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#PrefixExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#SimpleName#StringLiteral#StringLiteral#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#CastExpression#ParenthesizedExpression#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#NumberLiteral#MethodInvocation#ExpressionStatement#Block#CatchClause#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#NumberLiteral#MethodInvocation#ExpressionStatement#Block#CatchClause#TryStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName)SimpleName)SimpleType(Dimension)Dimension)ArrayType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation)ExpressionStatement)Block)IfStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(IfStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)IfStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block)IfStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation(SimpleName)SimpleName(StringLiteral)StringLiteral(StringLiteral)StringLiteral)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(SimpleName)SimpleName(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(ParenthesizedExpression(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)ParenthesizedExpression(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation)ExpressionStatement)Block)CatchClause(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation)ExpressionStatement)Block)CatchClause)TryStatement)Block)MethodDeclaration", "methodDoc": "Main method.", "call_func_name": ["java.net.ProxySelector.getDefault", "com.google.api.ads.adwords.awreporting.proxy.JaxWsProxySelector.<init>", "java.net.ProxySelector.setDefault", "com.google.api.ads.adwords.awreporting.AwReportingOption.createCommandLineOptions", "com.google.api.ads.adwords.awreporting.AwReporting.parseCommandLine", "org.apache.commons.cli.CommandLine.hasOption", "com.google.api.ads.adwords.awreporting.AwReporting.printHelpMessage", "com.google.api.ads.adwords.awreporting.AwReporting.printSamplePropertiesFile", "java.lang.System.exit", "com.google.api.ads.adwords.awreporting.AwReporting.getPropertiesPath", "com.google.common.collect.Sets.newHashSet", "com.google.api.ads.adwords.awreporting.AwReportingOption.getOptionValue", "com.google.api.ads.adwords.awreporting.AwReporting.addAccountsFromFile", "java.util.Set.isEmpty", "java.lang.StringBuilder.<init>", "java.lang.StringBuilder.append", "java.lang.StringBuilder.toString", "org.slf4j.Logger.error", "com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionDateRangeType.fromValue", "com.google.api.ads.adwords.awreporting.model.util.DateUtil.parseLocalDate", "com.google.common.base.Strings.isNullOrEmpty", "com.google.api.ads.adwords.awreporting.AwReporting.init", "org.slf4j.Logger.debug", "com.google.api.ads.adwords.awreporting.AwReporting.createReportProcessor", "java.util.Properties.getProperty", "java.lang.String.replaceAll", "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType.fromValues", "com.google.api.ads.adwords.awreporting.AwReporting.validateFileReportArguments", "com.google.api.ads.adwords.awreporting.AwReporting.getCsvFiles", "com.google.api.ads.adwords.awreporting.processors.file.FileReportProcessor.processInputFiles", "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.generateReportsForManagerAccount", "org.slf4j.Logger.error"], "call_func_parameter": [[""], ["java.net.ProxySelector"], ["java.net.ProxySelector"], [""], ["org.apache.commons.cli.Options", "java.lang.String[]"], ["java.lang.String"], ["org.apache.commons.cli.Options"], [""], ["int"], ["org.apache.commons.cli.CommandLine"], [""], ["org.apache.commons.cli.CommandLine"], ["java.util.Set", "java.lang.String"], [""], [""], ["java.lang.String"], [""], ["java.lang.String"], ["java.lang.String"], ["java.lang.String"], ["java.lang.String"], ["java.lang.String", "boolean"], ["java.lang.String"], [""], ["java.lang.String"], ["java.lang.String", "java.lang.String"], ["org.joda.time.LocalDate", "org.joda.time.LocalDate", "com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionDateRangeType"], ["org.joda.time.LocalDate", "org.joda.time.LocalDate", "java.lang.String"], ["java.lang.String"], ["java.lang.String", "java.lang.String", "java.util.Collection", "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType"], ["java.lang.String", "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType", "java.util.Set", "java.util.Properties"], ["java.lang.String", "java.lang.Throwable"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.AwReporting.printHelpMessage": "Prints the help message."}, {"com.google.api.ads.adwords.awreporting.AwReporting.printHelpMessage": "Prints the help message."}, {"com.google.api.ads.adwords.awreporting.AwReporting.printSamplePropertiesFile": "Prints the sample properties file on the default output."}, {"com.google.api.ads.adwords.awreporting.AwReporting.printSamplePropertiesFile": "Prints the sample properties file on the default output."}, {"com.google.api.ads.adwords.awreporting.AwReporting.addAccountsFromFile": "Reads the account ids from the file, and adds them to the given set."}, {"com.google.api.ads.adwords.awreporting.AwReporting.addAccountsFromFile": "Reads the account ids from the file, and adds them to the given set."}, {"com.google.api.ads.adwords.awreporting.model.util.DateUtil.parseLocalDate": "Attempts to parse the given  {@code String} to a {@code LocalDate} using one of the knownformatters. The attempt falls back to all the formatters, and if the format is unknown,  {@code null} isreturned."}, {"com.google.api.ads.adwords.awreporting.AwReporting.init": "Initialize the application context, adding the properties configuration file depending on the specified path."}, {"com.google.api.ads.adwords.awreporting.AwReporting.init": "Initialize the application context, adding the properties configuration file depending on the specified path."}, {"com.google.api.ads.adwords.awreporting.AwReporting.createReportProcessor": "Creates the  {@link ReportProcessor} autowiring all the dependencies."}, {"com.google.api.ads.adwords.awreporting.AwReporting.createReportProcessor": "Creates the  {@link ReportProcessor} autowiring all the dependencies."}, {"com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType.fromValues": "Factory method to create a DateRange instance, with overwriting / alteration of values."}, {"com.google.api.ads.adwords.awreporting.AwReporting.validateFileReportArguments": "Validate that user entered all configs for reading reports from a local file like start date, end date, and the file to read."}, {"com.google.api.ads.adwords.awreporting.AwReporting.validateFileReportArguments": "Validate that user entered all configs for reading reports from a local file like start date, end date, and the file to read."}, {"com.google.api.ads.adwords.awreporting.AwReporting.getCsvFiles": "Checks if file exists and then creates a  {@code List} of {@code File}s."}, {"com.google.api.ads.adwords.awreporting.AwReporting.getCsvFiles": "Checks if file exists and then creates a  {@code List} of {@code File}s."}, {"com.google.api.ads.adwords.awreporting.processors.file.FileReportProcessor.processInputFiles": "Process the input files delegating the call to the concrete implementation."}, {"com.google.api.ads.adwords.awreporting.processors.file.FileReportProcessor.processInputFiles": "Process the input files delegating the call to the concrete implementation."}, {"com.google.api.ads.adwords.awreporting.processors.ReportProcessor.generateReportsForManagerAccount": "Generate all the mapped reports of (optionally) given account IDs under the specified manager account."}, {"com.google.api.ads.adwords.awreporting.processors.ReportProcessor.generateReportsForManagerAccount": "Generate all the mapped reports of (optionally) given account IDs under the specified manager account."}]}, {"index": "56", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/AwReporting.java", "methodName": "com.google.api.ads.adwords.awreporting.AwReporting.validateFileReportArguments", "methodParameterType": "LocalDate#LocalDate#String#", "methodParameterName": "startDate#endDate#csvReportFile#", "methodBody": "private static void validateFileReportArguments(\n      LocalDate startDate, LocalDate endDate, String csvReportFile)\n      throws ReportConfigLoadException {\n    if (startDate == null || endDate == null || Strings.isNullOrEmpty(csvReportFile)) {\n      throw new ReportConfigLoadException(\n          String.format(\n              \"Inputing a report file requires: '%s', '%s', and '%s'\",\n              AwReportingOption.START_DATE.getArgName(),\n              AwReportingOption.END_DATE.getArgName(),\n              AwReportingOption.CSV_FILE_INPUT.getArgName()));\n    }\n\n    logger.info(\n        String.format(\n            \"Starting report processing for startDate: %s and endDate: %s on csvReportFile: %s\",\n            startDate, endDate, csvReportFile));\n  }", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#NullLiteral#InfixExpression#SimpleName#NullLiteral#InfixExpression#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#InfixExpression#SimpleName#SimpleType#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#QualifiedName#SimpleName#MethodInvocation#SimpleName#SimpleName#QualifiedName#SimpleName#MethodInvocation#SimpleName#SimpleName#QualifiedName#SimpleName#MethodInvocation#MethodInvocation#ClassInstanceCreation#ThrowStatement#Block#IfStatement#SimpleName#SimpleName#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(IfStatement(InfixExpression(InfixExpression(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression)InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)MethodInvocation(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)MethodInvocation(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ClassInstanceCreation)ThrowStatement)Block)IfStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Validate that user entered all configs for reading reports from a local file like start date, end date, and the file to read.", "call_func_name": ["com.google.common.base.Strings.isNullOrEmpty", "com.google.api.ads.adwords.awreporting.AwReportingOption.getArgName", "java.lang.String.format", "com.google.api.ads.adwords.awreporting.ReportConfigLoadException.<init>", "org.slf4j.Logger.info"], "call_func_parameter": [["java.lang.String"], [""], ["java.lang.String", "java.lang.Object[]"], ["java.lang.String"], ["java.lang.String"]], "passed_comments": "/"}, {"index": "57", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/AwReporting.java", "methodName": "com.google.api.ads.adwords.awreporting.AwReporting.getCsvFiles", "methodParameterType": "String#", "methodParameterName": "csvReportFile#", "methodBody": "private static List<File> getCsvFiles(String csvReportFile) throws ReportConfigLoadException {\n    File csvFile = new File(csvReportFile);\n    if (!csvFile.exists()) {\n      throw new ReportConfigLoadException(\"Could not find CSV file: \" + csvReportFile);\n    }\n\n    return Arrays.asList(csvFile);\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#PrefixExpression#SimpleName#SimpleType#StringLiteral#SimpleName#InfixExpression#ClassInstanceCreation#ThrowStatement#Block#IfStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)ClassInstanceCreation)ThrowStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Checks if file exists and then creates a  {@code List} of {@code File}s.", "call_func_name": ["java.io.File.<init>", "java.io.File.exists", "java.lang.StringBuilder.<init>", "java.lang.StringBuilder.append", "java.lang.StringBuilder.toString", "com.google.api.ads.adwords.awreporting.ReportConfigLoadException.<init>", "java.util.Arrays.asList"], "call_func_parameter": [["java.lang.String"], [""], [""], ["java.lang.String"], [""], ["java.lang.String"], ["java.lang.Object[]"]], "passed_comments": "/"}, {"index": "58", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/AwReporting.java", "methodName": "com.google.api.ads.adwords.awreporting.AwReporting.addAccountsFromFile", "methodParameterType": "Set<Long>#String#", "methodParameterName": "accountIdsSet#accountsFileName#", "methodBody": "protected static void addAccountsFromFile(Set<Long> accountIdsSet, String accountsFileName)\n      throws ReportConfigLoadException {\n    logger.info(\"Using accounts file: \" + accountsFileName);\n    List<String> lines = null;\n\n    try {\n      lines = Files.asCharSource(new File(accountsFileName), StandardCharsets.UTF_8).readLines();\n    } catch (IOException e) {\n      throw new ReportConfigLoadException(\"Unable to read accounts from file.\", e);\n    }\n\n    logger.debug(\"Account IDs to be queried:\");\n    for (String line : lines) {\n      line = line.trim();\n      if (!line.startsWith(\"#\") && !line.isEmpty()) {\n        String accountIdAsString = line.replaceAll(\"-\", \"\");\n        long accountId = Long.parseLong(accountIdAsString);\n        accountIdsSet.add(accountId);\n\n        logger.debug(\"Account ID: \" + accountId);\n      }\n    }\n  }", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#StringLiteral#SimpleName#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#SimpleName#SimpleName#QualifiedName#MethodInvocation#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#StringLiteral#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#PrefixExpression#SimpleName#SimpleName#MethodInvocation#PrefixExpression#InfixExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#StringLiteral#StringLiteral#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#PrimitiveType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#InfixExpression#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#EnhancedForStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(TryStatement(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(StringLiteral)StringLiteral(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleName)SimpleName(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement(IfStatement(InfixExpression(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)PrefixExpression(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression)InfixExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(StringLiteral)StringLiteral)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)EnhancedForStatement)Block)MethodDeclaration", "methodDoc": "Reads the account ids from the file, and adds them to the given set.", "call_func_name": ["java.lang.StringBuilder.<init>", "java.lang.StringBuilder.append", "java.lang.StringBuilder.toString", "org.slf4j.Logger.info", "java.io.File.<init>", "com.google.common.io.Files.asCharSource", "com.google.common.io.CharSource.readLines", "com.google.api.ads.adwords.awreporting.ReportConfigLoadException.<init>", "org.slf4j.Logger.debug", "java.util.List.iterator", "java.util.Iterator.hasNext", "java.util.Iterator.next", "java.lang.String.trim", "java.lang.String.startsWith", "java.lang.String.isEmpty", "java.lang.String.replaceAll", "java.lang.Long.parseLong", "java.lang.Long.valueOf", "java.util.Set.add", "java.lang.StringBuilder.append"], "call_func_parameter": [[""], ["java.lang.String"], [""], ["java.lang.String"], ["java.lang.String"], ["java.io.File", "java.nio.charset.Charset"], [""], ["java.lang.String", "java.lang.Throwable"], ["java.lang.String"], [""], [""], [""], [""], ["java.lang.String"], [""], ["java.lang.String", "java.lang.String"], ["java.lang.String"], ["long"], ["java.lang.Object"], ["long"]], "passed_comments": "/"}, {"index": "59", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/AwReporting.java", "methodName": "com.google.api.ads.adwords.awreporting.AwReporting.createReportProcessor", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "private static ReportProcessor createReportProcessor() {\n    return appCtx.getBean(ReportProcessor.class);\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleType#TypeLiteral#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(TypeLiteral(SimpleType(SimpleName)SimpleName)SimpleType)TypeLiteral)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Creates the  {@link ReportProcessor} autowiring all the dependencies.", "call_func_name": ["org.springframework.context.support.ClassPathXmlApplicationContext.getBean"], "call_func_parameter": [["java.lang.Class"]], "passed_comments": "/"}, {"index": "60", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/AwReporting.java", "methodName": "com.google.api.ads.adwords.awreporting.AwReporting.printHelpMessage", "methodParameterType": "Options#", "methodParameterName": "options#", "methodBody": "private static void printHelpMessage(Options options) {\n    // automatically generate the help statement\n    System.out.println();\n    HelpFormatter formatter = new HelpFormatter();\n    formatter.setWidth(120);\n    formatter.printHelp(\n        \" java -jar aw-reporting.jar -startDate YYYYMMDD -endDate YYYYMMDD \" + \"-file <file>\\n\",\n        \"Arguments:\",\n        options,\n        \"\");\n    System.out.println();\n  }", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#QualifiedName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#NumberLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#StringLiteral#InfixExpression#StringLiteral#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#QualifiedName#SimpleName#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(StringLiteral)StringLiteral)InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Prints the help message.", "call_func_name": ["java.io.PrintStream.println", "org.apache.commons.cli.HelpFormatter.<init>", "org.apache.commons.cli.HelpFormatter.setWidth", "org.apache.commons.cli.HelpFormatter.printHelp"], "call_func_parameter": [[""], [""], ["int"], ["java.lang.String", "java.lang.String", "org.apache.commons.cli.Options", "java.lang.String"]], "passed_comments": "/"}, {"index": "61", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/AwReporting.java", "methodName": "com.google.api.ads.adwords.awreporting.AwReporting.printSamplePropertiesFile", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "private static void printSamplePropertiesFile() throws ReportConfigLoadException {\n    System.out.println(\"\\n  File: aw-report-sample.properties example\");\n    ClassPathResource sampleFile = new ClassPathResource(\"aw-report-sample.properties\");\n\n    try {\n      List<String> lines =\n          Files.asCharSource(sampleFile.getFile(), StandardCharsets.UTF_8).readLines();\n      for (String line : lines) {\n        System.out.println(line);\n      }\n    } catch (IOException e) {\n      throw new ReportConfigLoadException(\"Unable to print sample properties file\", e);\n    }\n  }", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#QualifiedName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#StringLiteral#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#QualifiedName#MethodInvocation#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#EnhancedForStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#StringLiteral#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType(Block(ExpressionStatement(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(StringLiteral)StringLiteral)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(TryStatement(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleName)SimpleName(Block(ExpressionStatement(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)EnhancedForStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(StringLiteral)StringLiteral(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement)Block)MethodDeclaration", "methodDoc": "Prints the sample properties file on the default output.", "call_func_name": ["java.io.PrintStream.println", "org.springframework.core.io.ClassPathResource.<init>", "org.springframework.core.io.ClassPathResource.getFile", "com.google.common.io.Files.asCharSource", "com.google.common.io.CharSource.readLines", "java.util.List.iterator", "java.util.Iterator.hasNext", "java.util.Iterator.next", "com.google.api.ads.adwords.awreporting.ReportConfigLoadException.<init>"], "call_func_parameter": [["java.lang.String"], ["java.lang.String"], [""], ["java.io.File", "java.nio.charset.Charset"], [""], [""], [""], [""], ["java.lang.String", "java.lang.Throwable"]], "passed_comments": "/"}, {"index": "62", "file": "/root/repos/repos41/aw-reporting/aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/AwReporting.java", "methodName": "com.google.api.ads.adwords.awreporting.AwReporting.init", "methodParameterType": "String#boolean#", "methodParameterName": "propertiesPath#forceFileProcessor#", "methodBody": "private static Properties init(String propertiesPath, boolean forceFileProcessor)\n      throws ReportConfigLoadException {\n    logger.trace(\"Initializing Spring application context.\");\n\n    Resource resource = new ClassPathResource(propertiesPath);\n    if (!resource.exists()) {\n      resource = new FileSystemResource(propertiesPath);\n    }\n    PropertyPlaceholderConfigurer configurer = new PropertyPlaceholderConfigurer();\n    configurer.setLocation(resource);\n\n    Properties properties = null;\n    try {\n      properties = PropertiesLoaderUtils.loadProperties(resource);\n    } catch (IOException e) {\n      throw new ReportConfigLoadException(\"Failed to load properties file.\", e);\n    }\n\n    // Selecting the XMLs to choose the Spring Beans to load.\n    List<String> listOfClassPathXml = Lists.newArrayList();\n\n    // Choose the DB type to use based properties file, default to MYSQL\n    String dbType = (String) properties.get(AW_REPORT_MODEL_DB_TYPE);\n    DatabaseType sqldbType = null;\n    if (DatabaseType.MONGODB.name().equals(dbType)) {\n      logger.info(\"Using MONGO DB configuration properties.\");\n      listOfClassPathXml.add(\"classpath:\" + MONGODB_BEANS_FILE);\n    } else if (DatabaseType.MSSQL.name().equals(dbType)) {\n      sqldbType = DatabaseType.MSSQL;\n      logger.info(\"Using MSSQL DB configuration properties.\");\n      listOfClassPathXml.add(\"classpath:\" + SQL_BEANS_FILE);\n    } else if (DatabaseType.MYSQL.name().equals(dbType)) {\n      sqldbType = DatabaseType.MYSQL;\n      logger.info(\"Using MYSQL DB configuration properties.\");\n      listOfClassPathXml.add(\"classpath:\" + SQL_BEANS_FILE);\n    } else {\n      throw new ReportConfigLoadException(\"Unknown database type: \" + dbType);\n    }\n\n    // Choose the Processor type to use based properties file\n    String processorType = (String) properties.get(AW_REPORT_PROCESSOR_TYPE);\n    if (forceFileProcessor) {\n      processorType = ProcessorType.FILE.name();\n    }\n\n    if (ProcessorType.STREAM.name().equals(processorType)) {\n      logger.info(\"Using MEMORY Processor.\");\n      listOfClassPathXml.add(\"classpath:\" + STREAM_PROCESSING_BEANS_FILE);\n    } else if (ProcessorType.FILE.name().equals(processorType)) {\n      logger.info(\"Using FILE Processor.\");\n      listOfClassPathXml.add(\"classpath:\" + FILE_PROCESSING_BEANS_FILE);\n    } else {\n      throw new ReportConfigLoadException(\"Unknown processor type: \" + processorType);\n    }\n\n    appCtx = new ClassPathXmlApplicationContext();\n    if (sqldbType != null) {\n      appCtx.getEnvironment().setActiveProfiles(sqldbType.name());\n    }\n\n    appCtx.setConfigLocations(listOfClassPathXml.toArray(new String[listOfClassPathXml.size()]));\n    appCtx.addBeanFactoryPostProcessor(configurer);\n    logger.warn(\"Updating database schema, this could take a few minutes ...\");\n    appCtx.refresh();\n    logger.warn(\"Done.\");\n\n    return properties;\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#PrefixExpression#SimpleName#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#StringLiteral#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#CastExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#QualifiedName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#InfixExpression#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleName#QualifiedName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleName#QualifiedName#Assignment#ExpressionStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#InfixExpression#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleName#QualifiedName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleName#QualifiedName#Assignment#ExpressionStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#InfixExpression#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleType#StringLiteral#SimpleName#InfixExpression#ClassInstanceCreation#ThrowStatement#Block#IfStatement#IfStatement#IfStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#CastExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#SimpleName#QualifiedName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#InfixExpression#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleName#QualifiedName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#InfixExpression#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleType#StringLiteral#SimpleName#InfixExpression#ClassInstanceCreation#ThrowStatement#Block#IfStatement#IfStatement#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#Assignment#ExpressionStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleType#Dimension#ArrayType#SimpleName#SimpleName#MethodInvocation#ArrayCreation#MethodInvocation#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation)Assignment)ExpressionStatement)Block)IfStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(TryStatement(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(StringLiteral)StringLiteral(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)CastExpression)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(MethodInvocation(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)MethodInvocation)ExpressionStatement)Block(IfStatement(MethodInvocation(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)Assignment)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)MethodInvocation)ExpressionStatement)Block(IfStatement(MethodInvocation(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)Assignment)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)MethodInvocation)ExpressionStatement)Block(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)ClassInstanceCreation)ThrowStatement)Block)IfStatement)IfStatement)IfStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)CastExpression)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(SimpleName)SimpleName(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block)IfStatement(IfStatement(MethodInvocation(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)MethodInvocation)ExpressionStatement)Block(IfStatement(MethodInvocation(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)MethodInvocation)ExpressionStatement)Block(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)ClassInstanceCreation)ThrowStatement)Block)IfStatement)IfStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation)Assignment)ExpressionStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block)IfStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(ArrayCreation(ArrayType(SimpleType(SimpleName)SimpleName)SimpleType(Dimension)Dimension)ArrayType(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ArrayCreation)MethodInvocation)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Initialize the application context, adding the properties configuration file depending on the specified path.", "call_func_name": ["org.slf4j.Logger.trace", "org.springframework.core.io.ClassPathResource.<init>", "org.springframework.core.io.Resource.exists", "org.springframework.core.io.FileSystemResource.<init>", "org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.<init>", "org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.setLocation", "org.springframework.core.io.support.PropertiesLoaderUtils.loadProperties", "com.google.api.ads.adwords.awreporting.ReportConfigLoadException.<init>", "com.google.api.client.util.Lists.newArrayList", "java.util.Properties.get", "com.google.api.ads.adwords.awreporting.util.DatabaseType.name", "java.lang.String.equals", "org.slf4j.Logger.info", "java.util.List.add", "java.lang.StringBuilder.<init>", "java.lang.StringBuilder.append", "java.lang.StringBuilder.toString", "com.google.api.ads.adwords.awreporting.ReportConfigLoadException.<init>", "com.google.api.ads.adwords.awreporting.util.ProcessorType.name", "org.springframework.context.support.ClassPathXmlApplicationContext.<init>", "org.springframework.context.support.ClassPathXmlApplicationContext.getEnvironment", "org.springframework.core.env.ConfigurableEnvironment.setActiveProfiles", "java.util.List.size", "java.util.List.toArray", "org.springframework.context.support.ClassPathXmlApplicationContext.setConfigLocations", "org.springframework.context.support.ClassPathXmlApplicationContext.addBeanFactoryPostProcessor", "org.slf4j.Logger.warn", "org.springframework.context.support.ClassPathXmlApplicationContext.refresh"], "call_func_parameter": [["java.lang.String"], ["java.lang.String"], [""], ["java.lang.String"], [""], ["org.springframework.core.io.Resource"], ["org.springframework.core.io.Resource"], ["java.lang.String", "java.lang.Throwable"], [""], ["java.lang.Object"], [""], ["java.lang.Object"], ["java.lang.String"], ["java.lang.Object"], [""], ["java.lang.String"], [""], ["java.lang.String"], [""], [""], [""], ["java.lang.String[]"], [""], ["java.lang.Object[]"], ["java.lang.String[]"], ["org.springframework.beans.factory.config.BeanFactoryPostProcessor"], ["java.lang.String"], [""]], "passed_comments": "/"}, {"index": "63", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/processors/file/FileRunnableProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.file.FileRunnableProcessor.FileRunnableProcessor", "methodParameterType": "String#File#boolean#ModifiedCsvToBean<R>#ReportEntityMappingStrategy<R>#DateRangeAndType#EntityPersister#int#", "methodParameterName": "topCustomerId#file#fileDownloadedByAPI#csvToBean#mappingStrategy#dateRangeAndType#entityPersister#reportRowsSetSize#", "methodBody": "public FileRunnableProcessor(\n      String topCustomerId,\n      File file,\n      boolean fileDownloadedByAPI,\n      ModifiedCsvToBean<R> csvToBean,\n      ReportEntityMappingStrategy<R> mappingStrategy,\n      DateRangeAndType dateRangeAndType,\n      EntityPersister entityPersister,\n      int reportRowsSetSize) {\n    \n    this.topCustomerId = Preconditions.checkNotNull(topCustomerId, \"topCustomerId cannot be null\");\n    this.file = Preconditions.checkNotNull(file, \"file cannot be null\");\n    this.fileDownloadedByAPI = fileDownloadedByAPI;\n    this.csvToBean = Preconditions.checkNotNull(csvToBean, \"csvToBean cannot be null\");\n    this.mappingStrategy =\n        Preconditions.checkNotNull(mappingStrategy, \"mappingStrategy cannot be null\");\n    this.dateRangeAndType =\n        Preconditions.checkNotNull(dateRangeAndType, \"dateRangeAndType cannot be null\");\n    this.entityPersister =\n        Preconditions.checkNotNull(entityPersister, \"entityPersister cannot be null\");\n    this.reportRowsSetSize = reportRowsSetSize;\n    Preconditions.checkArgument(reportRowsSetSize > 0, \"reportRowsSetSize must be > 0\");\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#SimpleName#SimpleName#SimpleName#NumberLiteral#InfixExpression#StringLiteral#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(SimpleName)SimpleName(NumberLiteral)NumberLiteral)InfixExpression(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "@param topCustomerId the top customer account id.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "64", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/processors/file/FileRunnableProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.file.FileRunnableProcessor.run", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "@Override\n  public void run() {\n    try {\n      logger.debug(\"Starting parse of report rows...\");\n      AwReportCsvReader csvReader = createCsvReader();\n      CsvParserIterator<R> reportRowsList = csvToBean.lazyParse(mappingStrategy, csvReader);\n      logger.debug(\"... success.\");\n\n      logger.debug(\"Starting report persistence...\");\n      List<R> reportBuffer = Lists.newArrayListWithCapacity(reportRowsSetSize);\n      while (reportRowsList.hasNext()) {\n        R report = reportRowsList.next();\n\n        // Getting Account Id from File Name for reports that do not have Client Customer Id\n        if (report.getCustomerId() == null) {\n          String filename = file.getName();\n          if (filename.contains(\"-\") && filename.split(\"-\") != null\n              && filename.split(\"-\").length >= 2 && filename.split(\"-\")[1].matches(\"\\\\d*\")) {\n            report.setCustomerId(Long.parseLong(file.getName().split(\"-\")[1]));\n          } else {\n            throw new IllegalArgumentException(\n                \"Unknown customer id for report \"\n                    + report.getClass().getSimpleName()\n                    + \" file \"\n                    + file.getName());\n          }\n        }\n\n        report.setTopCustomerId(Long.parseLong(topCustomerId.replaceAll(\"-\", \"\")));\n        report.setDateRangeType(dateRangeAndType.getTypeStr());\n        report.setStartDate(dateRangeAndType.getStartDateStr());\n        report.setEndDate(dateRangeAndType.getEndDateStr());\n        report.setRowId();\n\n        reportBuffer.add(report);\n\n        if (reportBuffer.size() >= reportRowsSetSize) {\n          entityPersister.persistReportEntities(reportBuffer);\n          reportBuffer.clear();\n        }\n      }\n      if (reportBuffer.size() > 0) {\n        entityPersister.persistReportEntities(reportBuffer);\n      }\n      logger.debug(\"... success.\");\n    } catch (IOException | CsvReportParsingException e) {\n      logger.error(\"Error processing file: \" + file.getAbsolutePath(), e);\n    } catch (RuntimeException e) {\n      logger.error(\"Runtime error processing file: \" + file.getAbsolutePath(), e);\n    }\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#NullLiteral#InfixExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#SimpleName#SimpleName#StringLiteral#MethodInvocation#NullLiteral#InfixExpression#InfixExpression#SimpleName#SimpleName#StringLiteral#MethodInvocation#SimpleName#FieldAccess#NumberLiteral#InfixExpression#InfixExpression#SimpleName#SimpleName#StringLiteral#MethodInvocation#NumberLiteral#ArrayAccess#SimpleName#StringLiteral#MethodInvocation#InfixExpression#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#StringLiteral#MethodInvocation#NumberLiteral#ArrayAccess#MethodInvocation#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleType#StringLiteral#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#StringLiteral#SimpleName#SimpleName#MethodInvocation#InfixExpression#ClassInstanceCreation#ThrowStatement#Block#IfStatement#Block#IfStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#StringLiteral#StringLiteral#MethodInvocation#MethodInvocation#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#SimpleName#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#WhileStatement#SimpleName#SimpleName#MethodInvocation#NumberLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SimpleType#UnionType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#InfixExpression#SimpleName#MethodInvocation#ExpressionStatement#Block#CatchClause#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#InfixExpression#SimpleName#MethodInvocation#ExpressionStatement#Block#CatchClause#TryStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(WhileStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(NullLiteral)NullLiteral)InfixExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(InfixExpression(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation(NullLiteral)NullLiteral)InfixExpression)InfixExpression(InfixExpression(FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation(SimpleName)SimpleName)FieldAccess(NumberLiteral)NumberLiteral)InfixExpression)InfixExpression(MethodInvocation(ArrayAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation(NumberLiteral)NumberLiteral)ArrayAccess(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(ArrayAccess(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation(NumberLiteral)NumberLiteral)ArrayAccess)MethodInvocation)MethodInvocation)ExpressionStatement)Block(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression)ClassInstanceCreation)ThrowStatement)Block)IfStatement)Block)IfStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(StringLiteral)StringLiteral)MethodInvocation)MethodInvocation)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(IfStatement(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)WhileStatement(IfStatement(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(NumberLiteral)NumberLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(UnionType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)UnionType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)CatchClause(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)CatchClause)TryStatement)Block)MethodDeclaration", "methodDoc": "Executes the API call to download the report that was given when this  {@code Runnable} wascreated. The download blocks this thread until it is finished, and also does the file copying. There is also a retry logic implemented by this method, where the times retried depends on the value given in the constructor.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "65", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/processors/file/FileRunnableProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.file.FileRunnableProcessor.createCsvReader", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "private AwReportCsvReader createCsvReader() throws IOException {\n    logger.debug(\"Creating CSVReader for file: \" + file.getAbsolutePath());\n\n    InputStreamReader reader =\n        new InputStreamReader(new FileInputStream(file), StandardCharsets.UTF_8);\n\n    // File downloaded by API means no header / summary lines.\n    boolean hasHeaderSummary = !fileDownloadedByAPI;\n    return new AwReportCsvReader(reader, hasHeaderSummary, hasHeaderSummary);\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#SimpleName#SimpleName#QualifiedName#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#PrimitiveType#SimpleName#SimpleName#PrefixExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#ClassInstanceCreation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(PrefixExpression(SimpleName)SimpleName)PrefixExpression)VariableDeclarationFragment)VariableDeclarationStatement(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)ClassInstanceCreation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Creates the proper  {@link AwReportCsvReader} to parse the AW reports.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "66", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/processors/file/FileReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.file.FileReportProcessor.FileReportProcessor", "methodParameterType": "Integer#Integer#Authenticator#", "methodParameterName": "reportRowsSetSize#numberOfReportProcessors#authenticator#", "methodBody": "@Autowired\n  public FileReportProcessor(\n      @Value(value = \"${aw.report.processor.rows.size}\") Integer reportRowsSetSize,\n      @Value(value = \"${aw.report.processor.threads}\") Integer numberOfReportProcessors,\n      Authenticator authenticator)\n      throws ReportProcessingException {\n    super(reportRowsSetSize, numberOfReportProcessors, authenticator);\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#Modifier#SimpleName#SimpleName#SimpleName#StringLiteral#MemberValuePair#NormalAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#MemberValuePair#NormalAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SuperConstructorInvocation#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(NormalAnnotation(SimpleName)SimpleName(MemberValuePair(SimpleName)SimpleName(StringLiteral)StringLiteral)MemberValuePair)NormalAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(NormalAnnotation(SimpleName)SimpleName(MemberValuePair(SimpleName)SimpleName(StringLiteral)StringLiteral)MemberValuePair)NormalAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(SuperConstructorInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)SuperConstructorInvocation)Block)MethodDeclaration", "methodDoc": "Constructor.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "67", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/processors/file/FileReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.file.FileReportProcessor.downloadAndProcess", "methodParameterType": "String#ReportDefinitionReportType#DateRangeAndType#Set<Long>#String#Properties#", "methodParameterName": "topCustomerId#reportType#dateRangeAndType#accountIdList#reportDefinitionKey#properties#", "methodBody": "@Override\n  protected void downloadAndProcess(\n      String topCustomerId,\n      ReportDefinitionReportType reportType,\n      DateRangeAndType dateRangeAndType,\n      Set<Long> accountIdList,\n      String reportDefinitionKey,\n      Properties properties)\n      throws ReportProcessingException {\n\n    // Download Reports to local files and Generate Report objects\n    logger.info(\"\\n\\n ** Generating: \" + reportType.name() + \" **\");\n    logger.info(\" Downloading reports...\");\n    Collection<File> localFiles = Lists.newArrayList();\n    ReportDefinition reportDefinition =\n        getReportDefinition(reportType, dateRangeAndType, reportDefinitionKey, properties);\n    MultipleClientReportDownloader multipleClientReportDownloader =\n        new MultipleClientReportDownloader(downloadSetting.getNumThreads());\n    localFiles =\n        multipleClientReportDownloader.downloadReports(\n            sessionBuilder, reportDefinition, accountIdList);\n    processLocalFiles(topCustomerId, reportType, localFiles, dateRangeAndType);\n    deleteTemporaryFiles(localFiles, reportType);\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#MethodInvocation#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Downloads all the files from the API using  {@code MultipleClientReportDownloader} and stores onlocal file system. The local files are processed using  {@code FileRunnableProcessor} to readall the rows in each file and persist the data to the configured database.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "68", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/processors/file/FileReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.file.FileReportProcessor.processFiles", "methodParameterType": "String#Class<R>#Collection<File>#boolean#DateRangeAndType#", "methodParameterName": "topCustomerId#reportBeanClass#localFiles#filesDownloadedByAPI#dateRangeAndType#", "methodBody": "private <R extends Report> void processFiles(\n      String topCustomerId,\n      Class<R> reportBeanClass,\n      Collection<File> localFiles,\n      boolean filesDownloadedByAPI,\n      DateRangeAndType dateRangeAndType)\n      throws ReportProcessingException {\n    logger.info(\"Processing report files...\");\n    Stopwatch stopwatch = Stopwatch.createStarted();\n\n    ExecutorService executorService = Executors.newFixedThreadPool(numberOfReportProcessors);\n    List<Callable<Object>> taskJobs = Lists.newArrayList();\n    \n    for (File file : localFiles) {\n      logger.trace(\".\");\n      // We need to create a csvToBean and mappingStrategy for each thread\n      ModifiedCsvToBean<R> csvToBean = new ModifiedCsvToBean<R>();\n        ReportEntityMappingStrategy<R> mappingStrategy =\n            new ReportEntityMappingStrategy<R>(reportBeanClass);\n\n        logger.debug(\"Parsing file: \" + file.getAbsolutePath());\n        FileRunnableProcessor<R> runnableProcessor =\n            new FileRunnableProcessor<R>(\n                topCustomerId,\n                file,\n                filesDownloadedByAPI,\n                csvToBean,\n                mappingStrategy,\n                dateRangeAndType,\n                persister,\n                reportRowsSetSize);\n      taskJobs.add(Executors.callable(runnableProcessor));\n    }\n    \n    try {\n      executorService.invokeAll(taskJobs);\n    } catch (InterruptedException e) {\n      throw new ReportProcessingException(\n          \"FileReportProcessor encounters InterruptedException.\", e);\n    }\n\n    executorService.shutdown();\n    stopwatch.stop();\n    logger.info(\n        \"*** Finished processing all reports in \"\n            + stopwatch.elapsed(TimeUnit.SECONDS)\n            + \" seconds ***\\n\");\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleName#SimpleType#TypeParameter#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#EnhancedForStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#StringLiteral#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(TypeParameter(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)TypeParameter(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleName)SimpleName(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block)EnhancedForStatement(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(StringLiteral)StringLiteral(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Each of the files downloaded is processed using  {@code FileRunnableProcessor} to read the CSV,map to a  {@code Report}, and then persist to configured database.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "69", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/processors/file/FileReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.file.FileReportProcessor.processLocalFiles", "methodParameterType": "String#ReportDefinitionReportType#Collection<File>#DateRangeAndType#", "methodParameterName": "topCustomerId#reportType#localFiles#dateRangeAndType#", "methodBody": "private void processLocalFiles(\n      String topCustomerId,\n      ReportDefinitionReportType reportType,\n      Collection<File> localFiles,\n      DateRangeAndType dateRangeAndType)\n      throws ReportProcessingException {\n    Class<? extends Report> reportBeanClass =\n        csvReportEntitiesMapping.getReportBeanClass(reportType);\n    processFiles(topCustomerId, reportBeanClass, localFiles, true, dateRangeAndType);\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#BooleanLiteral#SimpleName#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType(SimpleType(SimpleName)SimpleName)SimpleType)WildcardType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Process the local files delegating the call to the concrete implementation.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "70", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/processors/file/FileReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.file.FileReportProcessor.processInputFiles", "methodParameterType": "String#String#Collection<File>#DateRangeAndType#", "methodParameterName": "topCustomerId#reportTypeName#localFiles#dateRangeAndType#", "methodBody": "public void processInputFiles(\n      String topCustomerId,\n      String reportTypeName,\n      Collection<File> localFiles,\n      DateRangeAndType dateRangeAndType)\n      throws ReportProcessingException {\n\n    Class<? extends Report> reportBeanClass;\n    try {\n      ReportDefinitionReportType reportType = ReportDefinitionReportType.valueOf(reportTypeName);\n      reportBeanClass = csvReportEntitiesMapping.getReportBeanClass(reportType);\n    } catch (IllegalArgumentException e) {\n      reportBeanClass = csvReportEntitiesMapping.getExperimentalReportBeanClass(reportTypeName);\n    }\n    if (reportBeanClass == null) {\n      throw new IllegalArgumentException(\"Report type not found: \" + reportTypeName);\n    }\n\n    processFiles(topCustomerId, reportBeanClass, localFiles, false, dateRangeAndType);\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#CatchClause#TryStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleType#StringLiteral#SimpleName#InfixExpression#ClassInstanceCreation#ThrowStatement#Block#IfStatement#SimpleName#SimpleName#SimpleName#SimpleName#BooleanLiteral#SimpleName#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType(SimpleType(SimpleName)SimpleName)SimpleType)WildcardType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName)VariableDeclarationFragment)VariableDeclarationStatement(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block)CatchClause)TryStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)ClassInstanceCreation)ThrowStatement)Block)IfStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Process the input files delegating the call to the concrete implementation.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "71", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/processors/file/FileReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.file.FileReportProcessor.deleteTemporaryFiles", "methodParameterType": "Collection<File>#ReportDefinitionReportType#", "methodParameterName": "localFiles#reportType#", "methodBody": "private void deleteTemporaryFiles(\n      Collection<File> localFiles, ReportDefinitionReportType reportType) {\n\n    // Delete temporary report files\n    logger.info(\"\\n Deleting temporary report files after Parsing...\");\n    for (File file : localFiles) {\n      file.delete();\n      logger.trace(\".\");\n    }\n    logger.info(\"\\n ** Finished: \" + reportType.name() + \" **\");\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#Block#EnhancedForStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleName)SimpleName(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement)Block)EnhancedForStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Deletes the local files used as temporary containers.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "72", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/processors/ReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.ReportProcessor", "methodParameterType": "Integer#Integer#Authenticator#", "methodParameterName": "reportRowsSetSize#numberOfReportProcessors#authenticator#", "methodBody": "@Autowired\n  public ReportProcessor(\n      Integer reportRowsSetSize, Integer numberOfReportProcessors, Authenticator authenticator)\n      throws ReportProcessingException {\n    Preconditions.checkNotNull(reportRowsSetSize, \"ReportRowSetSize cannot be null!\");\n    Preconditions.checkNotNull(\n        numberOfReportProcessors, \"NumberOfReportProcessors cannot be null!\");\n    Preconditions.checkNotNull(authenticator, \"Authenticator cannot be null!\");\n    Preconditions.checkArgument(reportRowsSetSize > 0, \"ReportRowSetSize must be > 0\");\n    Preconditions.checkArgument(\n        numberOfReportProcessors > 0, \"NumberOfReportProcessors must be > 0\");\n    \n    this.reportRowsSetSize = reportRowsSetSize.intValue();\n    this.numberOfReportProcessors = numberOfReportProcessors.intValue();\n\n    try {\n      sessionBuilder = authenticator.authenticate();\n    } catch (OAuthException e) {\n      throw new ReportProcessingException(\"Failed to authenticate AdWordsSession.\", e);\n    }\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#Modifier#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#NumberLiteral#InfixExpression#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#NumberLiteral#InfixExpression#StringLiteral#MethodInvocation#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#StringLiteral#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(SimpleName)SimpleName(NumberLiteral)NumberLiteral)InfixExpression(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(SimpleName)SimpleName(NumberLiteral)NumberLiteral)InfixExpression(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement(TryStatement(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(StringLiteral)StringLiteral(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement)Block)MethodDeclaration", "methodDoc": "Constructor.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "73", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/processors/ReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.generateReportsForManagerAccount", "methodParameterType": "String#DateRangeAndType#Set<Long>#Properties#", "methodParameterName": "topCustomerId#dateRangeAndType#accountIdsSet#properties#", "methodBody": "public void generateReportsForManagerAccount(\n      String topCustomerId,\n      DateRangeAndType dateRangeAndType,\n      Set<Long> accountIdsSet,\n      Properties properties)\n      throws ReportProcessingException {\n    logger.info(\"*** Retrieving account IDs ***\");\n\n    if (accountIdsSet == null || accountIdsSet.size() == 0) {\n      boolean excludeHiddenAccounts = getExcludeHiddenAccounts(properties);\n      accountIdsSet = retrieveAccountIds(topCustomerId, excludeHiddenAccounts);\n    } else {\n      logger.info(\"Accounts loaded from file.\");\n    }\n\n    ReportingConfiguration reportingConfig = getReportingConfiguration(properties);\n    sessionBuilder.withReportingConfiguration(reportingConfig);\n\n    logger.info(\"*** Generating Reports for \" + accountIdsSet.size() + \" accounts ***\");\n    Stopwatch stopwatch = Stopwatch.createStarted();\n    Set<ReportDefinitionReportType> reports = csvReportEntitiesMapping.getDefinedReports();\n\n    // reports\n    Set<Object> propertiesKeys = properties.keySet();\n    for (Object key : propertiesKeys) {\n\n      String reportDefinitionKey = key.toString();\n      ReportDefinitionReportType reportType = extractReportTypeFromKey(reportDefinitionKey);\n      if (reportType != null && reports.contains(reportType)) {\n        try {\n          downloadAndProcess(\n              topCustomerId,\n              reportType,\n              dateRangeAndType,\n              accountIdsSet,\n              reportDefinitionKey,\n              properties);\n        } catch (ReportProcessingException e) {\n          logger.error(\"Unable to download and process \" + reportType + \" for \" + topCustomerId, e);\n        }\n      }\n    }\n\n    stopwatch.stop();\n    logger.info(\n        \"*** Finished processing all reports in \"\n            + stopwatch.elapsed(TimeUnit.SECONDS)\n            + \" seconds ***\\n\");\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#MethodInvocation#NumberLiteral#InfixExpression#InfixExpression#PrimitiveType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#InfixExpression#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#SimpleName#StringLiteral#SimpleName#InfixExpression#SimpleName#MethodInvocation#ExpressionStatement#Block#CatchClause#TryStatement#Block#IfStatement#Block#EnhancedForStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(IfStatement(InfixExpression(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(NumberLiteral)NumberLiteral)InfixExpression)InfixExpression(Block(VariableDeclarationStatement(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement)Block)IfStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleName)SimpleName(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)CatchClause)TryStatement)Block)IfStatement)Block)EnhancedForStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Generate all the mapped reports of (optionally) given account IDs under the specified manager account.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "74", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/processors/ReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.downloadAndProcess", "methodParameterType": "String#ReportDefinitionReportType#DateRangeAndType#Set<Long>#String#Properties#", "methodParameterName": "topCustomerId#reportType#dateRangeAndType#accountIdList#reportDefinitionKey#properties#", "methodBody": "protected abstract void downloadAndProcess(\n      String topCustomerId,\n      ReportDefinitionReportType reportType,\n      DateRangeAndType dateRangeAndType,\n      Set<Long> accountIdList,\n      String reportDefinitionKey,\n      Properties properties)\n      throws ReportProcessingException;", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType)MethodDeclaration", "methodDoc": "Downloads all the files from the API and process all the rows, saving the data to the configured database.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "75", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/processors/ReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.retrieveAccountIds", "methodParameterType": "String#boolean#", "methodParameterName": "topCustomerId#excludeHiddenAccounts#", "methodBody": "public Set<Long> retrieveAccountIds(String topCustomerId, boolean excludeHiddenAccounts)\n      throws ReportProcessingException {\n    logger.info(\"Client customer IDs being retrieved from the API. This may take a while...\");\n    logger.info(\"Property ExcludeHiddenAccounts=\" + String.valueOf(excludeHiddenAccounts));\n    \n    try {\n      ImmutableAdWordsSession session =\n          AdWordsSessionUtil.buildImmutableSessionForCid(sessionBuilder, topCustomerId);\n      Set<Long> accountIdsSet =\n          new ManagedCustomerDelegate(session, excludeHiddenAccounts).getClientCustomerIds();\n\n      cacheAccounts(accountIdsSet);\n      return accountIdsSet;\n    } catch (ValidationException e) {\n      throw new ReportProcessingException(\n          \"Failed to create valid session for account \" + topCustomerId, e);\n    } catch (ApiException e) {\n      throw new ReportProcessingException(\n          \"Failed to retrieve account IDs under \" + topCustomerId, e);\n    }\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#SimpleName#MethodInvocation#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#ClassInstanceCreation#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#ReturnStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#StringLiteral#SimpleName#InfixExpression#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#StringLiteral#SimpleName#InfixExpression#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression)MethodInvocation)ExpressionStatement(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleName)SimpleName)ClassInstanceCreation(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement)Block)MethodDeclaration", "methodDoc": "Uses the API to retrieve the managed accounts and extract their IDs.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "76", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/processors/ReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.cacheAccounts", "methodParameterType": "Set<Long>#", "methodParameterName": "accountIdsSet#", "methodBody": "private void cacheAccounts(Set<Long> accountIdsSet) {\n    String nowFormat = TIMESTAMPFORMAT.print(DateTime.now());\n    \n    File tempFile = null;\n    try {\n      tempFile = File.createTempFile(nowFormat + \"-accounts-ids\", \".txt\");\n      logger.info(\"Cache file created for accounts: \" + tempFile.getAbsolutePath());\n    } catch (IOException e) {\n      logger.error(\n          \"Could not create temporary file with the accounts. Accounts won't be cached.\", e);\n    }\n\n    try (OutputStreamWriter writer =\n        new OutputStreamWriter(new FileOutputStream(tempFile), StandardCharsets.UTF_8)) {\n      for (Long accountId : accountIdsSet) {\n        writer.write(Long.toString(accountId) + \"\\n\");\n      }\n      logger.info(\"All account IDs added to cache file.\");\n    } catch (IOException e) {\n      logger.error(\"Failed ot cache accounts into temporary file.\", e);\n    }\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#StringLiteral#InfixExpression#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#InfixExpression#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#SimpleName#MethodInvocation#ExpressionStatement#Block#CatchClause#TryStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#SimpleName#SimpleName#QualifiedName#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationExpression#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#Block#EnhancedForStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#SimpleName#MethodInvocation#ExpressionStatement#Block#CatchClause#TryStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(TryStatement(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(SimpleName)SimpleName(StringLiteral)StringLiteral)InfixExpression(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression)MethodInvocation)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)CatchClause)TryStatement(TryStatement(VariableDeclarationExpression(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationExpression(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleName)SimpleName(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement)Block)EnhancedForStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)CatchClause)TryStatement)Block)MethodDeclaration", "methodDoc": "Caches the accounts into a temporary file.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "77", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/processors/ReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.getReportDefinition", "methodParameterType": "ReportDefinitionReportType#DateRangeAndType#String#Properties#", "methodParameterName": "reportDefinitionReportType#dateRangeAndType#reportDefinitionKey#properties#", "methodBody": "protected ReportDefinition getReportDefinition(\n      ReportDefinitionReportType reportDefinitionReportType,\n      DateRangeAndType dateRangeAndType,\n      String reportDefinitionKey,\n      Properties properties) {\n\n    // Create the Selector with all the fields defined in the Mapping\n    Selector selector = new Selector();\n\n    List<String> reportFields =\n        csvReportEntitiesMapping.retrievePropertiesToSelect(reportDefinitionReportType);\n\n    // Add the inclusions from the properties file\n    List<String> reportFieldsToInclude = getReportInclusions(reportDefinitionKey, properties);\n    for (String reportField : reportFields) {\n      if (reportFieldsToInclude.contains(reportField)) {\n        selector.getFields().add(reportField);\n      }\n    }\n    adjustDateRange(reportDefinitionReportType, dateRangeAndType, selector);\n\n    return instantiateReportDefinition(\n        reportDefinitionReportType, dateRangeAndType.getType(), selector);\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#EnhancedForStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleName)SimpleName(Block(IfStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(ExpressionStatement(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)EnhancedForStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Creates the complete report definition with all the dates and types properly set.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "78", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/processors/ReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.extractReportTypeFromKey", "methodParameterType": "String#", "methodParameterName": "keyName#", "methodBody": "private ReportDefinitionReportType extractReportTypeFromKey(String keyName) {\n    int indexOfDollar = keyName.indexOf(REPORT_KEY_SEPARATOR);\n    if (indexOfDollar > 0) {\n      keyName = keyName.substring(0, indexOfDollar);\n    }\n    try {\n      return ReportDefinitionReportType.valueOf(keyName);\n    } catch (IllegalArgumentException e) {\n      return null;\n    }\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NumberLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#NumberLiteral#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#NullLiteral#ReturnStatement#Block#CatchClause#TryStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NumberLiteral)NumberLiteral)InfixExpression(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block)IfStatement(TryStatement(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(NullLiteral)NullLiteral)ReturnStatement)Block)CatchClause)TryStatement)Block)MethodDeclaration", "methodDoc": "Extracts the report type name from the given key name.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "79", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/processors/ReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.adjustDateRange", "methodParameterType": "ReportDefinitionReportType#DateRangeAndType#Selector#", "methodParameterName": "reportDefinitionReportType#dateRangeAndType#selector#", "methodBody": "protected void adjustDateRange(\n      ReportDefinitionReportType reportDefinitionReportType,\n      DateRangeAndType dateRangeAndType,\n      Selector selector) {\n    if (dateRangeAndType.getType().equals(ReportDefinitionDateRangeType.CUSTOM_DATE)\n        && csvReportEntitiesMapping.supportsDateRange(reportDefinitionReportType)) {\n      selector.setDateRange(dateRangeAndType.getDateRange());\n    }\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#SimpleName#SimpleName#SimpleName#MethodInvocation#InfixExpression#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)MethodDeclaration", "methodDoc": "Adjusts the date range in case of a custom date type. The adjustment do not apply for certain reports, like  {@code CAMPAIGN_NEGATIVE_KEYWORDS_PERFORMANCE_REPORT}.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "80", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/processors/ReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.instantiateReportDefinition", "methodParameterType": "ReportDefinitionReportType#ReportDefinitionDateRangeType#Selector#", "methodParameterName": "reportDefinitionReportType#dateRangeType#selector#", "methodBody": "protected ReportDefinition instantiateReportDefinition(\n      ReportDefinitionReportType reportDefinitionReportType,\n      ReportDefinitionDateRangeType dateRangeType,\n      Selector selector) {\n\n    // Create the Report Definition\n    ReportDefinition reportDefinition = new ReportDefinition();\n    reportDefinition.setReportName(\n        REPORT_PREFIX + reportDefinitionReportType.value() + \" \" + System.currentTimeMillis());\n    reportDefinition.setDateRangeType(dateRangeType);\n    reportDefinition.setReportType(reportDefinitionReportType);\n    reportDefinition.setDownloadFormat(DownloadFormat.GZIPPED_CSV);\n    reportDefinition.setSelector(selector);\n    return reportDefinition;\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#StringLiteral#SimpleName#SimpleName#MethodInvocation#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Instantiates the report definition, setting all the correct formats.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "81", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/processors/ReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.ReportProcessor.getReportInclusions", "methodParameterType": "String#Properties#", "methodParameterName": "reportDefinitionKey#properties#", "methodBody": "private List<String> getReportInclusions(String reportDefinitionKey, Properties properties) {\n    String propertyInclusions = properties.getProperty(reportDefinitionKey);\n    return Lists.newArrayList(\n        Splitter.on(',').omitEmptyStrings().trimResults().split(propertyInclusions));\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#CharacterLiteral#MethodInvocation#SimpleName#MethodInvocation#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(CharacterLiteral)CharacterLiteral)MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Look for properties to include in the reports.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "82", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/processors/stream/StreamingRunnableProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.stream.StreamingRunnableProcessor.StreamingRunnableProcessor", "methodParameterType": "String#ImmutableAdWordsSession#ReportDefinition#DateRangeAndType#ModifiedCsvToBean<R>#ReportEntityMappingStrategy<R>#EntityPersister#int#", "methodParameterName": "topCustomerId#session#reportDefinition#dateRangeAndType#csvToBean#mappingStrategy#entityPersister#reportRowsSetSize#", "methodBody": "public StreamingRunnableProcessor(\n      String topCustomerId,\n      ImmutableAdWordsSession session,\n      ReportDefinition reportDefinition,\n      DateRangeAndType dateRangeAndType,\n      ModifiedCsvToBean<R> csvToBean,\n      ReportEntityMappingStrategy<R> mappingStrategy,\n      EntityPersister entityPersister,\n      int reportRowsSetSize) {\n    this.topCustomerId = Preconditions.checkNotNull(topCustomerId, \"topCustomerId cannot be null\");\n    \n    this.session = Preconditions.checkNotNull(session, \"session cannot be null.\");\n    this.reportDefinition =\n        Preconditions.checkNotNull(reportDefinition, \"reportDefinition cannot be null\");\n    this.dateRangeAndType =\n        Preconditions.checkNotNull(dateRangeAndType, \"dateRangeAndType cannot be null\");\n    \n    this.csvToBean = Preconditions.checkNotNull(csvToBean, \"csvToBean cannot be null\");\n    this.mappingStrategy =\n        Preconditions.checkNotNull(mappingStrategy, \"mappingStrategy cannot be null\");\n    this.entityPersister =\n        Preconditions.checkNotNull(entityPersister, \"entityPersister cannot be null\");\n    this.reportRowsSetSize = reportRowsSetSize;\n    Preconditions.checkArgument(reportRowsSetSize > 0, \"reportRowsSetSize must be > 0\");\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#SimpleName#SimpleName#SimpleName#NumberLiteral#InfixExpression#StringLiteral#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(SimpleName)SimpleName(NumberLiteral)NumberLiteral)InfixExpression(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Constructor for  {@code Runnable} to download reports from AdWords API.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "83", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/processors/stream/StreamingRunnableProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.stream.StreamingRunnableProcessor.run", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "@Override\n  public void run() {\n    // Report Input Streams comes GZipped\n    try (GZIPInputStream gZIPInputStream = new GZIPInputStream(getReportInputStream())) {\n      AwReportCsvReader csvReader = createCsvReader(gZIPInputStream);\n      parseCsv(csvReader);\n    } catch (IOException | CsvReportParsingException e) {\n      logger.error(\"Error processing report for account: \" + session.getClientCustomerId(), e);\n    } catch (RuntimeException e) {\n      logger.error(\n          \"Runtime error processing report for account: \" + session.getClientCustomerId(), e);\n    }\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#MethodInvocation#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SimpleType#UnionType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#InfixExpression#SimpleName#MethodInvocation#ExpressionStatement#Block#CatchClause#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#InfixExpression#SimpleName#MethodInvocation#ExpressionStatement#Block#CatchClause#TryStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(Block(TryStatement(VariableDeclarationExpression(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(UnionType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)UnionType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)CatchClause(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)CatchClause)TryStatement)Block)MethodDeclaration", "methodDoc": "Executes the API call to download the report that was given when this  {@code Runnable} wascreated. <p>The download blocks this thread until it is finished, does the file copying and stream parsing. <p>There is also a retry logic implemented by this method, where the times retried depends on the value given in the constructor.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "84", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/processors/stream/StreamingRunnableProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.stream.StreamingRunnableProcessor.createCsvReader", "methodParameterType": "InputStream#", "methodParameterName": "inputStream#", "methodBody": "private AwReportCsvReader createCsvReader(InputStream inputStream) throws IOException {\n    InputStreamReader reader = new InputStreamReader(inputStream, StandardCharsets.UTF_8);\n    return new AwReportCsvReader(reader, false, false);\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#QualifiedName#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#BooleanLiteral#BooleanLiteral#ClassInstanceCreation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral(BooleanLiteral)BooleanLiteral)ClassInstanceCreation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Creates the proper  {@link AwReportCsvReader} to parse the AW reports.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "85", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/processors/stream/StreamingRunnableProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.stream.StreamingRunnableProcessor.getReportInputStream", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "private InputStream getReportInputStream() {\n    ReportDownloaderInterface reportDownloader =\n        AdWordsServicesUtil.getUtility(session, ReportDownloaderInterface.class);\n    \n    InputStream result = null;\n    try {\n      ReportDownloadResponse reportDownloadResponse =\n          reportDownloader.downloadReport(reportDefinition);\n      result = reportDownloadResponse.getInputStream();\n    } catch (ReportException | ReportDownloadResponseException e) {\n      logger.error(\n          \"Failed to download report stream for {} with account {}.\",\n          reportDefinition.getReportType(),\n          session.getClientCustomerId(),\n          e);\n    }\n\n    return result;\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleType#TypeLiteral#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SimpleType#UnionType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#ExpressionStatement#Block#CatchClause#TryStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(TypeLiteral(SimpleType(SimpleName)SimpleName)SimpleType)TypeLiteral)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(UnionType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)UnionType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)CatchClause)TryStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Downloads the file from the API into an InputStream.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "86", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/processors/stream/StreamingRunnableProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.stream.StreamingRunnableProcessor.parseCsv", "methodParameterType": "AwReportCsvReader#", "methodParameterName": "csvReader#", "methodBody": "private void parseCsv(AwReportCsvReader csvReader) throws CsvReportParsingException {\n    logger.debug(\"Starting parse of report rows...\");\n    CsvParserIterator<R> reportRowsList = csvToBean.lazyParse(mappingStrategy, csvReader);\n    logger.debug(\"Successfully finished parse of report rows.\");\n\n    logger.debug(\"Starting report persistence...\");\n    List<R> reportBuffer = Lists.newArrayList();\n    while (reportRowsList.hasNext()) {\n      R report = reportRowsList.next();\n      report.setCustomerId(StringsUtil.parseCustomerId(session.getClientCustomerId()));\n      report.setTopCustomerId(StringsUtil.parseCustomerId(topCustomerId));\n      report.setDateRangeType(dateRangeAndType.getTypeStr());\n      report.setStartDate(dateRangeAndType.getStartDateStr());\n      report.setEndDate(dateRangeAndType.getEndDateStr());\n      report.setRowId();\n      reportBuffer.add(report);\n\n      if (reportBuffer.size() >= reportRowsSetSize) {\n        entityPersister.persistReportEntities(reportBuffer);\n        reportBuffer.clear();\n      }\n    }\n    if (reportBuffer.size() > 0) {\n      entityPersister.persistReportEntities(reportBuffer);\n    }\n    logger.debug(\"Successfully finished report persistence.\");\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#SimpleName#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#WhileStatement#SimpleName#SimpleName#MethodInvocation#NumberLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(WhileStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(IfStatement(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)WhileStatement(IfStatement(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(NumberLiteral)NumberLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Parse the CSV content and persist data.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "87", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/processors/stream/StreamingReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.stream.StreamingReportProcessor.StreamingReportProcessor", "methodParameterType": "Integer#Integer#Authenticator#", "methodParameterName": "reportRowsSetSize#numberOfReportProcessors#authenticator#", "methodBody": "@Autowired\n  public StreamingReportProcessor(\n      @Value(value = \"${aw.report.processor.rows.size}\") Integer reportRowsSetSize,\n      @Value(value = \"${aw.report.processor.threads}\") Integer numberOfReportProcessors,\n      Authenticator authenticator)\n      throws ReportProcessingException {\n    super(reportRowsSetSize, numberOfReportProcessors, authenticator);\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#Modifier#SimpleName#SimpleName#SimpleName#StringLiteral#MemberValuePair#NormalAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#MemberValuePair#NormalAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SuperConstructorInvocation#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(NormalAnnotation(SimpleName)SimpleName(MemberValuePair(SimpleName)SimpleName(StringLiteral)StringLiteral)MemberValuePair)NormalAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(NormalAnnotation(SimpleName)SimpleName(MemberValuePair(SimpleName)SimpleName(StringLiteral)StringLiteral)MemberValuePair)NormalAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(SuperConstructorInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)SuperConstructorInvocation)Block)MethodDeclaration", "methodDoc": "Constructor.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "88", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/processors/stream/StreamingReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.stream.StreamingReportProcessor.downloadAndProcess", "methodParameterType": "String#ReportDefinitionReportType#DateRangeAndType#Set<Long>#String#Properties#", "methodParameterName": "topCustomerId#reportType#dateRangeAndType#accountIdList#reportDefinitionKey#properties#", "methodBody": "@Override\n  protected void downloadAndProcess(\n      String topCustomerId,\n      ReportDefinitionReportType reportType,\n      DateRangeAndType dateRangeAndType,\n      Set<Long> accountIdList,\n      String reportDefinitionKey,\n      Properties properties)\n      throws ReportProcessingException {\n    // Download Reports to local files and Generate Report objects\n    logger.info(\"\\n\\n ** Generating: \" + reportType.name() + \" **\");\n    logger.info(\" Processing reports...\");\n\n    ReportDefinition reportDefinition =\n        getReportDefinition(reportType, dateRangeAndType, reportDefinitionKey, properties);\n\n    Class<? extends Report> reportBeanClass =\n        this.csvReportEntitiesMapping.getReportBeanClass(reportType);\n\n    downloadAndProcessReports(\n        topCustomerId, reportBeanClass, accountIdList, reportDefinition, dateRangeAndType);\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType(SimpleType(SimpleName)SimpleName)SimpleType)WildcardType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Downloads all the files from the API and process all the rows, saving the data to the configured database.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "89", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/processors/stream/StreamingReportProcessor.java", "methodName": "com.google.api.ads.adwords.awreporting.processors.stream.StreamingReportProcessor.downloadAndProcessReports", "methodParameterType": "String#Class<R>#Set<Long>#ReportDefinition#DateRangeAndType#", "methodParameterName": "topCustomerId#reportBeanClass#accountIdList#reportDefinition#dateRangeAndType#", "methodBody": "private <R extends Report> void downloadAndProcessReports(\n      String topCustomerId,\n      Class<R> reportBeanClass,\n      Set<Long> accountIdList,\n      ReportDefinition reportDefinition,\n      DateRangeAndType dateRangeAndType)\n      throws ReportProcessingException {\n    logger.info(\"Processing report streams...\");\n    Stopwatch stopwatch = Stopwatch.createStarted();\n    \n    ExecutorService executorService = Executors.newFixedThreadPool(numberOfReportProcessors);\n    List<Callable<Object>> taskJobs = Lists.newArrayList();\n\n    for (Long accountId : accountIdList) {\n      try {\n        logger.debug(\"Processing account: \" + accountId);\n\n        // We need to create a csvToBean and mappingStrategy for each thread\n        ModifiedCsvToBean<R> csvToBean = new ModifiedCsvToBean<R>();\n        ReportEntityMappingStrategy<R> mappingStrategy =\n            new ReportEntityMappingStrategy<R>(reportBeanClass);\n\n        ImmutableAdWordsSession accountSession =\n            AdWordsSessionUtil.buildImmutableSessionForCid(sessionBuilder, accountId);\n\n        StreamingRunnableProcessor<R> runnableProcessor =\n            new StreamingRunnableProcessor<R>(\n                topCustomerId,\n                accountSession,\n                reportDefinition,\n                dateRangeAndType,\n                csvToBean,\n                mappingStrategy,\n                persister,\n                reportRowsSetSize);\n        taskJobs.add(Executors.callable(runnableProcessor));\n      } catch (ValidationException e) {\n        logger.warn(\"Ignoring account (Error when processing): \" + accountId, e);\n      }\n    }\n\n    try {\n      executorService.invokeAll(taskJobs);\n    } catch (InterruptedException e) {\n      throw new ReportProcessingException(\n          \"StreamingReportProcessor encounters InterruptedException.\", e);\n    }\n    \n    executorService.shutdown();\n    stopwatch.stop();\n    logger.info(\n        \"*** Finished processing all reports in \"\n            + stopwatch.elapsed(TimeUnit.SECONDS)\n            + \" seconds ***\\n\");\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleName#SimpleType#TypeParameter#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#StringLiteral#SimpleName#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#SimpleName#InfixExpression#SimpleName#MethodInvocation#ExpressionStatement#Block#CatchClause#TryStatement#Block#EnhancedForStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#StringLiteral#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(TypeParameter(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)TypeParameter(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleName)SimpleName(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)CatchClause)TryStatement)Block)EnhancedForStatement(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(StringLiteral)StringLiteral(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "For each account, download report stream, map to a  {@code Report}, and then persist to configured database.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "90", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/downloader/MultipleClientReportDownloader.java", "methodName": "com.google.api.ads.adwords.awreporting.downloader.MultipleClientReportDownloader.downloadReports", "methodParameterType": "AdWordsSession.Builder#ReportDefinition#Set<Long>#", "methodParameterName": "sessionBuilder#reportDefinition#clientCustomerIds#", "methodBody": "public Collection<File> downloadReports(\n      AdWordsSession.Builder sessionBuilder,\n      ReportDefinition reportDefinition,\n      Set<Long> clientCustomerIds)\n      throws ReportProcessingException {\n    ExecutorService executorService = Executors.newFixedThreadPool(numThreads);\n    Stopwatch stopwatch = Stopwatch.createStarted();\n    logger.info(\"Downloading {\" + reportDefinition.getReportType() + \"} reports...\");\n\n    List<Long> taskIds = Lists.newArrayList();\n    List<CallableReportDownloader> taskJobs = Lists.newArrayList();\n    Map<Long, String> failures = Maps.newHashMap();\n    ImmutableAdWordsSession session = null;\n    for (Long clientCustomerId : clientCustomerIds) {\n      try {\n        session = AdWordsSessionUtil.buildImmutableSessionForCid(sessionBuilder, clientCustomerId);\n      } catch (ValidationException e) {\n        logger.error(\"Failed to create valid adwords session for CID \" + clientCustomerId\n            + \", skipping it.\");\n        failures.put(clientCustomerId, e.getMessage());\n        continue;\n      }\n\n      taskIds.add(clientCustomerId);\n      taskJobs.add(genCallableReportDownloader(session, reportDefinition));\n    }\n\n    List<Future<File>> taskResults;\n    try {\n      //Note that invokeAll() returns results in the same sequence as input tasks.\n      taskResults = executorService.invokeAll(taskJobs);\n    } catch (InterruptedException e) {\n      throw new ReportProcessingException(\n        \"MultipleClientReportDownloader encounters InterruptedException.\", e);\n    }\n\n    List<File> results = Lists.newArrayList();\n    for (int i = 0; i < taskResults.size(); i++) {\n      try {\n        results.add(taskResults.get(i).get());\n      } catch (ExecutionException e) {\n        failures.put(taskIds.get(i), e.getMessage());\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        throw new ReportProcessingException(\n            \"MultiClientReportDownloader encounters InterruptedException.\", e);\n      }\n    }\n\n    executorService.shutdown();\n    stopwatch.stop();\n\n    logger.info(\"Downloaded reports for \" + clientCustomerIds.size() + \" accounts in \"\n        + stopwatch.elapsed(TimeUnit.SECONDS) + \" seconds.\");\n    logger.info(\"Result: \" +  results.size() + \" successes, \" + failures.size() + \" failures.\");\n    if (!failures.isEmpty()) {\n      StringBuilder sb = new StringBuilder(\"*** Account IDs of download failures ***\");\n      sb.append(SEPARATOR);\n      sb.append(Joiner.on(SEPARATOR).withKeyValueSeparator(\": \").join(failures));\n      logger.error(sb.toString());\n    }\n\n    return results;\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#SimpleName#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#ContinueStatement#Block#CatchClause#TryStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#EnhancedForStatement#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#ParameterizedType#SimpleName#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#StringLiteral#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#PrimitiveType#SimpleName#NumberLiteral#VariableDeclarationFragment#VariableDeclarationExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#InfixExpression#SimpleName#PostfixExpression#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#CatchClause#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#StringLiteral#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#Block#ForStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#StringLiteral#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#StringLiteral#SimpleName#SimpleName#MethodInvocation#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#PrefixExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#StringLiteral#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#StringLiteral#MethodInvocation#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleName)SimpleName(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement(ContinueStatement)ContinueStatement)Block)CatchClause)TryStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block)EnhancedForStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName)VariableDeclarationFragment)VariableDeclarationStatement(TryStatement(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(StringLiteral)StringLiteral(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ForStatement(VariableDeclarationExpression(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(NumberLiteral)NumberLiteral)VariableDeclarationFragment)VariableDeclarationExpression(InfixExpression(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression(PostfixExpression(SimpleName)SimpleName)PostfixExpression(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block)CatchClause(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(StringLiteral)StringLiteral(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement)Block)ForStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement(IfStatement(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(StringLiteral)StringLiteral)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Downloads the specified report for all specified CIDs.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "91", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/downloader/MultipleClientReportDownloader.java", "methodName": "com.google.api.ads.adwords.awreporting.downloader.MultipleClientReportDownloader.genCallableReportDownloader", "methodParameterType": "ImmutableAdWordsSession#ReportDefinition#", "methodParameterName": "session#reportDefinition#", "methodBody": "protected CallableReportDownloader genCallableReportDownloader(\n      ImmutableAdWordsSession session, ReportDefinition reportDefinition) {\n    return new CallableReportDownloader(session, reportDefinition);\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#ClassInstanceCreation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleName)SimpleName)ClassInstanceCreation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Generates a CallableReportDownloader for downloading report in a service thread.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "92", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/downloader/CallableReportDownloader.java", "methodName": "com.google.api.ads.adwords.awreporting.downloader.CallableReportDownloader.CallableReportDownloader", "methodParameterType": "ImmutableAdWordsSession#ReportDefinition#", "methodParameterName": "session#reportDefinition#", "methodBody": "public CallableReportDownloader(\n      ImmutableAdWordsSession session, ReportDefinition reportDefinition) {\n    this.session = Preconditions.checkNotNull(session, \"session cannot be null.\");\n    this.reportDefinition = Preconditions.checkNotNull(reportDefinition,\n        \"reportDefinition cannot be null.\");\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "@param session the adwords session used for downloading report", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "93", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/downloader/CallableReportDownloader.java", "methodName": "com.google.api.ads.adwords.awreporting.downloader.CallableReportDownloader.call", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "@Override\n  public File call() throws ReportProcessingException {\n    ReportDownloadResponse reportDownloadResponse = getReportDownloadResponse();\n\n    InputStream inputStream = reportDownloadResponse.getInputStream();\n    return handleReportStreamResult(inputStream);\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Downloads report from API (with retry logic) and returns a  {@link File} object.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "94", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/downloader/CallableReportDownloader.java", "methodName": "com.google.api.ads.adwords.awreporting.downloader.CallableReportDownloader.getReportDownloadResponse", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "@VisibleForTesting\n  ReportDownloadResponse getReportDownloadResponse() throws ReportProcessingException {\n    ReportDownloaderInterface reportDownloader =\n        AdWordsServicesUtil.getUtility(session, ReportDownloaderInterface.class);\n    \n    ReportDownloadResponse result = null;\n    try {\n      result = reportDownloader.downloadReport(reportDefinition);\n    } catch (ReportException | ReportDownloadResponseException e) {\n      String msg =\n          \"Failed to download report file for \"\n              + reportDefinition.getReportType()\n              + \" with account \"\n              + session.getClientCustomerId()\n              + \".\";\n      logger.error(msg, e);\n      throw new ReportProcessingException(msg, e);\n    }\n\n    return result;\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleType#TypeLiteral#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SimpleType#UnionType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#StringLiteral#SimpleName#SimpleName#MethodInvocation#StringLiteral#InfixExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(TypeLiteral(SimpleType(SimpleName)SimpleName)SimpleType)TypeLiteral)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(TryStatement(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(UnionType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)UnionType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the report download response from the API and retries on failure.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "95", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/downloader/CallableReportDownloader.java", "methodName": "com.google.api.ads.adwords.awreporting.downloader.CallableReportDownloader.handleReportStreamResult", "methodParameterType": "InputStream#", "methodParameterName": "reportStream#", "methodBody": "@VisibleForTesting File handleReportStreamResult(InputStream reportStream)\n      throws ReportProcessingException {\n    Preconditions.checkState(reportStream != null, \"Cannot get report data: input stream is NULL.\");\n\n    // Get clientCustomerId from session and covert to Long type. The string field was set from\n    // Long type in AwqlReportDownloader, so it's able to parse back to Long.\n    Long clientCustomerId = Long.parseLong(session.getClientCustomerId());\n\n    try (GZIPInputStream gzipReportStream = new GZIPInputStream(reportStream)) {\n      String filenamePrefix = reportDefinition.getReportType() + \"-\" + clientCustomerId + \"-\";\n      File reportFile = File.createTempFile(filenamePrefix, \".csv\");\n\n      // Copy stream to CSV report.\n      logger.debug(\"Starting processing rules of \" + reportFile.getPath() + \" report...\");\n      Streams.copy(gzipReportStream, new FileOutputStream(reportFile));\n      logger.debug(\"... \" + reportFile.getPath()  + \" copied successfully.\");\n\n      return reportFile;\n    } catch (IOException e) {\n      String errorMessage = \"Failed to load report data from stream for \"\n          + reportDefinition.getReportType() + \" with account \"\n          + session.getClientCustomerId() + \".\";\n      logger.error(errorMessage, e);\n      throw new ReportProcessingException(errorMessage, e);\n    }\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#NullLiteral#InfixExpression#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#StringLiteral#SimpleName#StringLiteral#InfixExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#ReturnStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#StringLiteral#SimpleName#SimpleName#MethodInvocation#StringLiteral#InfixExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(TryStatement(VariableDeclarationExpression(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral(SimpleName)SimpleName(StringLiteral)StringLiteral)InfixExpression)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral)InfixExpression)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement)Block)MethodDeclaration", "methodDoc": "Transforms the downloaded result into a  {@link File} object.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "96", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/downloader/DownloadSetting.java", "methodName": "com.google.api.ads.adwords.awreporting.downloader.DownloadSetting.applyToRateLimiter", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public void applyToRateLimiter() {\n    System.setProperty(\n        \"com.google.api.ads.adwords.extension.ratelimiter.ApiReportingRetryStrategy.maxAttemptsOnRateExceededError\",\n        String.valueOf(numAttempts));\n    System.setProperty(\n        \"com.google.api.ads.adwords.extension.ratelimiter.ApiReportingRetryStrategy.backoffIntervalOnRateExceededError\",\n        String.valueOf(backoffInterval));\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Apply relevant settings ( {@link #numAttempts},  {@link #backoffInterval}) to the RateLimiter regarding report downloading.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "97", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/util/ManagedCustomerDelegate.java", "methodName": "com.google.api.ads.adwords.awreporting.util.ManagedCustomerDelegate.getManagedCustomerServiceInterface", "methodParameterType": "AdWordsSession#", "methodParameterName": "adWordsSession#", "methodBody": "@VisibleForTesting\n  ManagedCustomerServiceInterface getManagedCustomerServiceInterface(\n      AdWordsSession adWordsSession){\n    return AdWordsServicesUtil.getService(adWordsSession, ManagedCustomerServiceInterface.class);\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#SimpleType#TypeLiteral#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(TypeLiteral(SimpleType(SimpleName)SimpleName)SimpleType)TypeLiteral)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Returns a ManagedCustomerServiceInterface with the given adWordsSession.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "98", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/util/ManagedCustomerDelegate.java", "methodName": "com.google.api.ads.adwords.awreporting.util.ManagedCustomerDelegate.getClientCustomerIds", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public Set<Long> getClientCustomerIds() throws ApiException {\n    Set<Long> clientCustomerIdsSet = new LinkedHashSet<Long>();\n    ManagedCustomerPage managedCustomerPage;\n    int offset = 0;\n\n    SelectorBuilder builder = new SelectorBuilder();\n    Selector selector =\n        builder.fields(ManagedCustomerField.CustomerId)\n            .offset(offset)\n            .limit(NUMBER_OF_RESULTS)\n            .equals(ManagedCustomerField.CanManageClients, String.valueOf(false))\n            .equals(\"ExcludeHiddenAccounts\", String.valueOf(excludeHiddenAccounts))\n            .build();\n\n    do {\n      LOGGER.info(\"Retrieving next {} accounts.\", NUMBER_OF_RESULTS);\n\n      managedCustomerPage = managedCustomerService.get(selector);\n      addClientCustomerIds(managedCustomerPage, clientCustomerIdsSet);\n\n      LOGGER.info(\"{} accounts retrieved.\", clientCustomerIdsSet.size());\n      offset += NUMBER_OF_RESULTS;\n      selector = builder.increaseOffsetBy(NUMBER_OF_RESULTS).build();\n    } while (managedCustomerPage.getTotalNumEntries() > offset);\n\n    return clientCustomerIdsSet;\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#VariableDeclarationFragment#VariableDeclarationStatement#PrimitiveType#SimpleName#NumberLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#BooleanLiteral#MethodInvocation#MethodInvocation#SimpleName#StringLiteral#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#StringLiteral#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#Assignment#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#SimpleName#SimpleName#MethodInvocation#SimpleName#InfixExpression#DoStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(NumberLiteral)NumberLiteral)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral)MethodInvocation)MethodInvocation(SimpleName)SimpleName(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(DoStatement(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)InfixExpression)DoStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets all the client customer IDs for the  {@link AdWordsSession}. <p>The accounts are read in complete, and after all accounts have been retrieved, their IDs are extracted and returned in a  {@code Set}.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "99", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/util/ManagedCustomerDelegate.java", "methodName": "com.google.api.ads.adwords.awreporting.util.ManagedCustomerDelegate.addClientCustomerIds", "methodParameterType": "ManagedCustomerPage#Set<Long>#", "methodParameterName": "managedCustomerPage#clientCustomerIdsSet#", "methodBody": "private static void addClientCustomerIds(\n      @Nullable ManagedCustomerPage managedCustomerPage, Set<Long> clientCustomerIdsSet) {\n    if (managedCustomerPage != null) {\n      List<ManagedCustomer> managedCustomers = managedCustomerPage.getEntries();\n\n      // ManagedCustomerPage.getEntries() could return null.\n      if (managedCustomers != null) {\n        for (ManagedCustomer managedCustomer : managedCustomers) {\n          clientCustomerIdsSet.add(managedCustomer.getCustomerId());\n        }\n      }\n    }\n  }", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#SimpleName#MarkerAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#EnhancedForStatement#Block#IfStatement#Block#IfStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleName)SimpleName(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block)EnhancedForStatement)Block)IfStatement)Block)IfStatement)Block)MethodDeclaration", "methodDoc": "Add client customer IDs into the result set.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "100", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/util/TemplateStringsUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.util.TemplateStringsUtil.formatFullMonthDateRange", "methodParameterType": "LocalDate#LocalDate#", "methodParameterName": "startDate#endDate#", "methodBody": "public static String formatFullMonthDateRange(@Nullable LocalDate startDate,\n      @Nullable LocalDate endDate) {\n    String formattedStartDate = formatDateFullMonthYear(startDate);\n    String formattedEndDate = formatDateFullMonthYear(endDate);\n    String formattedDateRange = \"\";\n\n    if (formattedStartDate.equals(formattedEndDate)) {\n      formattedDateRange = formattedStartDate;\n    } else {\n      formattedDateRange = formattedStartDate + \" - \" + formattedEndDate;\n    }\n\n    return formattedDateRange;\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#MarkerAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#MarkerAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#StringLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#Assignment#ExpressionStatement#Block#SimpleName#SimpleName#StringLiteral#SimpleName#InfixExpression#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(StringLiteral)StringLiteral)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(SimpleName)SimpleName)Assignment)ExpressionStatement)Block(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(InfixExpression(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)Assignment)ExpressionStatement)Block)IfStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Convenience method to format a date range in monthly format (e.g. March 2015 - April 2016). If start and end months are the same, just one month is returned (March 2015).", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "101", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/util/TemplateStringsUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.util.TemplateStringsUtil.formatDateFullMonthYear", "methodParameterType": "LocalDate#", "methodParameterName": "date#", "methodBody": "public static String formatDateFullMonthYear(@Nullable LocalDate date) {\n    return TemplateStringsUtil.dateFormatterFullMonthYear.print(date);\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#MarkerAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Formats the date to the format: MMMM yyyy (e.g. 'March 2015')", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "102", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/util/TemplateStringsUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.util.TemplateStringsUtil.formatDateAbrieviatedMonthYear", "methodParameterType": "LocalDate#", "methodParameterName": "date#", "methodBody": "public static String formatDateAbrieviatedMonthYear(@Nullable LocalDate date) {\n    return TemplateStringsUtil.dateFormatterAbrieviatedMonthYear.print(date);\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#MarkerAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Formats the date to the format: MMM yyyy (e.g. 'Mar 2015')", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "103", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/util/AdWordsSessionUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.util.AdWordsSessionUtil.buildImmutableSessionForCid", "methodParameterType": "AdWordsSession.Builder#Long#", "methodParameterName": "sessionBuilder#cid#", "methodBody": "public static ImmutableAdWordsSession buildImmutableSessionForCid(\n      AdWordsSession.Builder sessionBuilder, Long cid) throws ValidationException {\n    String cidStr = cid == null ? null : String.valueOf(cid);\n    return buildImmutableSessionForCid(sessionBuilder, cidStr);\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleName#NullLiteral#InfixExpression#NullLiteral#SimpleName#SimpleName#SimpleName#MethodInvocation#ConditionalExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ConditionalExpression(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(NullLiteral)NullLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ConditionalExpression)VariableDeclarationFragment)VariableDeclarationStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Build a new  {@code ImmutableAdWordsSession} for the given cid.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "104", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/util/AdWordsSessionUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.util.AdWordsSessionUtil.buildImmutableSessionForCid", "methodParameterType": "AdWordsSession.Builder#String#", "methodParameterName": "sessionBuilder#cid#", "methodBody": "public static ImmutableAdWordsSession buildImmutableSessionForCid(\n      AdWordsSession.Builder sessionBuilder, String cid) throws ValidationException {\n    return sessionBuilder.withClientCustomerId(cid).buildImmutable();\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(ReturnStatement(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Build a new  {@code ImmutableAdWordsSession} for the given cid.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "105", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/util/AdWordsServicesUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.util.AdWordsServicesUtil.getService", "methodParameterType": "AdWordsSession#Class<T>#", "methodParameterName": "session#interfaceClass#", "methodBody": "public static <T> T getService(AdWordsSession session, Class<T> interfaceClass) {\n    return instance.get(session, interfaceClass);\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#TypeParameter#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(TypeParameter(SimpleName)SimpleName)TypeParameter(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Creates a new specific service using the  {@link AdWordsServicesWithRateLimiter}.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "106", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/util/AdWordsServicesUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.util.AdWordsServicesUtil.getUtility", "methodParameterType": "AdWordsSession#Class<T>#", "methodParameterName": "session#utilityClass#", "methodBody": "public static <T> T getUtility(AdWordsSession session, Class<T> utilityClass) {\n    return instance.getUtility(session, utilityClass);\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#TypeParameter#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(TypeParameter(SimpleName)SimpleName)TypeParameter(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Creates a new specific utility using the  {@link AdWordsServicesWithRateLimiter}.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "107", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/proxy/JaxWsProxySelector.java", "methodName": "com.google.api.ads.adwords.awreporting.proxy.JaxWsProxySelector.select", "methodParameterType": "URI#", "methodParameterName": "uri#", "methodBody": "@Override\n  public List<Proxy> select(URI uri) {\n    List<Proxy> list = Lists.newArrayList();\n\n    if (uri == null) {\n      throw new IllegalArgumentException(\"URI can't be null.\");\n    }\n\n    String scheme = uri.getScheme().toLowerCase();\n    \n    if (SUPPORTED_SCHEMES.contains(scheme)){\n      Proxy proxy = getProxy(scheme, proxyProperties.getProperty(scheme + \".\" + PROXY_HOST),\n          proxyProperties.getProperty(scheme + \".\" + PROXY_PORT), \n          proxyProperties.getProperty(scheme + \".\" + PROXY_USER));\n      \n      if (proxy != null){\n        list.add(proxy);\n      }\n    }\n    \n    if (scheme.startsWith(\"http\") || \"ftp\".equals(scheme) || scheme.startsWith(\"socks\")){\n      Proxy proxy = getProxy(\"socks\", proxyProperties.getProperty(SOCKS_PROXY_HOST),\n          proxyProperties.getProperty(SOCKS_PROXY_PORT), \n          proxyProperties.getProperty(SOCKS_PROXY_USER));\n      \n      if (proxy != null){\n        list.add(proxy);\n      }\n    }\n\n    if (list.size() > 0) {\n      return list;\n    }\n    return delegateSelect(uri);\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#Modifier#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleType#StringLiteral#ClassInstanceCreation#ThrowStatement#Block#IfStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#StringLiteral#SimpleName#InfixExpression#MethodInvocation#SimpleName#SimpleName#SimpleName#StringLiteral#SimpleName#InfixExpression#MethodInvocation#SimpleName#SimpleName#SimpleName#StringLiteral#SimpleName#InfixExpression#MethodInvocation#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#IfStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#StringLiteral#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#StringLiteral#MethodInvocation#InfixExpression#SimpleName#SimpleType#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#IfStatement#SimpleName#SimpleName#MethodInvocation#NumberLiteral#InfixExpression#SimpleName#ReturnStatement#Block#IfStatement#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(Modifier)Modifier(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(StringLiteral)StringLiteral)ClassInstanceCreation)ThrowStatement)Block)IfStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)MethodInvocation)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)IfStatement(IfStatement(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation(MethodInvocation(StringLiteral)StringLiteral(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)InfixExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)IfStatement(IfStatement(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(NumberLiteral)NumberLiteral)InfixExpression(Block(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Selects the Proxies available to do the user authentication.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "108", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/proxy/JaxWsProxySelector.java", "methodName": "com.google.api.ads.adwords.awreporting.proxy.JaxWsProxySelector.getProxy", "methodParameterType": "String#String#String#String#", "methodParameterName": "scheme#proxyHost#proxyPort#proxyUser#", "methodBody": "private Proxy getProxy(String scheme, String proxyHost, String proxyPort, String proxyUser){\n    if (!Strings.isNullOrEmpty(proxyHost) && !Strings.isNullOrEmpty(proxyPort)){\n      if (!Strings.isNullOrEmpty(proxyUser)){\n        Authenticator.setDefault(new JaxWsProxyAuthenticator(scheme, proxyProperties));\n      }\n      \n      if (\"socks\".equals(scheme)) {\n        return new Proxy(Proxy.Type.SOCKS, new InetSocketAddress(proxyHost,\n            Integer.parseInt(proxyPort)));\n      } else {\n        return new Proxy(Proxy.Type.HTTP, new InetSocketAddress(proxyHost, \n            Integer.parseInt(proxyPort)));\n      }\n    }\n    return null;\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#PrefixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#PrefixExpression#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#PrefixExpression#SimpleName#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#ClassInstanceCreation#MethodInvocation#ExpressionStatement#Block#IfStatement#StringLiteral#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleType#SimpleName#SimpleName#QualifiedName#SimpleName#QualifiedName#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ClassInstanceCreation#ClassInstanceCreation#ReturnStatement#Block#SimpleName#SimpleType#SimpleName#SimpleName#QualifiedName#SimpleName#QualifiedName#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ClassInstanceCreation#ClassInstanceCreation#ReturnStatement#Block#IfStatement#Block#IfStatement#NullLiteral#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression)InfixExpression(Block(IfStatement(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleName)SimpleName)ClassInstanceCreation)MethodInvocation)ExpressionStatement)Block)IfStatement(IfStatement(MethodInvocation(StringLiteral)StringLiteral(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(QualifiedName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)QualifiedName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ClassInstanceCreation)ClassInstanceCreation)ReturnStatement)Block(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(QualifiedName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)QualifiedName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ClassInstanceCreation)ClassInstanceCreation)ReturnStatement)Block)IfStatement)Block)IfStatement(ReturnStatement(NullLiteral)NullLiteral)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Create  {@code Proxy} based on the scheme, host, port and password and set the default{@code Authenticator}.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "109", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/proxy/JaxWsProxySelector.java", "methodName": "com.google.api.ads.adwords.awreporting.proxy.JaxWsProxySelector.delegateSelect", "methodParameterType": "URI#", "methodParameterName": "uri#", "methodBody": "private List<Proxy> delegateSelect(URI uri) {\n    if (delegate != null) {\n      return delegate.select(uri);\n    }\n    \n    return Arrays.asList(Proxy.NO_PROXY);\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#IfStatement#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Delegates the select to the embedded selector.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "110", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/proxy/JaxWsProxySelector.java", "methodName": "com.google.api.ads.adwords.awreporting.proxy.JaxWsProxySelector.connectFailed", "methodParameterType": "URI#SocketAddress#IOException#", "methodParameterName": "uri#socketAddress#ioException#", "methodBody": "@Override\n  public void connectFailed(URI uri, SocketAddress socketAddress, IOException ioException) {\n    Preconditions.checkNotNull(uri, \"Uri can not be null\");\n    Preconditions.checkNotNull(socketAddress, \"SocketAddress can not be null\");\n    Preconditions.checkNotNull(ioException, \"IOException can not be null\");\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Handles the connection failing when connecting to the Proxy. This method does not handle selecting or reordering proxies. It simply checks parameters for null.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "111", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/authentication/InstalledOAuth2Authenticator.java", "methodName": "com.google.api.ads.adwords.awreporting.authentication.InstalledOAuth2Authenticator.InstalledOAuth2Authenticator", "methodParameterType": "String#String#String#String#String#", "methodParameterName": "userAgent#developerToken#clientId#clientSecret#managerAccountId#", "methodBody": "@Autowired\n  public InstalledOAuth2Authenticator(\n      @Value(value = \"${userAgent}\") String userAgent,\n      @Value(value = \"${developerToken}\") String developerToken,\n      @Value(value = \"${clientId}\") String clientId,\n      @Value(value = \"${clientSecret}\") String clientSecret,\n      @Value(value = \"${managerAccountId}\") String managerAccountId) {\n    this.userAgent = userAgent;\n    this.developerToken = developerToken;\n    this.clientId = clientId;\n    this.clientSecret = clientSecret;\n    this.managerAccountId = managerAccountId;\n    this.scope = OAuthScope.getScopeCsv(OAuthScope.ADWORDS);\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#Modifier#SimpleName#SimpleName#SimpleName#StringLiteral#MemberValuePair#NormalAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#MemberValuePair#NormalAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#MemberValuePair#NormalAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#MemberValuePair#NormalAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#MemberValuePair#NormalAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#Assignment#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(NormalAnnotation(SimpleName)SimpleName(MemberValuePair(SimpleName)SimpleName(StringLiteral)StringLiteral)MemberValuePair)NormalAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(NormalAnnotation(SimpleName)SimpleName(MemberValuePair(SimpleName)SimpleName(StringLiteral)StringLiteral)MemberValuePair)NormalAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(NormalAnnotation(SimpleName)SimpleName(MemberValuePair(SimpleName)SimpleName(StringLiteral)StringLiteral)MemberValuePair)NormalAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(NormalAnnotation(SimpleName)SimpleName(MemberValuePair(SimpleName)SimpleName(StringLiteral)StringLiteral)MemberValuePair)NormalAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(NormalAnnotation(SimpleName)SimpleName(MemberValuePair(SimpleName)SimpleName(StringLiteral)StringLiteral)MemberValuePair)NormalAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation)Assignment)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Constructor with the OAuth2 parameters autowired by Spring.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "112", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/authentication/InstalledOAuth2Authenticator.java", "methodName": "com.google.api.ads.adwords.awreporting.authentication.InstalledOAuth2Authenticator.authenticate", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "@Override\n  public AdWordsSession.Builder authenticate() throws OAuthException {\n    return getSessionBuilderWithoutCredential().withOAuth2Credential(getOAuth2Credential());\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#Modifier#SimpleName#SimpleName#QualifiedName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(Modifier)Modifier(SimpleType(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)SimpleType(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType(Block(ReturnStatement(MethodInvocation(MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Get an adwords session builder with the authentication info.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "113", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/authentication/InstalledOAuth2Authenticator.java", "methodName": "com.google.api.ads.adwords.awreporting.authentication.InstalledOAuth2Authenticator.buildOAuth2Credential", "methodParameterType": "String#", "methodParameterName": "authToken#", "methodBody": "private Credential buildOAuth2Credential(String authToken) {\n    return new GoogleCredential.Builder()\n            .setClientSecrets(clientId, clientSecret)\n            .setJsonFactory(new JacksonFactory())\n            .setTransport(new NetHttpTransport())\n            .build()\n            .setRefreshToken(authToken);\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#QualifiedName#SimpleType#ClassInstanceCreation#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#MethodInvocation#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#MethodInvocation#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(ClassInstanceCreation(SimpleType(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)SimpleType)ClassInstanceCreation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation)MethodInvocation(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation)MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Builds the OAuth 2.0 credential for the user with a known authToken", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "114", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/authentication/InstalledOAuth2Authenticator.java", "methodName": "com.google.api.ads.adwords.awreporting.authentication.InstalledOAuth2Authenticator.getOAuth2Credential", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "private Credential getOAuth2Credential() throws OAuthException {\n    Credential credential = null;\n\n    logger.debug(\"Retrieving Auth Token from DB.\");\n    AuthToken authMcc = getAuthTokenFromStorage(managerAccountId);\n\n    // Generate a new Auth Token if necessary\n    if (authMcc == null || authMcc.getScope() == null || !authMcc.getScope().equals(scope)) {\n      try {\n        logger.debug(\"Auth Token FORCED. Getting a new one.\");\n        credential = getNewOAuth2Credential();\n      } catch (OAuthException e) {\n        if (e.getMessage().contains(\"Connection reset\")) {\n          logger.info(\"Connection reset when getting Auth Token, retrying...\");\n          credential = getNewOAuth2Credential();\n        } else {\n          logger.error(\"Error Authenticating\",  e);\n          throw e;\n        }\n      } finally {\n        if (credential != null) {\n          // Try to get the manager account's DescriptiveName.\n          String name = \"\";\n          try {\n            AdWordsSession adWordsSession = authenticate(credential).buildImmutable();\n            CustomerServiceInterface customerService =\n                AdWordsServicesUtil.getService(adWordsSession, CustomerServiceInterface.class);\n\n            // The AdWords session has clientCustomerId specified, so only details of that customer\n            // will be returned by CustomerService.getCustomers().\n            List<Customer> customers = customerService.getCustomers();\n            if (customers != null && !customers.isEmpty()) {\n              name = customers.get(0).getDescriptiveName();\n            }\n          } catch (ValidationException | ApiException e) {\n            logger.error(\"Error trying to get manager account name\", e);\n          }\n\n          logger.info(\"Saving Refresh Token to DB...\");\n          saveAuthTokenToStorage(managerAccountId, name, credential.getRefreshToken(), scope);\n        }\n      }\n    } else {\n      credential = buildOAuth2Credential(authMcc.getAuthToken());\n    }\n\n    return credential;\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#MethodInvocation#NullLiteral#InfixExpression#InfixExpression#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#PrefixExpression#InfixExpression#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#MethodInvocation#SimpleName#StringLiteral#MethodInvocation#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#SimpleName#SimpleName#StringLiteral#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#ThrowStatement#Block#IfStatement#Block#CatchClause#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleType#SimpleName#StringLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleType#TypeLiteral#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#MethodInvocation#PrefixExpression#InfixExpression#SimpleName#SimpleName#SimpleName#NumberLiteral#MethodInvocation#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#IfStatement#Block#SimpleName#SimpleType#SimpleName#SimpleType#UnionType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#SimpleName#MethodInvocation#ExpressionStatement#Block#CatchClause#TryStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#TryStatement#Block#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(InfixExpression(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(NullLiteral)NullLiteral)InfixExpression)InfixExpression(PrefixExpression(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression)InfixExpression(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ThrowStatement(SimpleName)SimpleName)ThrowStatement)Block)IfStatement)Block)CatchClause(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(StringLiteral)StringLiteral)VariableDeclarationFragment)VariableDeclarationStatement(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(TypeLiteral(SimpleType(SimpleName)SimpleName)SimpleType)TypeLiteral)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression)InfixExpression(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block)IfStatement)Block(CatchClause(SingleVariableDeclaration(UnionType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)UnionType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)CatchClause)TryStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)TryStatement)Block(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)Assignment)ExpressionStatement)Block)IfStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Obtains an OAuth  {@link Credential} configured for AwReporting by obtaining a refresh token.This method should be invoked for any users for which a refresh token is not known or is invalid.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "115", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/authentication/InstalledOAuth2Authenticator.java", "methodName": "com.google.api.ads.adwords.awreporting.authentication.InstalledOAuth2Authenticator.saveAuthTokenToStorage", "methodParameterType": "String#String#String#String#", "methodParameterName": "managerAccountId#managerAccountName#authToken#scope#", "methodBody": "private void saveAuthTokenToStorage(String managerAccountId, String managerAccountName,\n      String authToken, String scope) {\n    logger.debug(\"Persisting refresh token...\");\n    AuthToken authMcc = new AuthToken(managerAccountId, managerAccountName, authToken, scope);\n    authTokenPersister.persistAuthToken(authMcc);\n    logger.debug(\"... success.\");\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "The implementation must persist the token to be retrieved later.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "116", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/authentication/InstalledOAuth2Authenticator.java", "methodName": "com.google.api.ads.adwords.awreporting.authentication.InstalledOAuth2Authenticator.getAuthTokenFromStorage", "methodParameterType": "String#", "methodParameterName": "managerAccountId#", "methodBody": "private AuthToken getAuthTokenFromStorage(String managerAccountId) {\n    AuthToken authToken = authTokenPersister.getAuthToken(managerAccountId);\n    if (authToken != null) {\n      return authToken;\n    }\n    return null;\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#ReturnStatement#Block#IfStatement#NullLiteral#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)IfStatement(ReturnStatement(NullLiteral)NullLiteral)ReturnStatement)Block)MethodDeclaration", "methodDoc": "The implementation should retrieve the authentication token previously persisted.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "117", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/authentication/Authenticator.java", "methodName": "com.google.api.ads.adwords.awreporting.authentication.Authenticator.authenticate", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "AdWordsSession.Builder authenticate() throws OAuthException;", "AST": "Javadoc#SimpleName#SimpleName#QualifiedName#SimpleType#SimpleName#SimpleName#SimpleType#MethodDeclaration#", "SBT": "(MethodDeclaration(SimpleType(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)SimpleType(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)MethodDeclaration", "methodDoc": "Authenticates the user against the API(s) depending on the OAuth scope and then returns an {@link com.google.api.ads.adwords.lib.client.AdWordsSession.Builder}.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "118", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/AwReporting.java", "methodName": "com.google.api.ads.adwords.awreporting.AwReporting.main", "methodParameterType": "String[]#", "methodParameterName": "args#", "methodBody": "public static void main(String[] args) {\n    // Proxy\n    JaxWsProxySelector ps = new JaxWsProxySelector(ProxySelector.getDefault());\n    ProxySelector.setDefault(ps);\n\n    try {\n      Options options = AwReportingOption.createCommandLineOptions();\n      CommandLine cmdLine = parseCommandLine(options, args);\n\n      if (cmdLine.hasOption(\"help\")) {\n        printHelpMessage(options);\n        printSamplePropertiesFile();\n        System.exit(0);\n      }\n\n      String propertiesPath = getPropertiesPath(cmdLine);\n\n      Set<Long> accountIdsSet = Sets.newHashSet();\n      String accountIdsFile = AwReportingOption.ACCOUNT_IDS_FILE.getOptionValue(cmdLine);\n      if (accountIdsFile != null) {\n        addAccountsFromFile(accountIdsSet, accountIdsFile);\n        if (accountIdsSet.isEmpty()) {\n          logger.error(\n              \"Account IDs file does not contain any AdWords CIDs (\" + accountIdsFile + \")\");\n          System.exit(1);\n        }\n      }\n\n      ReportDefinitionDateRangeType dateRangeType = ReportDefinitionDateRangeType.CUSTOM_DATE;\n      String dateRangeStr = AwReportingOption.DATE_RANGE.getOptionValue(cmdLine);\n      if (dateRangeStr != null) {\n        dateRangeType = ReportDefinitionDateRangeType.fromValue(dateRangeStr);\n      }\n\n      LocalDate startDate =\n          DateUtil.parseLocalDate(AwReportingOption.START_DATE.getOptionValue(cmdLine));\n      LocalDate endDate =\n          DateUtil.parseLocalDate(AwReportingOption.END_DATE.getOptionValue(cmdLine));\n\n      String reportFileTypeName = AwReportingOption.REPORT_FILE_TYPE.getOptionValue(cmdLine);\n      String csvReportFile = AwReportingOption.CSV_FILE_INPUT.getOptionValue(cmdLine);\n\n      boolean forceFileProcessor = !Strings.isNullOrEmpty(reportFileTypeName);\n      Properties properties = init(propertiesPath, forceFileProcessor);\n\n      logger.debug(\"Creating ReportProcessor bean...\");\n      ReportProcessor processor = createReportProcessor();\n      logger.debug(\"... success.\");\n\n      String managerAccountId = properties.getProperty(\"managerAccountId\").replaceAll(\"-\", \"\");\n      DateRangeAndType dateRangeAndType =\n          DateRangeAndType.fromValues(startDate, endDate, dateRangeType);\n\n      if (forceFileProcessor) {\n        validateFileReportArguments(startDate, endDate, csvReportFile);\n        List<File> localFiles = getCsvFiles(csvReportFile);\n        ((FileReportProcessor) processor)\n            .processInputFiles(managerAccountId, reportFileTypeName, localFiles, dateRangeAndType);\n      } else {\n        processor.generateReportsForManagerAccount(\n            managerAccountId,\n            dateRangeAndType,\n            accountIdsSet,\n            properties);\n      }\n    } catch (ReportConfigLoadException e) {\n      logger.error(\"Failed to load configuration.\", e);\n      System.exit(1);\n    } catch (ReportProcessingException e) {\n      logger.error(\"Failed to process reports.\", e);\n      System.exit(1);\n    }\n  }", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#Dimension#ArrayType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#MethodInvocation#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#NumberLiteral#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#StringLiteral#SimpleName#StringLiteral#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#NumberLiteral#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#IfStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#QualifiedName#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#PrimitiveType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#PrefixExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#SimpleName#StringLiteral#StringLiteral#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#CastExpression#ParenthesizedExpression#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#NumberLiteral#MethodInvocation#ExpressionStatement#Block#CatchClause#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#NumberLiteral#MethodInvocation#ExpressionStatement#Block#CatchClause#TryStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName)SimpleName)SimpleType(Dimension)Dimension)ArrayType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation)ExpressionStatement)Block)IfStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(IfStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName(StringLiteral)StringLiteral)InfixExpression)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)IfStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block)IfStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation(SimpleName)SimpleName(StringLiteral)StringLiteral(StringLiteral)StringLiteral)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(SimpleName)SimpleName(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(ParenthesizedExpression(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)ParenthesizedExpression(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation)ExpressionStatement)Block)CatchClause(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation)ExpressionStatement)Block)CatchClause)TryStatement)Block)MethodDeclaration", "methodDoc": "Main method.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "119", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/AwReporting.java", "methodName": "com.google.api.ads.adwords.awreporting.AwReporting.validateFileReportArguments", "methodParameterType": "LocalDate#LocalDate#String#", "methodParameterName": "startDate#endDate#csvReportFile#", "methodBody": "private static void validateFileReportArguments(\n      LocalDate startDate, LocalDate endDate, String csvReportFile)\n      throws ReportConfigLoadException {\n    if (startDate == null || endDate == null || Strings.isNullOrEmpty(csvReportFile)) {\n      throw new ReportConfigLoadException(\n          String.format(\n              \"Inputing a report file requires: '%s', '%s', and '%s'\",\n              AwReportingOption.START_DATE.getArgName(),\n              AwReportingOption.END_DATE.getArgName(),\n              AwReportingOption.CSV_FILE_INPUT.getArgName()));\n    }\n\n    logger.info(\n        String.format(\n            \"Starting report processing for startDate: %s and endDate: %s on csvReportFile: %s\",\n            startDate, endDate, csvReportFile));\n  }", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#NullLiteral#InfixExpression#SimpleName#NullLiteral#InfixExpression#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#InfixExpression#SimpleName#SimpleType#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#QualifiedName#SimpleName#MethodInvocation#SimpleName#SimpleName#QualifiedName#SimpleName#MethodInvocation#SimpleName#SimpleName#QualifiedName#SimpleName#MethodInvocation#MethodInvocation#ClassInstanceCreation#ThrowStatement#Block#IfStatement#SimpleName#SimpleName#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(IfStatement(InfixExpression(InfixExpression(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression)InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)MethodInvocation(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)MethodInvocation(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ClassInstanceCreation)ThrowStatement)Block)IfStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Validate that user entered all configs for reading reports from a local file like start date, end date, and the file to read.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "120", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/AwReporting.java", "methodName": "com.google.api.ads.adwords.awreporting.AwReporting.getCsvFiles", "methodParameterType": "String#", "methodParameterName": "csvReportFile#", "methodBody": "private static List<File> getCsvFiles(String csvReportFile) throws ReportConfigLoadException {\n    File csvFile = new File(csvReportFile);\n    if (!csvFile.exists()) {\n      throw new ReportConfigLoadException(\"Could not find CSV file: \" + csvReportFile);\n    }\n\n    return Arrays.asList(csvFile);\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#PrefixExpression#SimpleName#SimpleType#StringLiteral#SimpleName#InfixExpression#ClassInstanceCreation#ThrowStatement#Block#IfStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)ClassInstanceCreation)ThrowStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Checks if file exists and then creates a  {@code List} of {@code File}s.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "121", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/AwReporting.java", "methodName": "com.google.api.ads.adwords.awreporting.AwReporting.addAccountsFromFile", "methodParameterType": "Set<Long>#String#", "methodParameterName": "accountIdsSet#accountsFileName#", "methodBody": "protected static void addAccountsFromFile(Set<Long> accountIdsSet, String accountsFileName)\n      throws ReportConfigLoadException {\n    logger.info(\"Using accounts file: \" + accountsFileName);\n    List<String> lines = null;\n\n    try {\n      lines = Files.asCharSource(new File(accountsFileName), StandardCharsets.UTF_8).readLines();\n    } catch (IOException e) {\n      throw new ReportConfigLoadException(\"Unable to read accounts from file.\", e);\n    }\n\n    logger.debug(\"Account IDs to be queried:\");\n    for (String line : lines) {\n      line = line.trim();\n      if (!line.startsWith(\"#\") && !line.isEmpty()) {\n        String accountIdAsString = line.replaceAll(\"-\", \"\");\n        long accountId = Long.parseLong(accountIdAsString);\n        accountIdsSet.add(accountId);\n\n        logger.debug(\"Account ID: \" + accountId);\n      }\n    }\n  }", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#StringLiteral#SimpleName#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#SimpleName#SimpleName#QualifiedName#MethodInvocation#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#StringLiteral#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#PrefixExpression#SimpleName#SimpleName#MethodInvocation#PrefixExpression#InfixExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#StringLiteral#StringLiteral#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#PrimitiveType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#InfixExpression#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#EnhancedForStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(TryStatement(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(StringLiteral)StringLiteral(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleName)SimpleName(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement(IfStatement(InfixExpression(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)PrefixExpression(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression)InfixExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(StringLiteral)StringLiteral)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)EnhancedForStatement)Block)MethodDeclaration", "methodDoc": "Reads the account ids from the file, and adds them to the given set.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "122", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/AwReporting.java", "methodName": "com.google.api.ads.adwords.awreporting.AwReporting.createReportProcessor", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "private static ReportProcessor createReportProcessor() {\n    return appCtx.getBean(ReportProcessor.class);\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleType#TypeLiteral#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(TypeLiteral(SimpleType(SimpleName)SimpleName)SimpleType)TypeLiteral)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Creates the  {@link ReportProcessor} autowiring all the dependencies.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "123", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/AwReporting.java", "methodName": "com.google.api.ads.adwords.awreporting.AwReporting.printHelpMessage", "methodParameterType": "Options#", "methodParameterName": "options#", "methodBody": "private static void printHelpMessage(Options options) {\n    // automatically generate the help statement\n    System.out.println();\n    HelpFormatter formatter = new HelpFormatter();\n    formatter.setWidth(120);\n    formatter.printHelp(\n        \" java -jar aw-reporting.jar -startDate YYYYMMDD -endDate YYYYMMDD \" + \"-file <file>\\n\",\n        \"Arguments:\",\n        options,\n        \"\");\n    System.out.println();\n  }", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#QualifiedName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#NumberLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#StringLiteral#InfixExpression#StringLiteral#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#QualifiedName#SimpleName#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(StringLiteral)StringLiteral)InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Prints the help message.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "124", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/AwReporting.java", "methodName": "com.google.api.ads.adwords.awreporting.AwReporting.printSamplePropertiesFile", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "private static void printSamplePropertiesFile() throws ReportConfigLoadException {\n    System.out.println(\"\\n  File: aw-report-sample.properties example\");\n    ClassPathResource sampleFile = new ClassPathResource(\"aw-report-sample.properties\");\n\n    try {\n      List<String> lines =\n          Files.asCharSource(sampleFile.getFile(), StandardCharsets.UTF_8).readLines();\n      for (String line : lines) {\n        System.out.println(line);\n      }\n    } catch (IOException e) {\n      throw new ReportConfigLoadException(\"Unable to print sample properties file\", e);\n    }\n  }", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#QualifiedName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#StringLiteral#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#QualifiedName#MethodInvocation#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#EnhancedForStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#StringLiteral#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType(Block(ExpressionStatement(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(StringLiteral)StringLiteral)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(TryStatement(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleName)SimpleName(Block(ExpressionStatement(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)EnhancedForStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(StringLiteral)StringLiteral(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement)Block)MethodDeclaration", "methodDoc": "Prints the sample properties file on the default output.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "125", "file": "/root/repos/repos41/aw-reporting/aw-reporting/target/classes/com/google/api/ads/adwords/awreporting/AwReporting.java", "methodName": "com.google.api.ads.adwords.awreporting.AwReporting.init", "methodParameterType": "String#boolean#", "methodParameterName": "propertiesPath#forceFileProcessor#", "methodBody": "private static Properties init(String propertiesPath, boolean forceFileProcessor)\n      throws ReportConfigLoadException {\n    logger.trace(\"Initializing Spring application context.\");\n\n    Resource resource = new ClassPathResource(propertiesPath);\n    if (!resource.exists()) {\n      resource = new FileSystemResource(propertiesPath);\n    }\n    PropertyPlaceholderConfigurer configurer = new PropertyPlaceholderConfigurer();\n    configurer.setLocation(resource);\n\n    Properties properties = null;\n    try {\n      properties = PropertiesLoaderUtils.loadProperties(resource);\n    } catch (IOException e) {\n      throw new ReportConfigLoadException(\"Failed to load properties file.\", e);\n    }\n\n    // Selecting the XMLs to choose the Spring Beans to load.\n    List<String> listOfClassPathXml = Lists.newArrayList();\n\n    // Choose the DB type to use based properties file, default to MYSQL\n    String dbType = (String) properties.get(AW_REPORT_MODEL_DB_TYPE);\n    DatabaseType sqldbType = null;\n    if (DatabaseType.MONGODB.name().equals(dbType)) {\n      logger.info(\"Using MONGO DB configuration properties.\");\n      listOfClassPathXml.add(\"classpath:\" + MONGODB_BEANS_FILE);\n    } else if (DatabaseType.MSSQL.name().equals(dbType)) {\n      sqldbType = DatabaseType.MSSQL;\n      logger.info(\"Using MSSQL DB configuration properties.\");\n      listOfClassPathXml.add(\"classpath:\" + SQL_BEANS_FILE);\n    } else if (DatabaseType.MYSQL.name().equals(dbType)) {\n      sqldbType = DatabaseType.MYSQL;\n      logger.info(\"Using MYSQL DB configuration properties.\");\n      listOfClassPathXml.add(\"classpath:\" + SQL_BEANS_FILE);\n    } else {\n      throw new ReportConfigLoadException(\"Unknown database type: \" + dbType);\n    }\n\n    // Choose the Processor type to use based properties file\n    String processorType = (String) properties.get(AW_REPORT_PROCESSOR_TYPE);\n    if (forceFileProcessor) {\n      processorType = ProcessorType.FILE.name();\n    }\n\n    if (ProcessorType.STREAM.name().equals(processorType)) {\n      logger.info(\"Using MEMORY Processor.\");\n      listOfClassPathXml.add(\"classpath:\" + STREAM_PROCESSING_BEANS_FILE);\n    } else if (ProcessorType.FILE.name().equals(processorType)) {\n      logger.info(\"Using FILE Processor.\");\n      listOfClassPathXml.add(\"classpath:\" + FILE_PROCESSING_BEANS_FILE);\n    } else {\n      throw new ReportConfigLoadException(\"Unknown processor type: \" + processorType);\n    }\n\n    appCtx = new ClassPathXmlApplicationContext();\n    if (sqldbType != null) {\n      appCtx.getEnvironment().setActiveProfiles(sqldbType.name());\n    }\n\n    appCtx.setConfigLocations(listOfClassPathXml.toArray(new String[listOfClassPathXml.size()]));\n    appCtx.addBeanFactoryPostProcessor(configurer);\n    logger.warn(\"Updating database schema, this could take a few minutes ...\");\n    appCtx.refresh();\n    logger.warn(\"Done.\");\n\n    return properties;\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#PrefixExpression#SimpleName#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#StringLiteral#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#CastExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#QualifiedName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#InfixExpression#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleName#QualifiedName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleName#QualifiedName#Assignment#ExpressionStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#InfixExpression#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleName#QualifiedName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleName#QualifiedName#Assignment#ExpressionStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#InfixExpression#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleType#StringLiteral#SimpleName#InfixExpression#ClassInstanceCreation#ThrowStatement#Block#IfStatement#IfStatement#IfStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#CastExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#SimpleName#QualifiedName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#InfixExpression#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleName#QualifiedName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#InfixExpression#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleType#StringLiteral#SimpleName#InfixExpression#ClassInstanceCreation#ThrowStatement#Block#IfStatement#IfStatement#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#Assignment#ExpressionStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleType#Dimension#ArrayType#SimpleName#SimpleName#MethodInvocation#ArrayCreation#MethodInvocation#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation)Assignment)ExpressionStatement)Block)IfStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(TryStatement(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(StringLiteral)StringLiteral(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)CastExpression)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(MethodInvocation(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)MethodInvocation)ExpressionStatement)Block(IfStatement(MethodInvocation(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)Assignment)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)MethodInvocation)ExpressionStatement)Block(IfStatement(MethodInvocation(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)Assignment)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)MethodInvocation)ExpressionStatement)Block(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)ClassInstanceCreation)ThrowStatement)Block)IfStatement)IfStatement)IfStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)CastExpression)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(SimpleName)SimpleName(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block)IfStatement(IfStatement(MethodInvocation(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)MethodInvocation)ExpressionStatement)Block(IfStatement(MethodInvocation(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)MethodInvocation)ExpressionStatement)Block(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)ClassInstanceCreation)ThrowStatement)Block)IfStatement)IfStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation)Assignment)ExpressionStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block)IfStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(ArrayCreation(ArrayType(SimpleType(SimpleName)SimpleName)SimpleType(Dimension)Dimension)ArrayType(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ArrayCreation)MethodInvocation)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Initialize the application context, adding the properties configuration file depending on the specified path.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "126", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/util/GsonUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.model.util.GsonUtil.GsonUtil", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "private GsonUtil() {}", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Private constructor to prevent instantiation of this utility class.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "127", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/util/GsonUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.model.util.GsonUtil.createGson", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public static Gson createGson() {\n    return gsonBuilder.create();\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "@return the {@link GsonBuilder} used by this class.", "call_func_name": ["com.google.gson.GsonBuilder.create"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "128", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/util/DateUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.model.util.DateUtil.DateUtil", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "private DateUtil() {}", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Private constructor.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "129", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/util/DateUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.model.util.DateUtil.formatYearMonthDayNoDash", "methodParameterType": "Date#", "methodParameterName": "date#", "methodBody": "public static String formatYearMonthDayNoDash(Date date) {\n    return formatYearMonthDayNoDash(new LocalDate(date));\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Formats the date to the format: yyyyMMdd", "call_func_name": ["org.joda.time.LocalDate.<init>", "com.google.api.ads.adwords.awreporting.model.util.DateUtil.formatYearMonthDayNoDash"], "call_func_parameter": [["java.lang.Object"], ["org.joda.time.LocalDate"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.util.DateUtil.formatYearMonthDayNoDash": "Formats the date to the format: yyyyMMdd"}]}, {"index": "130", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/util/DateUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.model.util.DateUtil.formatYearMonthDayNoDash", "methodParameterType": "LocalDate#", "methodParameterName": "date#", "methodBody": "public static String formatYearMonthDayNoDash(LocalDate date) {\n    return DATE_FORMATTER_YEAR_MONTH_DAY_NO_DASH.print(date);\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Formats the date to the format: yyyyMMdd", "call_func_name": ["org.joda.time.format.DateTimeFormatter.print"], "call_func_parameter": [["org.joda.time.ReadablePartial"]], "passed_comments": "/"}, {"index": "131", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/util/DateUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.model.util.DateUtil.formatYearMonthDay", "methodParameterType": "Date#", "methodParameterName": "date#", "methodBody": "public static String formatYearMonthDay(Date date) {\n    return formatYearMonthDay(new LocalDate(date));\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Formats the date to the ISO format without the time zone information: yyyy-MM-dd", "call_func_name": ["org.joda.time.LocalDate.<init>", "com.google.api.ads.adwords.awreporting.model.util.DateUtil.formatYearMonthDay"], "call_func_parameter": [["java.lang.Object"], ["org.joda.time.LocalDate"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.util.DateUtil.formatYearMonthDay": "Formats the date to the ISO format without the time zone information: yyyy-MM-dd"}]}, {"index": "132", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/util/DateUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.model.util.DateUtil.formatYearMonthDay", "methodParameterType": "LocalDate#", "methodParameterName": "date#", "methodBody": "public static String formatYearMonthDay(LocalDate date) {\n    return DATE_FORMATTER_YEAR_MONTH_DAY.print(date);\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Formats the date to the ISO format without the time zone information: yyyy-MM-dd", "call_func_name": ["org.joda.time.format.DateTimeFormatter.print"], "call_func_parameter": [["org.joda.time.ReadablePartial"]], "passed_comments": "/"}, {"index": "133", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/util/DateUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.model.util.DateUtil.formatYearMonth", "methodParameterType": "Date#", "methodParameterName": "date#", "methodBody": "public static String formatYearMonth(Date date) {\n    return DateUtil.formatYearMonth(new LocalDate(date));\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Formats the date to the ISO format without the time zone and day information: yyyy-MM", "call_func_name": ["org.joda.time.LocalDate.<init>", "com.google.api.ads.adwords.awreporting.model.util.DateUtil.formatYearMonth"], "call_func_parameter": [["java.lang.Object"], ["org.joda.time.LocalDate"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.util.DateUtil.formatYearMonth": "Formats the date to the ISO format without the time zone and day information: yyyy-MM"}]}, {"index": "134", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/util/DateUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.model.util.DateUtil.formatYearMonth", "methodParameterType": "LocalDate#", "methodParameterName": "date#", "methodBody": "public static String formatYearMonth(LocalDate date) {\n    return DATE_FORMATTER_YEAR_MONTH.print(date);\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Formats the date to the ISO format without the time zone and day information: yyyy-MM", "call_func_name": ["org.joda.time.format.DateTimeFormatter.print"], "call_func_parameter": [["org.joda.time.ReadablePartial"]], "passed_comments": "/"}, {"index": "135", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/util/DateUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.model.util.DateUtil.formatYearMonthNoDash", "methodParameterType": "Date#", "methodParameterName": "date#", "methodBody": "public static String formatYearMonthNoDash(Date date) {\n    return formatYearMonthNoDash(new LocalDate(date));\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Formats the date to the ISO format without the time zone and day information: yyyyMM", "call_func_name": ["org.joda.time.LocalDate.<init>", "com.google.api.ads.adwords.awreporting.model.util.DateUtil.formatYearMonthNoDash"], "call_func_parameter": [["java.lang.Object"], ["org.joda.time.LocalDate"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.util.DateUtil.formatYearMonthNoDash": "Formats the date to the ISO format without the time zone and day information: yyyyMM"}]}, {"index": "136", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/util/DateUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.model.util.DateUtil.formatYearMonthNoDash", "methodParameterType": "LocalDate#", "methodParameterName": "date#", "methodBody": "public static String formatYearMonthNoDash(LocalDate date) {\n    return DATE_FORMATTER_YEAR_MONTH_NO_DASH.print(date);\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Formats the date to the ISO format without the time zone and day information: yyyyMM", "call_func_name": ["org.joda.time.format.DateTimeFormatter.print"], "call_func_parameter": [["org.joda.time.ReadablePartial"]], "passed_comments": "/"}, {"index": "137", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/util/DateUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.model.util.DateUtil.parseLocalDate", "methodParameterType": "String#", "methodParameterName": "timestamp#", "methodBody": "public static LocalDate parseLocalDate(String timestamp) {\n    if (timestamp != null) {\n      for (DateTimeFormatter formatter : DateUtil.formatters) {\n        try {\n          return formatter.parseLocalDate(timestamp);\n        } catch (IllegalArgumentException e) {\n          // Silently skips to the next formatter.\n        }\n      }\n    }\n    return null;\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#Block#CatchClause#TryStatement#Block#EnhancedForStatement#Block#IfStatement#NullLiteral#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(Block(TryStatement(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block)Block)CatchClause)TryStatement)Block)EnhancedForStatement)Block)IfStatement(ReturnStatement(NullLiteral)NullLiteral)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Attempts to parse the given  {@code String} to a {@code LocalDate} using one of the knownformatters. The attempt falls back to all the formatters, and if the format is unknown,  {@code null} isreturned.", "call_func_name": ["java.util.List.iterator", "java.util.Iterator.hasNext", "java.util.Iterator.next", "org.joda.time.format.DateTimeFormatter.parseLocalDate"], "call_func_parameter": [[""], [""], [""], ["java.lang.String"]], "passed_comments": "/"}, {"index": "138", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/util/DateUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.model.util.DateUtil.lastMonthInYearMonthFormat", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public static String lastMonthInYearMonthFormat() {\n    LocalDate lastMonth = new LocalDate().minusMonths(1);\n    return DATE_FORMATTER_YEAR_MONTH.print(lastMonth);\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#SimpleName#NumberLiteral#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Create a  {@code LocalDate} that represents the last month, and formats it to the yyyy-MM format.", "call_func_name": ["org.joda.time.LocalDate.<init>", "org.joda.time.LocalDate.minusMonths", "org.joda.time.format.DateTimeFormatter.print"], "call_func_parameter": [[""], ["int"], ["org.joda.time.ReadablePartial"]], "passed_comments": "/"}, {"index": "139", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/util/DateUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.model.util.DateUtil.firstDayPreviousMonth", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public static LocalDate firstDayPreviousMonth() {\n    return new LocalDate().minusMonths(1).dayOfMonth().withMinimumValue();\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#SimpleName#NumberLiteral#MethodInvocation#SimpleName#MethodInvocation#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(MethodInvocation(MethodInvocation(MethodInvocation(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Get a LocalDate for the first day of the previous month.", "call_func_name": ["org.joda.time.LocalDate.<init>", "org.joda.time.LocalDate.minusMonths", "org.joda.time.LocalDate.dayOfMonth"], "call_func_parameter": [[""], ["int"], [""]], "passed_comments": "/"}, {"index": "140", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/util/DateUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.model.util.DateUtil.lastDayPreviousMonth", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public static LocalDate lastDayPreviousMonth() {\n    return new LocalDate().minusMonths(1).dayOfMonth().withMaximumValue();\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#SimpleName#NumberLiteral#MethodInvocation#SimpleName#MethodInvocation#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(MethodInvocation(MethodInvocation(MethodInvocation(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Get a LocalDate for the last day of the previous month.", "call_func_name": ["org.joda.time.LocalDate.<init>", "org.joda.time.LocalDate.minusMonths", "org.joda.time.LocalDate.dayOfMonth"], "call_func_parameter": [[""], ["int"], [""]], "passed_comments": "/"}, {"index": "141", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/util/DateUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.model.util.DateUtil.firstDayMonth", "methodParameterType": "LocalDate#", "methodParameterName": "localDate#", "methodBody": "public static LocalDate firstDayMonth(LocalDate localDate) {\n    return localDate.dayOfMonth().withMinimumValue();\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Get a LocalDate for the first day of a month.", "call_func_name": ["org.joda.time.LocalDate.dayOfMonth"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "142", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/util/DateUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.model.util.DateUtil.lastDayMonth", "methodParameterType": "LocalDate#", "methodParameterName": "localDate#", "methodBody": "public static LocalDate lastDayMonth(LocalDate localDate) {\n    return localDate.dayOfMonth().withMaximumValue();\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Get a LocalDate for the last day of a month.", "call_func_name": ["org.joda.time.LocalDate.dayOfMonth"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "143", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/util/BigDecimalUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.model.util.BigDecimalUtil.BigDecimalUtil", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "private BigDecimalUtil() {}", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Private constructor to prevent instantiation of this utility class.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "144", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/util/BigDecimalUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.model.util.BigDecimalUtil.parseFromNumberString", "methodParameterType": "String#", "methodParameterName": "numberString#", "methodBody": "public static BigDecimal parseFromNumberString(@Nullable String numberString) {\n    BigDecimal result = null;\n\n    if (numberString != null) {\n      String nonSpacedString = numberString.replaceAll(\"[ \\\\t\\\\n\\\\x0B\\\\f\\\\r%]\", \"\");\n\n      if (!Strings.isNullOrEmpty(nonSpacedString)){\n        int indexOfComma = nonSpacedString.indexOf(',');\n        int indexOfDot = nonSpacedString.indexOf('.');\n  \n        DecimalFormat decimalFormat = (DecimalFormat) NumberFormat.getInstance();\n        DecimalFormatSymbols otherSymbols = new DecimalFormatSymbols();\n  \n        if (indexOfComma < indexOfDot) {\n          otherSymbols.setDecimalSeparator('.');\n          otherSymbols.setGroupingSeparator(',');\n        } else {\n          otherSymbols.setDecimalSeparator(',');\n          otherSymbols.setGroupingSeparator('.');\n        }\n  \n        decimalFormat.setParseBigDecimal(true);\n        decimalFormat.setDecimalFormatSymbols(otherSymbols);\n  \n        try {\n          result = (BigDecimal) decimalFormat.parse(nonSpacedString);\n        } catch (ParseException e) {\n          throw new RuntimeException(\"Error parsing '\" + nonSpacedString + \"' as BigDecimal\", e);\n        }\n      }\n    }\n    return result;\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#MarkerAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#StringLiteral#StringLiteral#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#PrefixExpression#PrimitiveType#SimpleName#SimpleName#SimpleName#CharacterLiteral#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#PrimitiveType#SimpleName#SimpleName#SimpleName#CharacterLiteral#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#MethodInvocation#CastExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#InfixExpression#SimpleName#SimpleName#CharacterLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#CharacterLiteral#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleName#CharacterLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#CharacterLiteral#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#SimpleName#BooleanLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#CastExpression#Assignment#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#StringLiteral#SimpleName#StringLiteral#InfixExpression#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#Block#IfStatement#Block#IfStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(StringLiteral)StringLiteral)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression(Block(VariableDeclarationStatement(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(CharacterLiteral)CharacterLiteral)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(CharacterLiteral)CharacterLiteral)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)CastExpression)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(SimpleName)SimpleName)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(CharacterLiteral)CharacterLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(CharacterLiteral)CharacterLiteral)MethodInvocation)ExpressionStatement)Block(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(CharacterLiteral)CharacterLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(CharacterLiteral)CharacterLiteral)MethodInvocation)ExpressionStatement)Block)IfStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(TryStatement(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)CastExpression)Assignment)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName(StringLiteral)StringLiteral)InfixExpression(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement)Block)IfStatement)Block)IfStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Finds out the number format in  {@code String} format, and parse the number to{@code BigDecimal} format.The passed number can contain white spaces of any sort, and can have the default separators such as ',' and '.'.", "call_func_name": ["java.lang.String.replaceAll", "com.google.common.base.Strings.isNullOrEmpty", "java.lang.String.indexOf", "java.text.NumberFormat.getInstance", "java.text.DecimalFormatSymbols.<init>", "java.text.DecimalFormatSymbols.setDecimalSeparator", "java.text.DecimalFormatSymbols.setGroupingSeparator", "java.text.DecimalFormat.setParseBigDecimal", "java.text.DecimalFormat.setDecimalFormatSymbols", "java.text.DecimalFormat.parse", "java.lang.StringBuilder.<init>", "java.lang.StringBuilder.append", "java.lang.StringBuilder.toString", "java.lang.RuntimeException.<init>"], "call_func_parameter": [["java.lang.String", "java.lang.String"], ["java.lang.String"], ["int"], [""], [""], ["char"], ["char"], ["boolean"], ["java.text.DecimalFormatSymbols"], ["java.lang.String"], [""], ["java.lang.String"], [""], ["java.lang.String", "java.lang.Throwable"]], "passed_comments": "/"}, {"index": "145", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/util/BigDecimalUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.model.util.BigDecimalUtil.parseFromNumberStringPercentage", "methodParameterType": "String#", "methodParameterName": "numberString#", "methodBody": "public static BigDecimal parseFromNumberStringPercentage(@Nullable String numberString) {\n    return StringsUtil.isEmptyValue(numberString) ? null\n        : new BigDecimal(numberString.replaceAll(\"\\\\s|%|>|<\", \"\"));\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#MarkerAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#NullLiteral#SimpleName#SimpleType#SimpleName#SimpleName#StringLiteral#StringLiteral#MethodInvocation#ClassInstanceCreation#ConditionalExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(ConditionalExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(NullLiteral)NullLiteral(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(StringLiteral)StringLiteral)MethodInvocation)ClassInstanceCreation)ConditionalExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Returns a new BigDecimal by parsing the supplied  {@code numberString}. Mainly used for the \"< 10%\", \"> 90%\" or \"--\" numbers from the API.", "call_func_name": ["com.google.api.ads.adwords.awreporting.model.util.StringsUtil.isEmptyValue", "java.lang.String.replaceAll", "java.math.BigDecimal.<init>"], "call_func_parameter": [["java.lang.String"], ["java.lang.String", "java.lang.String"], ["java.lang.String"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.util.StringsUtil.isEmptyValue": "Returns true if String is null, empty, or equal to two dashes (--)."}]}, {"index": "146", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/util/BigDecimalUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.model.util.BigDecimalUtil.formatAsReadable", "methodParameterType": "BigDecimal#", "methodParameterName": "number#", "methodBody": "public static String formatAsReadable(@Nullable BigDecimal number) {\n    return (number == null) ? null : humanReadableFormat.get().format(number);\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#MarkerAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#ParenthesizedExpression#NullLiteral#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#ConditionalExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(ConditionalExpression(ParenthesizedExpression(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression)ParenthesizedExpression(NullLiteral)NullLiteral(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ConditionalExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Formats the given  {@code BigDecimal} to a readable String.", "call_func_name": ["java.lang.ThreadLocal.get", "java.text.DecimalFormat.format"], "call_func_parameter": [[""], ["java.lang.Object"]], "passed_comments": "/"}, {"index": "147", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/util/BigDecimalUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.model.util.BigDecimalUtil.parseFromMoneyString", "methodParameterType": "String#", "methodParameterName": "numberString#", "methodBody": "public static BigDecimal parseFromMoneyString(@Nullable String numberString){\n    return StringsUtil.isEmptyValue(numberString) ? null\n        : (new BigDecimal(numberString.replaceAll(\"[^\\\\d.]\", \"\"))).divide(MICRO);\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#MarkerAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#NullLiteral#SimpleName#SimpleType#SimpleName#SimpleName#StringLiteral#StringLiteral#MethodInvocation#ClassInstanceCreation#ParenthesizedExpression#SimpleName#SimpleName#MethodInvocation#ConditionalExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(ConditionalExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(NullLiteral)NullLiteral(MethodInvocation(ParenthesizedExpression(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(StringLiteral)StringLiteral)MethodInvocation)ClassInstanceCreation)ParenthesizedExpression(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ConditionalExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Returns a new BigDecimal money amount by parsing the supplied  {@code numberString} and converting from micros.", "call_func_name": ["com.google.api.ads.adwords.awreporting.model.util.StringsUtil.isEmptyValue", "java.lang.String.replaceAll", "java.math.BigDecimal.<init>", "java.math.BigDecimal.divide"], "call_func_parameter": [["java.lang.String"], ["java.lang.String", "java.lang.String"], ["java.lang.String"], ["java.math.BigDecimal"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.util.StringsUtil.isEmptyValue": "Returns true if String is null, empty, or equal to two dashes (--)."}]}, {"index": "148", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/util/StringsUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.model.util.StringsUtil.isEmptyValue", "methodParameterType": "String#", "methodParameterName": "value#", "methodBody": "public static boolean isEmptyValue(@Nullable String value) {\n    return Strings.isNullOrEmpty(value) || value.trim().equals(StringsUtil.EMPTY_VALUE);\n  }", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#SimpleName#MarkerAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#InfixExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation)InfixExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Returns true if String is null, empty, or equal to two dashes (--).", "call_func_name": ["com.google.common.base.Strings.isNullOrEmpty", "java.lang.String.trim", "java.lang.String.equals"], "call_func_parameter": [["java.lang.String"], [""], ["java.lang.Object"]], "passed_comments": "/"}, {"index": "149", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/util/StringsUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.model.util.StringsUtil.removeDashes", "methodParameterType": "String#", "methodParameterName": "value#", "methodBody": "public static String removeDashes(@Nullable String value){\n    if (Strings.isNullOrEmpty(value)){\n      return \"\";\n    } else {\n      return value.replaceAll(\"-\", \"\");\n    }\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#MarkerAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#StringLiteral#ReturnStatement#Block#SimpleName#SimpleName#StringLiteral#StringLiteral#MethodInvocation#ReturnStatement#Block#IfStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(ReturnStatement(StringLiteral)StringLiteral)ReturnStatement)Block(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(StringLiteral)StringLiteral)MethodInvocation)ReturnStatement)Block)IfStatement)Block)MethodDeclaration", "methodDoc": "Returns String with dashes removed or empty String.", "call_func_name": ["com.google.common.base.Strings.isNullOrEmpty", "java.lang.String.replaceAll"], "call_func_parameter": [["java.lang.String"], ["java.lang.String", "java.lang.String"]], "passed_comments": "/"}, {"index": "150", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/util/StringsUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.model.util.StringsUtil.parseCustomerId", "methodParameterType": "String#", "methodParameterName": "value#", "methodBody": "public static Long parseCustomerId(@Nullable String value){\n      return Long.parseLong(StringsUtil.removeDashes(value));\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#MarkerAnnotation#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Returns customer id as long with dashes removed or empty String.", "call_func_name": ["com.google.api.ads.adwords.awreporting.model.util.StringsUtil.removeDashes", "java.lang.Long.parseLong", "java.lang.Long.valueOf"], "call_func_parameter": [["java.lang.String"], ["java.lang.String"], ["long"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.util.StringsUtil.removeDashes": "Returns String with dashes removed or empty String."}]}, {"index": "151", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/util/StringsUtil.java", "methodName": "com.google.api.ads.adwords.awreporting.model.util.StringsUtil.calculateHash", "methodParameterType": "String#", "methodParameterName": "s#", "methodBody": "public static String calculateHash(String s) {\n    return DigestUtils.sha1Hex(s);\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Calculates a SHA-1 Hash of the specified string", "call_func_name": ["org.apache.commons.codec.digest.DigestUtils.sha1Hex"], "call_func_parameter": [["java.lang.String"]], "passed_comments": "/"}, {"index": "152", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/CsvReportEntitiesMapping.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.CsvReportEntitiesMapping", "methodParameterType": "String#", "methodParameterName": "packageToScan#", "methodBody": "public CsvReportEntitiesMapping(String packageToScan) {\n    this.packageToScan = packageToScan;\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "@param packageToScan the package to scan.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "153", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/CsvReportEntitiesMapping.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.initializeReportMap", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public void initializeReportMap() {\n    List<Class<? extends Report>> reportBeans;\n    try {\n      reportBeans = findReportBeans(packageToScan);\n    } catch (ClassNotFoundException e) {\n      logger.severe(\"Class not found in classpath: \" + e.getMessage());\n      throw new IllegalStateException(e);\n    } catch (IOException e) {\n      logger.severe(\"Could not read class file: \" + e.getMessage());\n      throw new IllegalStateException(e);\n    }\n\n    for (Class<? extends Report> reportBeanClass : reportBeans) {\n      CsvReport csvReport = reportBeanClass.getAnnotation(CsvReport.class);\n\n      if (csvReport.value().equals(ReportDefinitionReportType.UNKNOWN)) {\n        experimentalReportsDefinitionMap.put(csvReport.fileOnlyReportType(), reportBeanClass);\n      } else {\n        ReportDefinitionReportType reportType = csvReport.value();\n        reportDefinitionMap.put(reportType, reportBeanClass);\n\n        Set<String> propertyExclusions = Sets.newHashSet();\n        String[] reportExclusionsArray = csvReport.reportExclusions();\n        propertyExclusions.addAll(Arrays.asList(reportExclusionsArray));\n        List<String> propertiesToSelect =\n            findReportPropertiesToSelect(reportBeanClass, propertyExclusions);\n        reportProperties.put(csvReport.value(), propertiesToSelect);\n\n        if (!isSubclass(reportBeanClass, DateReport.class)) {\n          nonDateRangeReports.add(reportType);\n        }\n      }\n    }\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#WildcardType#ParameterizedType#ParameterizedType#SimpleName#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#MethodInvocation#InfixExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#SimpleName#SimpleType#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleType#TypeLiteral#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#Dimension#ArrayType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleType#TypeLiteral#MethodInvocation#PrefixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#IfStatement#Block#EnhancedForStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType(SimpleType(SimpleName)SimpleName)SimpleType)WildcardType)ParameterizedType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName)VariableDeclarationFragment)VariableDeclarationStatement(TryStatement(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression)MethodInvocation)ExpressionStatement(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression)MethodInvocation)ExpressionStatement(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement(EnhancedForStatement(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType(SimpleType(SimpleName)SimpleName)SimpleType)WildcardType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleName)SimpleName(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(TypeLiteral(SimpleType(SimpleName)SimpleName)SimpleType)TypeLiteral)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName)SimpleName)SimpleType(Dimension)Dimension)ArrayType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(IfStatement(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(TypeLiteral(SimpleType(SimpleName)SimpleName)SimpleType)TypeLiteral)MethodInvocation)PrefixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)IfStatement)Block)EnhancedForStatement)Block)MethodDeclaration", "methodDoc": "Initializes the report type definition map. The base package is scanned in order to find the candidates to report beans, and the map of {@code ReportDefinitionReportType} to the report bean class is created, based on the annotatedclasses.", "call_func_name": ["com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.findReportBeans", "java.lang.StringBuilder.<init>", "java.lang.StringBuilder.append", "java.lang.ClassNotFoundException.getMessage", "java.lang.StringBuilder.toString", "java.util.logging.Logger.severe", "java.lang.IllegalStateException.<init>", "java.io.IOException.getMessage", "java.util.List.iterator", "java.util.Iterator.hasNext", "java.util.Iterator.next", "java.lang.Class.getAnnotation", "com.google.api.ads.adwords.awreporting.model.csv.annotation.CsvReport.value", "com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionReportType.equals", "com.google.api.ads.adwords.awreporting.model.csv.annotation.CsvReport.fileOnlyReportType", "java.util.Map.put", "com.google.common.collect.Sets.newHashSet", "com.google.api.ads.adwords.awreporting.model.csv.annotation.CsvReport.reportExclusions", "java.util.Arrays.asList", "java.util.Set.addAll", "com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.findReportPropertiesToSelect", "com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.isSubclass", "java.util.Set.add"], "call_func_parameter": [["java.lang.String"], [""], ["java.lang.String"], [""], [""], ["java.lang.String"], ["java.lang.Throwable"], [""], [""], [""], [""], ["java.lang.Class"], [""], ["java.lang.Object"], [""], ["java.lang.Object", "java.lang.Object"], [""], [""], ["java.lang.Object[]"], ["java.util.Collection"], ["java.lang.Class", "java.util.Set"], ["java.lang.Class", "java.lang.Class"], ["java.lang.Object"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.findReportBeans": "Finds the beans classes that are annotated with  {@code CsvReport} and extends the{@code Report} base class."}, {"com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.findReportPropertiesToSelect": "Finds the properties that will be selected to be part of the report."}, {"com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.isSubclass": "Check if the given class is a subclass of the specified superclass."}]}, {"index": "154", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/CsvReportEntitiesMapping.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.getDefinedReports", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public Set<ReportDefinitionReportType> getDefinedReports() {\n    return reportProperties.keySet();\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Retrieves the report definitions defined by the report bean classes.", "call_func_name": ["java.util.Map.keySet"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "155", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/CsvReportEntitiesMapping.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.getReportBeanClass", "methodParameterType": "ReportDefinitionReportType#", "methodParameterName": "reportType#", "methodBody": "public Class<? extends Report> getReportBeanClass(ReportDefinitionReportType reportType) {\n    return reportDefinitionMap.get(reportType);\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType(SimpleType(SimpleName)SimpleName)SimpleType)WildcardType)ParameterizedType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Retrieves the bean class that maps the report data in the CSV file.", "call_func_name": ["java.util.Map.get"], "call_func_parameter": [["java.lang.Object"]], "passed_comments": "/"}, {"index": "156", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/CsvReportEntitiesMapping.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.getExperimentalReportBeanClass", "methodParameterType": "String#", "methodParameterName": "reportTypeName#", "methodBody": "public Class<? extends Report> getExperimentalReportBeanClass(String reportTypeName) {\n    return experimentalReportsDefinitionMap.get(reportTypeName);\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType(SimpleType(SimpleName)SimpleName)SimpleType)WildcardType)ParameterizedType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Retrieves the bean class that maps the report data in the CSV file, and it's in the experimental set.", "call_func_name": ["java.util.Map.get"], "call_func_parameter": [["java.lang.Object"]], "passed_comments": "/"}, {"index": "157", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/CsvReportEntitiesMapping.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.retrievePropertiesToSelect", "methodParameterType": "ReportDefinitionReportType#", "methodParameterName": "reportType#", "methodBody": "public List<String> retrievePropertiesToSelect(ReportDefinitionReportType reportType) {\n    return reportProperties.get(reportType);\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Retrieves the properties that should be selected in the report.", "call_func_name": ["java.util.Map.get"], "call_func_parameter": [["java.lang.Object"]], "passed_comments": "/"}, {"index": "158", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/CsvReportEntitiesMapping.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.supportsDateRange", "methodParameterType": "ReportDefinitionReportType#", "methodParameterName": "reportType#", "methodBody": "public boolean supportsDateRange(ReportDefinitionReportType reportType) {\n    return !nonDateRangeReports.contains(reportType);\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#PrefixExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Checks whether the specified report type supports date range.", "call_func_name": ["java.util.Set.contains"], "call_func_parameter": [["java.lang.Object"]], "passed_comments": "/"}, {"index": "159", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/CsvReportEntitiesMapping.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.findReportPropertiesToSelect", "methodParameterType": "Class<? extends Report>#Set<String>#", "methodParameterName": "reportBeanClass#propertyExclusions#", "methodBody": "private List<String> findReportPropertiesToSelect(Class<? extends Report> reportBeanClass,\n      Set<String> propertyExclusions) {\n    List<String> propertiesToSelect = new ArrayList<String>();\n    Class<?> currentClass = reportBeanClass;\n\n    while (currentClass != Object.class) {\n      addAllMappedSelectionProperties(propertiesToSelect, currentClass, propertyExclusions);\n      currentClass = currentClass.getSuperclass();\n    }\n\n    return propertiesToSelect;\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#SimpleName#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleType#TypeLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#WhileStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType(SimpleType(SimpleName)SimpleName)SimpleType)WildcardType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType)WildcardType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(SimpleName)SimpleName)VariableDeclarationFragment)VariableDeclarationStatement(WhileStatement(InfixExpression(SimpleName)SimpleName(TypeLiteral(SimpleType(SimpleName)SimpleName)SimpleType)TypeLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block)WhileStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Finds the properties that will be selected to be part of the report.", "call_func_name": ["java.util.ArrayList.<init>", "com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.addAllMappedSelectionProperties", "java.lang.Class.getSuperclass"], "call_func_parameter": [[""], ["java.util.List", "java.lang.Class", "java.util.Set"], [""]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.addAllMappedSelectionProperties": "Adds all the mapped report properties to the selection list."}]}, {"index": "160", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/CsvReportEntitiesMapping.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.addAllMappedSelectionProperties", "methodParameterType": "List<String>#Class<?>#Set<String>#", "methodParameterName": "propertiesToSelect#currentClass#propertyExclusions#", "methodBody": "private void addAllMappedSelectionProperties(List<String> propertiesToSelect,\n      Class<?> currentClass, Set<String> propertyExclusions) {\n    Field[] declaredFields = currentClass.getDeclaredFields();\n    for (int i = 0; i < declaredFields.length; i++) {\n\n      Field field = declaredFields[i];\n      addPropertyNameIfAnnotationPresent(propertiesToSelect, field, propertyExclusions);\n    }\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#Dimension#ArrayType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#PrimitiveType#SimpleName#NumberLiteral#VariableDeclarationFragment#VariableDeclarationExpression#SimpleName#SimpleName#SimpleName#QualifiedName#InfixExpression#SimpleName#PostfixExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#ArrayAccess#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#ForStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType)WildcardType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName)SimpleName)SimpleType(Dimension)Dimension)ArrayType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ForStatement(VariableDeclarationExpression(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(NumberLiteral)NumberLiteral)VariableDeclarationFragment)VariableDeclarationExpression(InfixExpression(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)InfixExpression(PostfixExpression(SimpleName)SimpleName)PostfixExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ArrayAccess(SimpleName)SimpleName(SimpleName)SimpleName)ArrayAccess)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)ForStatement)Block)MethodDeclaration", "methodDoc": "Adds all the mapped report properties to the selection list.", "call_func_name": ["java.lang.Class.getDeclaredFields", "com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.addPropertyNameIfAnnotationPresent"], "call_func_parameter": [[""], ["java.util.List", "java.lang.reflect.Field", "java.util.Set"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.addPropertyNameIfAnnotationPresent": "Adds the report property to select if the CSV annotation is present"}]}, {"index": "161", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/CsvReportEntitiesMapping.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.addPropertyNameIfAnnotationPresent", "methodParameterType": "List<String>#Field#Set<String>#", "methodParameterName": "propertiesToSelect#field#propertyExclusions#", "methodBody": "private void addPropertyNameIfAnnotationPresent(List<String> propertiesToSelect, Field field,\n      Set<String> propertyExclusions) {\n    if (field.isAnnotationPresent(CsvField.class)) {\n      CsvField reportFieldAnnotation = field.getAnnotation(CsvField.class);\n      String reportPropertyName = reportFieldAnnotation.reportField();\n\n      if (!propertyExclusions.contains(reportPropertyName)) {\n        propertiesToSelect.add(reportPropertyName);\n      }\n    }\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleType#TypeLiteral#MethodInvocation#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleType#TypeLiteral#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#PrefixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#IfStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(TypeLiteral(SimpleType(SimpleName)SimpleName)SimpleType)TypeLiteral)MethodInvocation(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(TypeLiteral(SimpleType(SimpleName)SimpleName)SimpleType)TypeLiteral)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)IfStatement)Block)MethodDeclaration", "methodDoc": "Adds the report property to select if the CSV annotation is present", "call_func_name": ["java.lang.reflect.Field.isAnnotationPresent", "java.lang.reflect.Field.getAnnotation", "com.google.api.ads.adwords.awreporting.model.csv.annotation.CsvField.reportField", "java.util.Set.contains", "java.util.List.add"], "call_func_parameter": [["java.lang.Class"], ["java.lang.Class"], [""], ["java.lang.Object"], ["java.lang.Object"]], "passed_comments": "/"}, {"index": "162", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/CsvReportEntitiesMapping.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.findReportBeans", "methodParameterType": "String#", "methodParameterName": "basePackage#", "methodBody": "private List<Class<? extends Report>> findReportBeans(String basePackage) throws IOException,\n      ClassNotFoundException {\n    ResourcePatternResolver resourcePatternResolver = new PathMatchingResourcePatternResolver();\n    MetadataReaderFactory metadataReaderFactory =\n        new CachingMetadataReaderFactory(resourcePatternResolver);\n    String packageSearchPath = ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX\n        + resolveBasePackage(basePackage) + \"/\" + \"**/*.class\";\n    Resource[] resources = resourcePatternResolver.getResources(packageSearchPath);\n\n    List<Class<? extends Report>> candidates = new ArrayList<Class<? extends Report>>();\n    for (Resource resource : resources) {\n      addCandidateIfApplicable(resource, metadataReaderFactory, candidates);\n    }\n\n    return candidates;\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#WildcardType#ParameterizedType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#MethodInvocation#StringLiteral#StringLiteral#InfixExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#Dimension#ArrayType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#WildcardType#ParameterizedType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#WildcardType#ParameterizedType#ParameterizedType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#EnhancedForStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType(SimpleType(SimpleName)SimpleName)SimpleType)WildcardType)ParameterizedType)ParameterizedType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(InfixExpression(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(StringLiteral)StringLiteral(StringLiteral)StringLiteral)InfixExpression)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName)SimpleName)SimpleType(Dimension)Dimension)ArrayType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType(SimpleType(SimpleName)SimpleName)SimpleType)WildcardType)ParameterizedType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType(SimpleType(SimpleName)SimpleName)SimpleType)WildcardType)ParameterizedType)ParameterizedType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleName)SimpleName(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)EnhancedForStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Finds the beans classes that are annotated with  {@code CsvReport} and extends the{@code Report} base class.", "call_func_name": ["org.springframework.core.io.support.PathMatchingResourcePatternResolver.<init>", "org.springframework.core.type.classreading.CachingMetadataReaderFactory.<init>", "java.lang.StringBuilder.<init>", "java.lang.StringBuilder.append", "com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.resolveBasePackage", "java.lang.StringBuilder.toString", "org.springframework.core.io.support.ResourcePatternResolver.getResources", "java.util.ArrayList.<init>", "com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.addCandidateIfApplicable"], "call_func_parameter": [[""], ["org.springframework.core.io.ResourceLoader"], [""], ["java.lang.String"], ["java.lang.String"], [""], ["java.lang.String"], [""], ["org.springframework.core.io.Resource", "org.springframework.core.type.classreading.MetadataReaderFactory", "java.util.List"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.resolveBasePackage": "Resolve the package name to a canonical path, in case there any place holders."}, {"com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.addCandidateIfApplicable": "Adds the resource as a candidate if the resource matches the rules."}]}, {"index": "163", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/CsvReportEntitiesMapping.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.addCandidateIfApplicable", "methodParameterType": "Resource#MetadataReaderFactory#List<Class<? extends Report>>#", "methodParameterName": "resource#metadataReaderFactory#candidates#", "methodBody": "private void addCandidateIfApplicable(\n      Resource resource,\n      MetadataReaderFactory metadataReaderFactory,\n      List<Class<? extends Report>> candidates)\n      throws IOException, ClassNotFoundException {\n    if (resource.isReadable()) {\n      MetadataReader metadataReader = metadataReaderFactory.getMetadataReader(resource);\n      \n      if (isAnnotationPresentAndReportSubclass(metadataReader)) {\n        String reportClassName = metadataReader.getClassMetadata().getClassName();\n        Class<? extends Report> candidate = Class.forName(reportClassName).asSubclass(Report.class);\n        candidates.add(candidate);\n      }\n    }\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#WildcardType#ParameterizedType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleType#TypeLiteral#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#IfStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType(SimpleType(SimpleName)SimpleName)SimpleType)WildcardType)ParameterizedType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType(Block(IfStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType(SimpleType(SimpleName)SimpleName)SimpleType)WildcardType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(TypeLiteral(SimpleType(SimpleName)SimpleName)SimpleType)TypeLiteral)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)IfStatement)Block)MethodDeclaration", "methodDoc": "Adds the resource as a candidate if the resource matches the rules.", "call_func_name": ["org.springframework.core.io.Resource.isReadable", "org.springframework.core.type.classreading.MetadataReaderFactory.getMetadataReader", "com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.isAnnotationPresentAndReportSubclass", "org.springframework.core.type.classreading.MetadataReader.getClassMetadata", "org.springframework.core.type.ClassMetadata.getClassName", "java.lang.Class.forName", "java.lang.Class.asSubclass", "java.util.List.add"], "call_func_parameter": [[""], ["org.springframework.core.io.Resource"], ["org.springframework.core.type.classreading.MetadataReader"], [""], [""], ["java.lang.String"], ["java.lang.Class"], ["java.lang.Object"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.isAnnotationPresentAndReportSubclass": "Checks for the annotation that maps the bean to a CSV file report."}]}, {"index": "164", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/CsvReportEntitiesMapping.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.resolveBasePackage", "methodParameterType": "String#", "methodParameterName": "basePackage#", "methodBody": "private static String resolveBasePackage(String basePackage) {\n    return ClassUtils.convertClassNameToResourcePath(\n        SystemPropertyUtils.resolvePlaceholders(basePackage));\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Resolve the package name to a canonical path, in case there any place holders.", "call_func_name": ["org.springframework.util.SystemPropertyUtils.resolvePlaceholders", "org.springframework.util.ClassUtils.convertClassNameToResourcePath"], "call_func_parameter": [["java.lang.String"], ["java.lang.String"]], "passed_comments": "/"}, {"index": "165", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/CsvReportEntitiesMapping.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.isAnnotationPresentAndReportSubclass", "methodParameterType": "MetadataReader#", "methodParameterName": "metadataReader#", "methodBody": "private boolean isAnnotationPresentAndReportSubclass(MetadataReader metadataReader) {\n    String className = metadataReader.getClassMetadata().getClassName();\n    try {\n      Class<?> beanClass = Class.forName(className);\n      if (beanClass.getAnnotation(CsvReport.class) != null && isSubclass(beanClass, Report.class)) {\n        return true;\n      }\n    } catch (ClassNotFoundException e) {\n      logger.warning(\"Class not found in classpath: \" + className);\n    }\n    return false;\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleType#TypeLiteral#MethodInvocation#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#SimpleType#TypeLiteral#MethodInvocation#InfixExpression#BooleanLiteral#ReturnStatement#Block#IfStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#SimpleName#InfixExpression#MethodInvocation#ExpressionStatement#Block#CatchClause#TryStatement#BooleanLiteral#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(TryStatement(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType)WildcardType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(TypeLiteral(SimpleType(SimpleName)SimpleName)SimpleType)TypeLiteral)MethodInvocation(NullLiteral)NullLiteral)InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(TypeLiteral(SimpleType(SimpleName)SimpleName)SimpleType)TypeLiteral)MethodInvocation)InfixExpression(Block(ReturnStatement(BooleanLiteral)BooleanLiteral)ReturnStatement)Block)IfStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)MethodInvocation)ExpressionStatement)Block)CatchClause)TryStatement(ReturnStatement(BooleanLiteral)BooleanLiteral)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Checks for the annotation that maps the bean to a CSV file report.", "call_func_name": ["org.springframework.core.type.classreading.MetadataReader.getClassMetadata", "org.springframework.core.type.ClassMetadata.getClassName", "java.lang.Class.forName", "java.lang.Class.getAnnotation", "com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.isSubclass", "java.lang.StringBuilder.<init>", "java.lang.StringBuilder.append", "java.lang.StringBuilder.toString", "java.util.logging.Logger.warning"], "call_func_parameter": [[""], [""], ["java.lang.String"], ["java.lang.Class"], ["java.lang.Class", "java.lang.Class"], [""], ["java.lang.String"], [""], ["java.lang.String"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.isSubclass": "Check if the given class is a subclass of the specified superclass."}]}, {"index": "166", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/CsvReportEntitiesMapping.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.CsvReportEntitiesMapping.isSubclass", "methodParameterType": "Class<?>#Class<?>#", "methodParameterName": "beanClass#superClass#", "methodBody": "private boolean isSubclass(Class<?> beanClass, Class<?> superClass) {\n    Class<?> currentClass = beanClass;\n    while (currentClass != Object.class) {\n      if (currentClass == superClass) {\n        return true;\n      }\n      currentClass = currentClass.getSuperclass();\n    }\n    return false;\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#SimpleName#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleType#TypeLiteral#InfixExpression#SimpleName#SimpleName#InfixExpression#BooleanLiteral#ReturnStatement#Block#IfStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#WhileStatement#BooleanLiteral#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType)WildcardType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType)WildcardType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType)WildcardType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(SimpleName)SimpleName)VariableDeclarationFragment)VariableDeclarationStatement(WhileStatement(InfixExpression(SimpleName)SimpleName(TypeLiteral(SimpleType(SimpleName)SimpleName)SimpleType)TypeLiteral)InfixExpression(Block(IfStatement(InfixExpression(SimpleName)SimpleName(SimpleName)SimpleName)InfixExpression(Block(ReturnStatement(BooleanLiteral)BooleanLiteral)ReturnStatement)Block)IfStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block)WhileStatement(ReturnStatement(BooleanLiteral)BooleanLiteral)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Check if the given class is a subclass of the specified superclass.", "call_func_name": ["java.lang.Class.getSuperclass"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "167", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/ReportEntityMappingStrategy.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy.ReportEntityMappingStrategy", "methodParameterType": "Class<T>#", "methodParameterName": "reportEntityClass#", "methodBody": "public ReportEntityMappingStrategy(Class<T> reportEntityClass) {\n    this.reportEntityClass =\n        Preconditions.checkNotNull(reportEntityClass, \"The report entity class must be specified.\");\n    this.reportEntityClass = reportEntityClass;\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "@param reportEntityClass the {@code class} of the report entity POJO. This parameter isobligatory.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "168", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/ReportEntityMappingStrategy.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy.processHeader", "methodParameterType": "String[]#", "methodParameterName": "header#", "methodBody": "public void processHeader(String[] header) throws IOException {\n    Map<String, String> nameMapping = createNameMapping();\n    for (int i = 0; i < header.length; i++) {\n      csvIndexToReportNames.put(i, nameMapping.get(header[i]));\n    }\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#Dimension#ArrayType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#PrimitiveType#SimpleName#NumberLiteral#VariableDeclarationFragment#VariableDeclarationExpression#SimpleName#SimpleName#SimpleName#QualifiedName#InfixExpression#SimpleName#PostfixExpression#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#ArrayAccess#MethodInvocation#MethodInvocation#ExpressionStatement#Block#ForStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName)SimpleName)SimpleType(Dimension)Dimension)ArrayType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ForStatement(VariableDeclarationExpression(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(NumberLiteral)NumberLiteral)VariableDeclarationFragment)VariableDeclarationExpression(InfixExpression(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)InfixExpression(PostfixExpression(SimpleName)SimpleName)PostfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(ArrayAccess(SimpleName)SimpleName(SimpleName)SimpleName)ArrayAccess)MethodInvocation)MethodInvocation)ExpressionStatement)Block)ForStatement)Block)MethodDeclaration", "methodDoc": "Process the header of the CSV file. This method scans the class of the bean for the proper annotations, and associates the correct column index to the correct field.", "call_func_name": ["com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy.createNameMapping", "java.lang.Integer.valueOf", "java.util.Map.get", "java.util.Map.put"], "call_func_parameter": [[""], ["int"], ["java.lang.Object"], ["java.lang.Object", "java.lang.Object"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy.createNameMapping": "Creates the  {@code Map} where the key is the name of the property in the CSV file, and thevalue is the name of the field in the Java bean."}]}, {"index": "169", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/ReportEntityMappingStrategy.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy.createNameMapping", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "private Map<String, String> createNameMapping() {\n    Map<String, String> nameMapping = new HashMap<String, String>();\n    Class<?> currentClass = reportEntityClass;\n\n    while (currentClass != Object.class) {\n      addNameMappingForDeclaredFields(nameMapping, currentClass);\n      currentClass = currentClass.getSuperclass();\n    }\n\n    return nameMapping;\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#SimpleName#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleType#TypeLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#WhileStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType)WildcardType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(SimpleName)SimpleName)VariableDeclarationFragment)VariableDeclarationStatement(WhileStatement(InfixExpression(SimpleName)SimpleName(TypeLiteral(SimpleType(SimpleName)SimpleName)SimpleType)TypeLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block)WhileStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Creates the  {@code Map} where the key is the name of the property in the CSV file, and thevalue is the name of the field in the Java bean.", "call_func_name": ["java.util.HashMap.<init>", "com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy.addNameMappingForDeclaredFields", "java.lang.Class.getSuperclass"], "call_func_parameter": [[""], ["java.util.Map", "java.lang.Class"], [""]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy.addNameMappingForDeclaredFields": "Scans the current class' fields for the mapped properties, and associate then to the CSV file columns."}]}, {"index": "170", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/ReportEntityMappingStrategy.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy.addNameMappingForDeclaredFields", "methodParameterType": "Map<String,String>#Class<?>#", "methodParameterName": "nameMapping#currentClass#", "methodBody": "private void addNameMappingForDeclaredFields(Map<String, String> nameMapping,\n      Class<?> currentClass) {\n    Field[] declaredFields = currentClass.getDeclaredFields();\n\n    for (Field field : declaredFields) {\n      addNameMappingIfAnnotationPresent(nameMapping, field);\n      addMoneyMappingIfAnnotationPresent(field);\n    }\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#Dimension#ArrayType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#EnhancedForStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType)WildcardType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName)SimpleName)SimpleType(Dimension)Dimension)ArrayType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleName)SimpleName(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)EnhancedForStatement)Block)MethodDeclaration", "methodDoc": "Scans the current class' fields for the mapped properties, and associate then to the CSV file columns.", "call_func_name": ["java.lang.Class.getDeclaredFields", "com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy.addNameMappingIfAnnotationPresent", "com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy.addMoneyMappingIfAnnotationPresent"], "call_func_parameter": [[""], ["java.util.Map", "java.lang.reflect.Field"], ["java.lang.reflect.Field"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy.addNameMappingIfAnnotationPresent": "Checks for the annotation, and if the annotation is present, creates the association between the CSV property and the field."}, {"com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy.addMoneyMappingIfAnnotationPresent": "Checks for the @MoneyField annotation, and if the annotation is present, puts a true value at fieldsWithMoneyValues, this value will be used when parsing CSV to use BigDecimal and divide by 1M."}]}, {"index": "171", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/ReportEntityMappingStrategy.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy.addNameMappingIfAnnotationPresent", "methodParameterType": "Map<String,String>#Field#", "methodParameterName": "nameMapping#field#", "methodBody": "private void addNameMappingIfAnnotationPresent(Map<String, String> nameMapping, Field field) {\n    if (field.isAnnotationPresent(CsvField.class)) {\n      CsvField reportFieldAnnotation = field.getAnnotation(CsvField.class);\n      String csvFieldName = reportFieldAnnotation.value();\n      nameMapping.put(csvFieldName, field.getName());\n    }\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleType#TypeLiteral#MethodInvocation#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleType#TypeLiteral#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(TypeLiteral(SimpleType(SimpleName)SimpleName)SimpleType)TypeLiteral)MethodInvocation(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(TypeLiteral(SimpleType(SimpleName)SimpleName)SimpleType)TypeLiteral)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)MethodDeclaration", "methodDoc": "Checks for the annotation, and if the annotation is present, creates the association between the CSV property and the field.", "call_func_name": ["java.lang.reflect.Field.isAnnotationPresent", "java.lang.reflect.Field.getAnnotation", "com.google.api.ads.adwords.awreporting.model.csv.annotation.CsvField.value", "java.lang.reflect.Field.getName", "java.util.Map.put"], "call_func_parameter": [["java.lang.Class"], ["java.lang.Class"], [""], [""], ["java.lang.Object", "java.lang.Object"]], "passed_comments": "/"}, {"index": "172", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/ReportEntityMappingStrategy.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy.addMoneyMappingIfAnnotationPresent", "methodParameterType": "Field#", "methodParameterName": "field#", "methodBody": "private void addMoneyMappingIfAnnotationPresent(Field field) {\n    if (field.isAnnotationPresent(MoneyField.class)) {\n      fieldsWithMoneyValues.add(field.getName());\n    }\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleType#TypeLiteral#MethodInvocation#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(TypeLiteral(SimpleType(SimpleName)SimpleName)SimpleType)TypeLiteral)MethodInvocation(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)MethodDeclaration", "methodDoc": "Checks for the @MoneyField annotation, and if the annotation is present, puts a true value at fieldsWithMoneyValues, this value will be used when parsing CSV to use BigDecimal and divide by 1M.", "call_func_name": ["java.lang.reflect.Field.isAnnotationPresent", "java.lang.reflect.Field.getName", "java.util.Set.add"], "call_func_parameter": [["java.lang.Class"], [""], ["java.lang.Object"]], "passed_comments": "/"}, {"index": "173", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/ReportEntityMappingStrategy.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy.createBean", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public T createBean() throws CsvReportParsingException {\n    try {\n      return reportEntityClass.getConstructor().newInstance();\n    } catch (NoSuchMethodException\n        | SecurityException\n        | InstantiationException\n        | IllegalAccessException\n        | IllegalArgumentException\n        | InvocationTargetException e) {\n      throw new CsvReportParsingException(\n          \"Failed to instantiate \" + reportEntityClass.getCanonicalName(), e);\n    }\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#ReturnStatement#Block#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#UnionType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#StringLiteral#SimpleName#SimpleName#MethodInvocation#InfixExpression#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType(Block(TryStatement(Block(ReturnStatement(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block(CatchClause(SingleVariableDeclaration(UnionType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)UnionType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement)Block)MethodDeclaration", "methodDoc": "Creates a new instance of the Java bean. <p>The Java bean must have a public constructor that receives no arguments in order to be instantiated.", "call_func_name": ["java.lang.Class.getConstructor", "java.lang.reflect.Constructor.newInstance", "java.lang.StringBuilder.<init>", "java.lang.StringBuilder.append", "java.lang.Class.getCanonicalName", "java.lang.StringBuilder.toString", "com.google.api.ads.adwords.awreporting.model.csv.CsvReportParsingException.<init>"], "call_func_parameter": [["java.lang.Class[]"], ["java.lang.Object[]"], [""], ["java.lang.String"], [""], [""], ["java.lang.String", "java.lang.Throwable"]], "passed_comments": "/"}, {"index": "174", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/ReportEntityMappingStrategy.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy.findDescriptor", "methodParameterType": "int#", "methodParameterName": "columnNumber#", "methodBody": "public PropertyDescriptor findDescriptor(int columnNumber) throws CsvReportParsingException {\n    String propertyName = csvIndexToReportNames.get(columnNumber);\n    if (propertyName == null) {\n      throw new CsvReportParsingException(\n          \"Invalid column number \" + columnNumber + \" in map \" + csvIndexToReportNames);\n    }\n\n    try {\n      return new PropertyDescriptor(propertyName, reportEntityClass);\n    } catch (IntrospectionException e) {\n      throw new CsvReportParsingException(\n          \"Failed to create property descriptor for \" + propertyName, e);\n    }\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleType#StringLiteral#SimpleName#StringLiteral#SimpleName#InfixExpression#ClassInstanceCreation#ThrowStatement#Block#IfStatement#SimpleName#SimpleType#SimpleName#SimpleName#ClassInstanceCreation#ReturnStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#StringLiteral#SimpleName#InfixExpression#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)ClassInstanceCreation)ThrowStatement)Block)IfStatement(TryStatement(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleName)SimpleName)ClassInstanceCreation)ReturnStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement)Block)MethodDeclaration", "methodDoc": "Find the property descriptor that is referenced by the given column index. <p>The mapping between the indexes and the field were created when the CSV header was captured.", "call_func_name": ["java.lang.Integer.valueOf", "java.util.Map.get", "java.lang.StringBuilder.<init>", "java.lang.StringBuilder.append", "java.lang.StringBuilder.append", "java.lang.StringBuilder.append", "java.lang.StringBuilder.toString", "com.google.api.ads.adwords.awreporting.model.csv.CsvReportParsingException.<init>", "java.beans.PropertyDescriptor.<init>", "com.google.api.ads.adwords.awreporting.model.csv.CsvReportParsingException.<init>"], "call_func_parameter": [["int"], ["java.lang.Object"], [""], ["java.lang.String"], ["int"], ["java.lang.Object"], [""], ["java.lang.String"], ["java.lang.String", "java.lang.Class"], ["java.lang.String", "java.lang.Throwable"]], "passed_comments": "/"}, {"index": "175", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/ReportEntityMappingStrategy.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy.isMoneyField", "methodParameterType": "String#", "methodParameterName": "field#", "methodBody": "public boolean isMoneyField(String field) {\n    return fieldsWithMoneyValues.contains(field);\n  }", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Checks if a field on the class has the annotations @MoneyField, this value will be used when parsing CSV to use BigDecimal and divide by 1M.", "call_func_name": ["java.util.Set.contains"], "call_func_parameter": [["java.lang.Object"]], "passed_comments": "/"}, {"index": "176", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/ModifiedCsvToBean.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.ModifiedCsvToBean.lazyParse", "methodParameterType": "ReportEntityMappingStrategy<T>#AwReportCsvReader#", "methodParameterName": "mapper#csvReader#", "methodBody": "public CsvParserIterator<T> lazyParse(\n      ReportEntityMappingStrategy<T> mapper, AwReportCsvReader csvReader)\n      throws CsvReportParsingException {\n    try {\n      mapper.processHeader(csvReader.getColumnNames());\n      return new CsvParserIterator<T>(mapper, csvReader, this);\n    } catch (IOException e) {\n      throw new CsvReportParsingException(\"Error parsing CSV: failed to read the header line.\", e);\n    }\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#ThisExpression#ClassInstanceCreation#ReturnStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#StringLiteral#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement(ReturnStatement(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(SimpleName)SimpleName(ThisExpression)ThisExpression)ClassInstanceCreation)ReturnStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(StringLiteral)StringLiteral(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement)Block)MethodDeclaration", "methodDoc": "Parses the CSV lazily, letting the client class decide when getting new elements.", "call_func_name": ["com.google.api.ads.adwords.awreporting.model.csv.AwReportCsvReader.getColumnNames", "com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy.processHeader", "com.google.api.ads.adwords.awreporting.model.csv.CsvParserIterator.<init>", "com.google.api.ads.adwords.awreporting.model.csv.CsvReportParsingException.<init>"], "call_func_parameter": [[""], ["java.lang.String[]"], ["com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy", "com.google.api.ads.adwords.awreporting.model.csv.AwReportCsvReader", "com.google.api.ads.adwords.awreporting.model.csv.ModifiedCsvToBean"], ["java.lang.String", "java.lang.Throwable"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.csv.AwReportCsvReader.getColumnNames": "Get the column names of the CSV file, in the original order."}, {"com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy.processHeader": "Process the header of the CSV file. This method scans the class of the bean for the proper annotations, and associates the correct column index to the correct field."}]}, {"index": "177", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/ModifiedCsvToBean.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.ModifiedCsvToBean.processLine", "methodParameterType": "ReportEntityMappingStrategy<T>#String[]#", "methodParameterName": "mapper#line#", "methodBody": "protected T processLine(ReportEntityMappingStrategy<T> mapper, String[] line)\n      throws CsvReportParsingException {\n    T bean = mapper.createBean();\n\n    for (int col = 0; col < line.length; col++) {\n      PropertyDescriptor prop = mapper.findDescriptor(col); // Return value is not null.\n      String value = line[col];\n\n      if (StringsUtil.isEmptyValue(value)) {\n        value = null;\n      } else {\n        value = trimIfPossible(value, prop);\n\n        // Remove dashes inside a number format (such as for CID \"xxx-xxx-xxxx\").\n        if (isNumberTypeProperty(prop)) {\n          value = StringsUtil.removeDashes(value);\n        }\n      }\n\n      try {\n        Object obj = convertValue(value, prop);\n\n        // Convert Money values to regular Decimals by dividing by a Million\n        if (mapper.isMoneyField(prop.getName())) {\n          obj = BigDecimalUtil.parseFromMoneyString((String) obj);\n        }\n\n        prop.getWriteMethod().invoke(bean, obj);\n      } catch (InstantiationException\n          | IllegalAccessException\n          | IllegalArgumentException\n          | InvocationTargetException e) {\n        String errorMsg =\n            String.format(\n                \"Error parsing column #%d with contents: %s, and property descriptor: %s.\",\n                col, value, prop.toString());\n        logger.severe(errorMsg);\n        throw new CsvReportParsingException(errorMsg, e);\n      }\n    }\n\n    return bean;\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#Dimension#ArrayType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#PrimitiveType#SimpleName#NumberLiteral#VariableDeclarationFragment#VariableDeclarationExpression#SimpleName#SimpleName#SimpleName#QualifiedName#InfixExpression#SimpleName#PostfixExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#ArrayAccess#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#NullLiteral#Assignment#ExpressionStatement#Block#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#IfStatement#Block#IfStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#SimpleName#SimpleName#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#MethodInvocation#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#UnionType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#StringLiteral#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#Block#ForStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName)SimpleName)SimpleType(Dimension)Dimension)ArrayType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ForStatement(VariableDeclarationExpression(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(NumberLiteral)NumberLiteral)VariableDeclarationFragment)VariableDeclarationExpression(InfixExpression(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)InfixExpression(PostfixExpression(SimpleName)SimpleName)PostfixExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ArrayAccess(SimpleName)SimpleName(SimpleName)SimpleName)ArrayAccess)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(NullLiteral)NullLiteral)Assignment)ExpressionStatement)Block(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement(IfStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block)IfStatement)Block)IfStatement(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)MethodInvocation)Assignment)ExpressionStatement)Block)IfStatement(ExpressionStatement(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(UnionType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)UnionType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement)Block)ForStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Creates a single object from a line from the CSV file.", "call_func_name": ["com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy.createBean", "com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy.findDescriptor", "com.google.api.ads.adwords.awreporting.model.util.StringsUtil.isEmptyValue", "com.google.api.ads.adwords.awreporting.model.csv.ModifiedCsvToBean.trimIfPossible", "com.google.api.ads.adwords.awreporting.model.csv.ModifiedCsvToBean.isNumberTypeProperty", "com.google.api.ads.adwords.awreporting.model.util.StringsUtil.removeDashes", "com.google.api.ads.adwords.awreporting.model.csv.ModifiedCsvToBean.convertValue", "java.beans.PropertyDescriptor.getName", "com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy.isMoneyField", "com.google.api.ads.adwords.awreporting.model.util.BigDecimalUtil.parseFromMoneyString", "java.beans.PropertyDescriptor.getWriteMethod", "java.lang.reflect.Method.invoke", "java.lang.Integer.valueOf", "java.beans.PropertyDescriptor.toString", "java.lang.String.format", "java.util.logging.Logger.severe", "com.google.api.ads.adwords.awreporting.model.csv.CsvReportParsingException.<init>"], "call_func_parameter": [[""], ["int"], ["java.lang.String"], ["java.lang.String", "java.beans.PropertyDescriptor"], ["java.beans.PropertyDescriptor"], ["java.lang.String"], ["java.lang.String", "java.beans.PropertyDescriptor"], [""], ["java.lang.String"], ["java.lang.String"], [""], ["java.lang.Object", "java.lang.Object[]"], ["int"], [""], ["java.lang.String", "java.lang.Object[]"], ["java.lang.String"], ["java.lang.String", "java.lang.Throwable"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy.createBean": "Creates a new instance of the Java bean. <p>The Java bean must have a public constructor that receives no arguments in order to be instantiated."}, {"com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy.findDescriptor": "Find the property descriptor that is referenced by the given column index. <p>The mapping between the indexes and the field were created when the CSV header was captured."}, {"com.google.api.ads.adwords.awreporting.model.util.StringsUtil.isEmptyValue": "Returns true if String is null, empty, or equal to two dashes (--)."}, {"com.google.api.ads.adwords.awreporting.model.csv.ModifiedCsvToBean.trimIfPossible": "Trims the property if it is of type String."}, {"com.google.api.ads.adwords.awreporting.model.util.StringsUtil.removeDashes": "Returns String with dashes removed or empty String."}, {"com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy.isMoneyField": "Checks if a field on the class has the annotations @MoneyField, this value will be used when parsing CSV to use BigDecimal and divide by 1M."}, {"com.google.api.ads.adwords.awreporting.model.util.BigDecimalUtil.parseFromMoneyString": "Returns a new BigDecimal money amount by parsing the supplied  {@code numberString} and converting from micros."}]}, {"index": "178", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/ModifiedCsvToBean.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.ModifiedCsvToBean.trimIfPossible", "methodParameterType": "String#PropertyDescriptor#", "methodParameterName": "stringValue#propertyDescriptor#", "methodBody": "private static String trimIfPossible(\n      String stringValue, PropertyDescriptor propertyDescriptor) {\n    return isStringTypeProperty(propertyDescriptor) ? stringValue.trim() : stringValue;\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#ConditionalExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(ConditionalExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)ConditionalExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Trims the property if it is of type String.", "call_func_name": ["com.google.api.ads.adwords.awreporting.model.csv.ModifiedCsvToBean.isStringTypeProperty", "java.lang.String.trim"], "call_func_parameter": [["java.beans.PropertyDescriptor"], [""]], "passed_comments": "/"}, {"index": "179", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/CsvParserIterator.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.CsvParserIterator.CsvParserIterator", "methodParameterType": "ReportEntityMappingStrategy<T>#AwReportCsvReader#ModifiedCsvToBean<T>#", "methodParameterName": "mapper#csvReader#csvToBean#", "methodBody": "public CsvParserIterator(\n      ReportEntityMappingStrategy<T> mapper,\n      AwReportCsvReader csvReader,\n      ModifiedCsvToBean<T> csvToBean) {\n    this.mapper = mapper;\n    this.csvReader = csvReader;\n    this.csvToBean = csvToBean;\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "@param mapper the mapping strategy for the bean.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "180", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/CsvParserIterator.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.CsvParserIterator.computeNext", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "@Override\n  protected T computeNext() {\n    String[] line = csvReader.readNext();\n    \n    try {\n      return (line == null) ? endOfData() : csvToBean.processLine(mapper, line);\n    } catch (CsvReportParsingException e) {\n      // AbstractIterator.computNext() requires to throw RuntimeException when any unrecoverable\n      // error happens. As this is the only place for using an unchecked exception, we don't bother\n      // defining a specific class for it.\n      throw new RuntimeException(\"CsvParserIterator.computeNext() failed.\", e);\n    }\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#Dimension#ArrayType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#ParenthesizedExpression#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ConditionalExpression#ReturnStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#StringLiteral#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName)SimpleName)SimpleType(Dimension)Dimension)ArrayType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(TryStatement(Block(ReturnStatement(ConditionalExpression(ParenthesizedExpression(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression)ParenthesizedExpression(MethodInvocation(SimpleName)SimpleName)MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ConditionalExpression)ReturnStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(StringLiteral)StringLiteral(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement)Block)MethodDeclaration", "methodDoc": "@see com.google.common.collect.AbstractIterator#computeNext()", "call_func_name": ["com.google.api.ads.adwords.awreporting.model.csv.AwReportCsvReader.readNext", "com.google.api.ads.adwords.awreporting.model.csv.CsvParserIterator.endOfData", "com.google.api.ads.adwords.awreporting.model.csv.ModifiedCsvToBean.processLine", "java.lang.RuntimeException.<init>", "com.google.api.ads.adwords.awreporting.model.csv.CsvParserIterator.computeNext"], "call_func_parameter": [[""], [""], ["com.google.api.ads.adwords.awreporting.model.csv.ReportEntityMappingStrategy", "java.lang.String[]"], ["java.lang.String", "java.lang.Throwable"], [""]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.csv.AwReportCsvReader.readNext": "Returns the next CSV line in the file. If the line starts with the AW last line total String, then returns null."}, {"com.google.api.ads.adwords.awreporting.model.csv.ModifiedCsvToBean.processLine": "Creates a single object from a line from the CSV file."}, {"com.google.api.ads.adwords.awreporting.model.csv.CsvParserIterator.computeNext": "@see com.google.common.collect.AbstractIterator#computeNext()"}]}, {"index": "181", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/AwReportCsvReader.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.AwReportCsvReader.AwReportCsvReader", "methodParameterType": "Reader#boolean#boolean#", "methodParameterName": "reader#hasHeader#hasSummary#", "methodBody": "public AwReportCsvReader(Reader reader, boolean hasHeader, boolean hasSummary)\n      throws IOException {\n    try (BufferedReader br = new BufferedReader(reader)) {\n      if (hasHeader) {\n        br.readLine();\n      }\n\n      Splitter splitter = Splitter.on(',').trimResults();\n      columnNames = Iterables.toArray(splitter.split(br.readLine()), String.class);\n      records = CSVFormat.RFC4180.withHeader(columnNames).parse(br).getRecords().listIterator();\n    }\n    \n    this.hasSummary = hasSummary;\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#CharacterLiteral#MethodInvocation#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#SimpleName#SimpleType#TypeLiteral#MethodInvocation#Assignment#ExpressionStatement#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#TryStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(TryStatement(VariableDeclarationExpression(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationExpression(Block(IfStatement(SimpleName)SimpleName(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(CharacterLiteral)CharacterLiteral)MethodInvocation(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation(TypeLiteral(SimpleType(SimpleName)SimpleName)SimpleType)TypeLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block)TryStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Constructs AwReportCsvReader with params of whether header / summary lines exist.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "182", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/AwReportCsvReader.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.AwReportCsvReader.readNext", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public String[] readNext() {\n    String[] next = null;\n    if (records.hasNext()) {\n      CSVRecord record = records.next();\n      List<String> values = Lists.newArrayListWithCapacity(record.size());\n      for (int i = 0; i < record.size(); i++) {\n        values.add(record.get(i));\n      }\n\n      if (!hasSummary || !AW_REPORT_CSV_TOTAL.equalsIgnoreCase(Iterables.getFirst(values, null))) {\n        next = values.toArray(new String[0]);\n      }\n    }\n    return next;\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#Dimension#ArrayType#SimpleName#SimpleName#SimpleType#Dimension#ArrayType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#PrimitiveType#SimpleName#NumberLiteral#VariableDeclarationFragment#VariableDeclarationExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#InfixExpression#SimpleName#PostfixExpression#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#ForStatement#SimpleName#PrefixExpression#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#NullLiteral#MethodInvocation#MethodInvocation#PrefixExpression#InfixExpression#SimpleName#SimpleName#SimpleName#SimpleName#SimpleType#Dimension#ArrayType#NumberLiteral#ArrayCreation#MethodInvocation#Assignment#ExpressionStatement#Block#IfStatement#Block#IfStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(ArrayType(SimpleType(SimpleName)SimpleName)SimpleType(Dimension)Dimension)ArrayType(SimpleName)SimpleName(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName)SimpleName)SimpleType(Dimension)Dimension)ArrayType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ForStatement(VariableDeclarationExpression(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(NumberLiteral)NumberLiteral)VariableDeclarationFragment)VariableDeclarationExpression(InfixExpression(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression(PostfixExpression(SimpleName)SimpleName)PostfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block)ForStatement(IfStatement(InfixExpression(PrefixExpression(SimpleName)SimpleName)PrefixExpression(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(NullLiteral)NullLiteral)MethodInvocation)MethodInvocation)PrefixExpression)InfixExpression(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(ArrayCreation(ArrayType(SimpleType(SimpleName)SimpleName)SimpleType(Dimension)Dimension)ArrayType(NumberLiteral)NumberLiteral)ArrayCreation)MethodInvocation)Assignment)ExpressionStatement)Block)IfStatement)Block)IfStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Returns the next CSV line in the file. If the line starts with the AW last line total String, then returns null.", "call_func_name": ["java.util.ListIterator.hasNext", "java.util.ListIterator.next", "org.apache.commons.csv.CSVRecord.size", "com.google.common.collect.Lists.newArrayListWithCapacity", "org.apache.commons.csv.CSVRecord.get", "java.util.List.add", "com.google.common.collect.Iterables.getFirst", "java.lang.String.equalsIgnoreCase", "java.util.List.toArray"], "call_func_parameter": [[""], [""], [""], ["int"], ["int"], ["java.lang.Object"], ["java.lang.Iterable", "java.lang.Object"], ["java.lang.String"], ["java.lang.Object[]"]], "passed_comments": "/"}, {"index": "183", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/csv/AwReportCsvReader.java", "methodName": "com.google.api.ads.adwords.awreporting.model.csv.AwReportCsvReader.getColumnNames", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public String[] getColumnNames() {\n    return columnNames;\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#Dimension#ArrayType#SimpleName#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(ArrayType(SimpleType(SimpleName)SimpleName)SimpleType(Dimension)Dimension)ArrayType(SimpleName)SimpleName(Block(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Get the column names of the CSV file, in the original order.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "184", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/CampaignPerformanceReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.CampaignPerformanceReport.CampaignPerformanceReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public CampaignPerformanceReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "185", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/AccountPerformanceReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.AccountPerformanceReport.AccountPerformanceReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public AccountPerformanceReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "186", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/ClickPerformanceReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.ClickPerformanceReport.ClickPerformanceReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public ClickPerformanceReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "187", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/PlaceholderReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.PlaceholderReport.PlaceholderReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public PlaceholderReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "188", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/AudiencePerformanceReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.AudiencePerformanceReport.AudiencePerformanceReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public AudiencePerformanceReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "189", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/KeywordlessCategoryReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.KeywordlessCategoryReport.KeywordlessCategoryReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public KeywordlessCategoryReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "190", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/AdPerformanceReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.AdPerformanceReport.AdPerformanceReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public AdPerformanceReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "191", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/AdgroupPerformanceReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.AdgroupPerformanceReport.AdgroupPerformanceReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public AdgroupPerformanceReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "192", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/CallMetricsCallDetailsReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.CallMetricsCallDetailsReport.CallMetricsCallDetailsReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public CallMetricsCallDetailsReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "193", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/DateRangeAndType.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType.DateRangeAndType", "methodParameterType": "LocalDate#LocalDate#ReportDefinitionDateRangeType#", "methodParameterName": "startDate#endDate#type#", "methodBody": "private DateRangeAndType(\n      LocalDate startDate, LocalDate endDate, ReportDefinitionDateRangeType type) {\n    this.startDate = Preconditions.checkNotNull(startDate, \"Argument 'startDate' cannot be null.\");\n    this.endDate = Preconditions.checkNotNull(endDate, \"Argument 'endDate' cannot be null.\");\n    this.type = Preconditions.checkNotNull(type, \"Argument 'type' cannot be null.\");\n\n    Preconditions.checkArgument(\n        !endDate.isBefore(startDate), \"Start date must be before or equal to end date.\");\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#PrefixExpression#StringLiteral#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Make constructor private so it can only be created by factory method.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "194", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/DateRangeAndType.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType.fromValues", "methodParameterType": "LocalDate#LocalDate#ReportDefinitionDateRangeType#", "methodParameterName": "startDate#endDate#type#", "methodBody": "public static DateRangeAndType fromValues(LocalDate startDate, LocalDate endDate,\n      ReportDefinitionDateRangeType type) {\n    if (startDate != null && endDate != null) {\n      // Overwrite type to custom if start date & end date are provided.\n      return new DateRangeAndType(startDate, endDate, ReportDefinitionDateRangeType.CUSTOM_DATE);\n    } else if (type != null && type != ReportDefinitionDateRangeType.CUSTOM_DATE) {\n      // Overwrite the provided start/end date if type is custom.\n      return parseEnumFormat(type);\n    } else {\n      throw new IllegalArgumentException(\n          \"Must provide either: 'startDate' and 'endData', or 'type'.\");\n      }\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#NullLiteral#InfixExpression#InfixExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#ClassInstanceCreation#ReturnStatement#Block#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#QualifiedName#InfixExpression#InfixExpression#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#SimpleName#SimpleType#StringLiteral#ClassInstanceCreation#ThrowStatement#Block#IfStatement#IfStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression)InfixExpression(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)ClassInstanceCreation)ReturnStatement)Block(IfStatement(InfixExpression(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(InfixExpression(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)InfixExpression)InfixExpression(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(StringLiteral)StringLiteral)ClassInstanceCreation)ThrowStatement)Block)IfStatement)IfStatement)Block)MethodDeclaration", "methodDoc": "Factory method to create a DateRange instance, with overwriting / alteration of values.", "call_func_name": ["com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType.<init>", "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType.parseEnumFormat", "java.lang.IllegalArgumentException.<init>"], "call_func_parameter": [["org.joda.time.LocalDate", "org.joda.time.LocalDate", "com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionDateRangeType"], ["com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionDateRangeType"], ["java.lang.String"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType.parseEnumFormat": "Parse DateRange in ReportDefinitionDateRangeType enum format."}]}, {"index": "195", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/DateRangeAndType.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType.fromString", "methodParameterType": "String#", "methodParameterName": "dateRange#", "methodBody": "public static DateRangeAndType fromString(final String dateRange) {\n    Preconditions.checkNotNull(dateRange, \"DateRange cannot be null.\");\n    Preconditions.checkArgument(!dateRange.isEmpty(), \"DateRange cannot be empty.\");\n\n    return dateRange.contains(\",\") ? parseCustomFormat(dateRange) : parseEnumFormat(dateRange);\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#Modifier#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#PrefixExpression#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#ConditionalExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ReturnStatement(ConditionalExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ConditionalExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Factory method to create a DateRange instance.", "call_func_name": ["com.google.api.client.util.Preconditions.checkNotNull", "java.lang.String.isEmpty", "com.google.api.client.util.Preconditions.checkArgument", "java.lang.String.contains", "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType.parseCustomFormat", "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType.parseEnumFormat"], "call_func_parameter": [["java.lang.Object", "java.lang.Object"], [""], ["boolean", "java.lang.Object"], ["java.lang.CharSequence"], ["java.lang.String"], ["java.lang.String"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType.parseCustomFormat": "Parse DateRange in \"yyyyMMdd,yyyyMMdd\" format."}, {"com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType.parseEnumFormat": "Parse DateRange in ReportDefinitionDateRangeType enum string."}]}, {"index": "196", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/DateRangeAndType.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType.parseCustomFormat", "methodParameterType": "String#", "methodParameterName": "dateRange#", "methodBody": "private static DateRangeAndType parseCustomFormat(final String dateRange) {\n    String[] dates = dateRange.split(\",\");\n    Preconditions.checkArgument(dates.length == 2, \"Unknown DateRange format: '%s.'\", dateRange);\n\n    // Just throws exception if argument is not in proper format \"yyyyMMdd\"\n    LocalDate startDate = DATE_FORMMATER.parseLocalDate(dates[0].trim());\n    LocalDate endDate = DATE_FORMMATER.parseLocalDate(dates[1].trim());\n\n    return new DateRangeAndType(startDate, endDate, ReportDefinitionDateRangeType.CUSTOM_DATE);\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#Modifier#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#Dimension#ArrayType#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#NumberLiteral#InfixExpression#StringLiteral#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#NumberLiteral#ArrayAccess#SimpleName#MethodInvocation#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#NumberLiteral#ArrayAccess#SimpleName#MethodInvocation#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#ClassInstanceCreation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName)SimpleName)SimpleType(Dimension)Dimension)ArrayType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(NumberLiteral)NumberLiteral)InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(ArrayAccess(SimpleName)SimpleName(NumberLiteral)NumberLiteral)ArrayAccess(SimpleName)SimpleName)MethodInvocation)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(ArrayAccess(SimpleName)SimpleName(NumberLiteral)NumberLiteral)ArrayAccess(SimpleName)SimpleName)MethodInvocation)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)ClassInstanceCreation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Parse DateRange in \"yyyyMMdd,yyyyMMdd\" format.", "call_func_name": ["java.lang.String.split", "com.google.api.client.util.Preconditions.checkArgument", "java.lang.String.trim", "org.joda.time.format.DateTimeFormatter.parseLocalDate", "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType.<init>"], "call_func_parameter": [["java.lang.String"], ["boolean", "java.lang.String", "java.lang.Object[]"], [""], ["java.lang.String"], ["org.joda.time.LocalDate", "org.joda.time.LocalDate", "com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionDateRangeType"]], "passed_comments": "/"}, {"index": "197", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/DateRangeAndType.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType.parseEnumFormat", "methodParameterType": "ReportDefinitionDateRangeType#", "methodParameterName": "type#", "methodBody": "private static DateRangeAndType parseEnumFormat(ReportDefinitionDateRangeType type) {\n    LocalDate today = LocalDate.now();\n    LocalDate startDate;\n    LocalDate endDate;\n    switch (type) {\n      case TODAY:\n        startDate = endDate = today;\n        break;\n      case YESTERDAY:\n        startDate = endDate = today.minusDays(1);\n        break;\n      case LAST_7_DAYS:\n        startDate = today.minusDays(7);\n        endDate = today.minusDays(1);\n        break;\n      case LAST_WEEK:\n        LocalDate.Property lastWeekProp = today.minusWeeks(1).dayOfWeek();\n        startDate = lastWeekProp.withMinimumValue();\n        endDate = lastWeekProp.withMaximumValue();\n        break;\n      case THIS_MONTH:\n        LocalDate.Property thisMonthProp = today.dayOfMonth();\n        startDate = thisMonthProp.withMinimumValue();\n        endDate = thisMonthProp.withMaximumValue();\n        break;\n      case LAST_MONTH:\n        LocalDate.Property lastMonthProp = today.minusMonths(1).dayOfMonth();\n        startDate = lastMonthProp.withMinimumValue();\n        endDate = lastMonthProp.withMaximumValue();\n        break;\n      case LAST_14_DAYS:\n        startDate = today.minusDays(14);\n        endDate = today.minusDays(1);\n        break;\n      case LAST_30_DAYS:\n        startDate = today.minusDays(30);\n        endDate = today.minusDays(1);\n        break;\n      case THIS_WEEK_SUN_TODAY:\n        // Joda-Time uses the ISO standard Monday to Sunday week.\n        startDate = today.minusWeeks(1).dayOfWeek().withMaximumValue();\n        endDate = today;\n        break;\n      case THIS_WEEK_MON_TODAY:\n        startDate = today.dayOfWeek().withMinimumValue();\n        endDate = today;\n        break;\n      case LAST_WEEK_SUN_SAT:\n        startDate = today.minusWeeks(2).dayOfWeek().withMaximumValue();\n        endDate = today.minusWeeks(1).dayOfWeek().withMaximumValue().minusDays(1);\n        break;\n        // Don't support the following enums\n      case LAST_BUSINESS_WEEK:\n      case ALL_TIME:\n      case CUSTOM_DATE:\n      default:\n        throw new IllegalArgumentException(\"Unsupported DateRange type: \" + type.value());\n    }\n\n    return new DateRangeAndType(startDate, endDate, type);\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SwitchCase#SimpleName#SimpleName#SimpleName#Assignment#Assignment#ExpressionStatement#BreakStatement#SimpleName#SwitchCase#SimpleName#SimpleName#SimpleName#SimpleName#NumberLiteral#MethodInvocation#Assignment#Assignment#ExpressionStatement#BreakStatement#SimpleName#SwitchCase#SimpleName#SimpleName#SimpleName#NumberLiteral#MethodInvocation#Assignment#ExpressionStatement#SimpleName#SimpleName#SimpleName#NumberLiteral#MethodInvocation#Assignment#ExpressionStatement#BreakStatement#SimpleName#SwitchCase#SimpleName#SimpleName#QualifiedName#SimpleType#SimpleName#SimpleName#SimpleName#NumberLiteral#MethodInvocation#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#BreakStatement#SimpleName#SwitchCase#SimpleName#SimpleName#QualifiedName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#BreakStatement#SimpleName#SwitchCase#SimpleName#SimpleName#QualifiedName#SimpleType#SimpleName#SimpleName#SimpleName#NumberLiteral#MethodInvocation#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#BreakStatement#SimpleName#SwitchCase#SimpleName#SimpleName#SimpleName#NumberLiteral#MethodInvocation#Assignment#ExpressionStatement#SimpleName#SimpleName#SimpleName#NumberLiteral#MethodInvocation#Assignment#ExpressionStatement#BreakStatement#SimpleName#SwitchCase#SimpleName#SimpleName#SimpleName#NumberLiteral#MethodInvocation#Assignment#ExpressionStatement#SimpleName#SimpleName#SimpleName#NumberLiteral#MethodInvocation#Assignment#ExpressionStatement#BreakStatement#SimpleName#SwitchCase#SimpleName#SimpleName#SimpleName#NumberLiteral#MethodInvocation#SimpleName#MethodInvocation#SimpleName#MethodInvocation#Assignment#ExpressionStatement#SimpleName#SimpleName#Assignment#ExpressionStatement#BreakStatement#SimpleName#SwitchCase#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#Assignment#ExpressionStatement#SimpleName#SimpleName#Assignment#ExpressionStatement#BreakStatement#SimpleName#SwitchCase#SimpleName#SimpleName#SimpleName#NumberLiteral#MethodInvocation#SimpleName#MethodInvocation#SimpleName#MethodInvocation#Assignment#ExpressionStatement#SimpleName#SimpleName#SimpleName#NumberLiteral#MethodInvocation#SimpleName#MethodInvocation#SimpleName#MethodInvocation#SimpleName#NumberLiteral#MethodInvocation#Assignment#ExpressionStatement#BreakStatement#SimpleName#SwitchCase#SimpleName#SwitchCase#SimpleName#SwitchCase#SwitchCase#SimpleName#SimpleType#StringLiteral#SimpleName#SimpleName#MethodInvocation#InfixExpression#ClassInstanceCreation#ThrowStatement#SwitchStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#ClassInstanceCreation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName)VariableDeclarationFragment)VariableDeclarationStatement(SwitchStatement(SimpleName)SimpleName(SwitchCase(SimpleName)SimpleName)SwitchCase(ExpressionStatement(Assignment(SimpleName)SimpleName(Assignment(SimpleName)SimpleName(SimpleName)SimpleName)Assignment)Assignment)ExpressionStatement(BreakStatement)BreakStatement(SwitchCase(SimpleName)SimpleName)SwitchCase(ExpressionStatement(Assignment(SimpleName)SimpleName(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation)Assignment)Assignment)ExpressionStatement(BreakStatement)BreakStatement(SwitchCase(SimpleName)SimpleName)SwitchCase(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation)Assignment)ExpressionStatement(BreakStatement)BreakStatement(SwitchCase(SimpleName)SimpleName)SwitchCase(VariableDeclarationStatement(SimpleType(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement(BreakStatement)BreakStatement(SwitchCase(SimpleName)SimpleName)SwitchCase(VariableDeclarationStatement(SimpleType(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement(BreakStatement)BreakStatement(SwitchCase(SimpleName)SimpleName)SwitchCase(VariableDeclarationStatement(SimpleType(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement(BreakStatement)BreakStatement(SwitchCase(SimpleName)SimpleName)SwitchCase(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation)Assignment)ExpressionStatement(BreakStatement)BreakStatement(SwitchCase(SimpleName)SimpleName)SwitchCase(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation)Assignment)ExpressionStatement(BreakStatement)BreakStatement(SwitchCase(SimpleName)SimpleName)SwitchCase(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(SimpleName)SimpleName)Assignment)ExpressionStatement(BreakStatement)BreakStatement(SwitchCase(SimpleName)SimpleName)SwitchCase(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(SimpleName)SimpleName)Assignment)ExpressionStatement(BreakStatement)BreakStatement(SwitchCase(SimpleName)SimpleName)SwitchCase(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation)Assignment)ExpressionStatement(BreakStatement)BreakStatement(SwitchCase(SimpleName)SimpleName)SwitchCase(SwitchCase(SimpleName)SimpleName)SwitchCase(SwitchCase(SimpleName)SimpleName)SwitchCase(SwitchCase)SwitchCase(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(InfixExpression(StringLiteral)StringLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression)ClassInstanceCreation)ThrowStatement)SwitchStatement(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)ClassInstanceCreation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Parse DateRange in ReportDefinitionDateRangeType enum format.", "call_func_name": ["org.joda.time.LocalDate.now", "com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionDateRangeType.ordinal", "org.joda.time.LocalDate.minusDays", "org.joda.time.LocalDate.minusWeeks", "org.joda.time.LocalDate.dayOfWeek", "org.joda.time.LocalDate.dayOfMonth", "org.joda.time.LocalDate.minusMonths", "java.lang.StringBuilder.<init>", "java.lang.StringBuilder.append", "com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionDateRangeType.value", "java.lang.StringBuilder.toString", "java.lang.IllegalArgumentException.<init>", "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType.<init>"], "call_func_parameter": [[""], [""], ["int"], ["int"], [""], [""], ["int"], [""], ["java.lang.String"], [""], [""], ["java.lang.String"], ["org.joda.time.LocalDate", "org.joda.time.LocalDate", "com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionDateRangeType"]], "passed_comments": "/"}, {"index": "198", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/DateRangeAndType.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType.parseEnumFormat", "methodParameterType": "String#", "methodParameterName": "dateRange#", "methodBody": "private static DateRangeAndType parseEnumFormat(final String dateRange) {\n    try {\n      ReportDefinitionDateRangeType type = ReportDefinitionDateRangeType.valueOf(dateRange);\n      return parseEnumFormat(type);\n    } catch (IllegalArgumentException e) {\n      throw new IllegalArgumentException(\"Unknown DateRange type: \" + dateRange);\n    }\n  }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#Modifier#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#StringLiteral#SimpleName#InfixExpression#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(InfixExpression(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement)Block)MethodDeclaration", "methodDoc": "Parse DateRange in ReportDefinitionDateRangeType enum string.", "call_func_name": ["com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionDateRangeType.valueOf", "com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType.parseEnumFormat", "java.lang.StringBuilder.<init>", "java.lang.StringBuilder.append", "java.lang.StringBuilder.toString", "java.lang.IllegalArgumentException.<init>"], "call_func_parameter": [["java.lang.String"], ["com.google.api.ads.adwords.lib.jaxb.v201809.ReportDefinitionDateRangeType"], [""], ["java.lang.String"], [""], ["java.lang.String"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.entities.DateRangeAndType.parseEnumFormat": "Parse DateRange in ReportDefinitionDateRangeType enum format."}]}, {"index": "199", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/ShoppingPerformanceReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.ShoppingPerformanceReport.ShoppingPerformanceReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public ShoppingPerformanceReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "200", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/BidGoalPerformanceReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.BidGoalPerformanceReport.BidGoalPerformanceReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public BidGoalPerformanceReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "201", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/LabelReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.LabelReport.LabelReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public LabelReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "202", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/CampaignNegativeKeywordsPerformanceReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.CampaignNegativeKeywordsPerformanceReport.CampaignNegativeKeywordsPerformanceReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public CampaignNegativeKeywordsPerformanceReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "203", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/CampaignNegativePlacementsPerformanceReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.CampaignNegativePlacementsPerformanceReport.CampaignNegativePlacementsPerformanceReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public CampaignNegativePlacementsPerformanceReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "204", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/SharedSetReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.SharedSetReport.SharedSetReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public SharedSetReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "205", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/GeoPerformanceReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.GeoPerformanceReport.GeoPerformanceReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public GeoPerformanceReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "206", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/CampaignLocationTargetReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.CampaignLocationTargetReport.CampaignLocationTargetReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public CampaignLocationTargetReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "207", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/TopContentPerformanceReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.TopContentPerformanceReport.TopContentPerformanceReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public TopContentPerformanceReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "208", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/CampaignCriteriaReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.CampaignCriteriaReport.CampaignCriteriaReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public CampaignCriteriaReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "209", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/SharedSetCriteriaReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.SharedSetCriteriaReport.SharedSetCriteriaReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public SharedSetCriteriaReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "210", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/ParentalStatusPerformanceReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.ParentalStatusPerformanceReport.ParentalStatusPerformanceReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public ParentalStatusPerformanceReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "211", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/GenderPerformanceReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.GenderPerformanceReport.GenderPerformanceReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public GenderPerformanceReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "212", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/MarketplacePerformanceReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.MarketplacePerformanceReport.MarketplacePerformanceReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public MarketplacePerformanceReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "213", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/BudgetPerformanceReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.BudgetPerformanceReport.BudgetPerformanceReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public BudgetPerformanceReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "214", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/Report.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.Report.Report", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public Report() {\n    timestamp = new DateTime().toDate();\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Constructor to satisfy Hibernate.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "215", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/Report.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.Report.Report", "methodParameterType": "Long#Long#", "methodParameterName": "topCustomerId#customerId#", "methodBody": "public Report(Long topCustomerId, Long customerId) {\n    this.topCustomerId = topCustomerId;\n    this.customerId = customerId;\n    timestamp = new DateTime().toDate();\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Constructor for Report base class.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "216", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/Report.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.Report.setRowId", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public abstract void setRowId();", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName)MethodDeclaration", "methodDoc": "Sets the primary key for each Report record.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "217", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/CampaignNegativeLocationsReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.CampaignNegativeLocationsReport.CampaignNegativeLocationsReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public CampaignNegativeLocationsReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "218", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/CriteriaPerformanceReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.CriteriaPerformanceReport.CriteriaPerformanceReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public CriteriaPerformanceReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "219", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/PlaceholderFeedItemReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.PlaceholderFeedItemReport.PlaceholderFeedItemReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public PlaceholderFeedItemReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "220", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/FinalUrlReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.FinalUrlReport.FinalUrlReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public FinalUrlReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "221", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/DisplayKeywordPerformanceReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.DisplayKeywordPerformanceReport.DisplayKeywordPerformanceReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public DisplayKeywordPerformanceReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "222", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/CampaignAdScheduleTargetReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.CampaignAdScheduleTargetReport.CampaignAdScheduleTargetReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public CampaignAdScheduleTargetReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "223", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/ProductPartitionReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.ProductPartitionReport.ProductPartitionReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public ProductPartitionReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "224", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/DateReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.DateReport.DateReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "DateReport() {}", "AST": "Javadoc#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Constructor to satisfy Hibernate.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "225", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/DateReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.DateReport.DateReport", "methodParameterType": "Long#Long#", "methodParameterName": "topAccountId#accountId#", "methodBody": "public DateReport(Long topAccountId, Long accountId){\n    super(topAccountId, accountId);\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SuperConstructorInvocation#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(SuperConstructorInvocation(SimpleName)SimpleName(SimpleName)SimpleName)SuperConstructorInvocation)Block)MethodDeclaration", "methodDoc": "Constructor for DateReport class.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "226", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/DateReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.DateReport.getDateLabel", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public String getDateLabel() {\n    // Time Segments\n    if (getDate() != null) {\n      return getDate();\n    }\n    if (getDayOfWeek() != null) {\n      return getDayOfWeek();\n    }\n    if (getHourOfDay() != null) {\n      return String.valueOf(getHourOfDay());\n    }\n    // Week may partially overlap with Month / Quarter / Year.\n    List<String> labelComponents = Lists.newLinkedList();\n    if (getWeek() != null) {\n      labelComponents.add(getWeek());\n    }\n    if (getMonthOfYear() != null) {\n      labelComponents.add(getMonthOfYear());\n    } else if (getMonth() != null) {\n      labelComponents.add(getMonth());\n    } else if (getQuarter() != null) {\n      labelComponents.add(getQuarter());\n    } else if (getYear() != null) {\n      labelComponents.add(getYear().toString());\n    }\n    if (!labelComponents.isEmpty()) {\n      return Joiner.on(\"-\").join(labelComponents);\n    }\n\n    Preconditions.checkState(startDate != null, \"startDate should not be null.\");\n    Preconditions.checkState(endDate != null, \"endDate should not be null.\");\n    return startDate + \"-\" + endDate;\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#MethodInvocation#NullLiteral#InfixExpression#SimpleName#MethodInvocation#ReturnStatement#Block#IfStatement#SimpleName#MethodInvocation#NullLiteral#InfixExpression#SimpleName#MethodInvocation#ReturnStatement#Block#IfStatement#SimpleName#MethodInvocation#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ReturnStatement#Block#IfStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#MethodInvocation#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#SimpleName#MethodInvocation#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#SimpleName#MethodInvocation#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#SimpleName#MethodInvocation#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#IfStatement#IfStatement#IfStatement#IfStatement#SimpleName#SimpleName#MethodInvocation#PrefixExpression#SimpleName#SimpleName#StringLiteral#MethodInvocation#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#IfStatement#SimpleName#SimpleName#SimpleName#NullLiteral#InfixExpression#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#NullLiteral#InfixExpression#StringLiteral#MethodInvocation#ExpressionStatement#SimpleName#StringLiteral#SimpleName#InfixExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(IfStatement(InfixExpression(MethodInvocation(SimpleName)SimpleName)MethodInvocation(NullLiteral)NullLiteral)InfixExpression(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)IfStatement(IfStatement(InfixExpression(MethodInvocation(SimpleName)SimpleName)MethodInvocation(NullLiteral)NullLiteral)InfixExpression(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)IfStatement(IfStatement(InfixExpression(MethodInvocation(SimpleName)SimpleName)MethodInvocation(NullLiteral)NullLiteral)InfixExpression(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ReturnStatement)Block)IfStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(MethodInvocation(SimpleName)SimpleName)MethodInvocation(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block)IfStatement(IfStatement(InfixExpression(MethodInvocation(SimpleName)SimpleName)MethodInvocation(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block(IfStatement(InfixExpression(MethodInvocation(SimpleName)SimpleName)MethodInvocation(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block(IfStatement(InfixExpression(MethodInvocation(SimpleName)SimpleName)MethodInvocation(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block(IfStatement(InfixExpression(MethodInvocation(SimpleName)SimpleName)MethodInvocation(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block)IfStatement)IfStatement)IfStatement)IfStatement(IfStatement(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression(Block(ReturnStatement(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)IfStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ReturnStatement(InfixExpression(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName)InfixExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Returns the date as a String for use in the rowId.", "call_func_name": ["com.google.api.ads.adwords.awreporting.model.entities.DateReport.getDate", "com.google.api.ads.adwords.awreporting.model.entities.DateReport.getDayOfWeek", "com.google.api.ads.adwords.awreporting.model.entities.DateReport.getHourOfDay", "java.lang.String.valueOf", "com.google.common.collect.Lists.newLinkedList", "com.google.api.ads.adwords.awreporting.model.entities.DateReport.getWeek", "java.util.List.add", "com.google.api.ads.adwords.awreporting.model.entities.DateReport.getMonthOfYear", "com.google.api.ads.adwords.awreporting.model.entities.DateReport.getMonth", "com.google.api.ads.adwords.awreporting.model.entities.DateReport.getQuarter", "com.google.api.ads.adwords.awreporting.model.entities.DateReport.getYear", "java.lang.Long.toString", "java.util.List.isEmpty", "com.google.common.base.Joiner.on", "com.google.common.base.Joiner.join", "com.google.common.base.Preconditions.checkState", "java.lang.StringBuilder.<init>", "java.lang.StringBuilder.append", "java.lang.StringBuilder.toString"], "call_func_parameter": [[""], [""], [""], ["java.lang.Object"], [""], [""], ["java.lang.Object"], [""], [""], [""], [""], [""], [""], ["java.lang.String"], ["java.lang.Iterable"], ["boolean", "java.lang.Object"], [""], ["java.lang.String"], [""]], "passed_comments": "/"}, {"index": "227", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/LandingPageReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.LandingPageReport.LandingPageReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public LandingPageReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "228", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/AuthToken.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.AuthToken.AuthToken", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "AuthToken() {}", "AST": "Javadoc#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Constructor to satisfy Hibernate.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "229", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/AuthToken.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.AuthToken.AuthToken", "methodParameterType": "String#String#String#String#", "methodParameterName": "topManagerAccountId#topManagerAccountName#authToken#scope#", "methodBody": "public AuthToken(String topManagerAccountId, String topManagerAccountName, String authToken,\n      String scope) {\n    this.topManagerAccountId = topManagerAccountId;\n    this.topManagerAccountName = topManagerAccountName;\n    this.authToken = authToken;\n    this.scope = scope;\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Constructor for AuthToken class.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "230", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/VideoPerformanceReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.VideoPerformanceReport.VideoPerformanceReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public VideoPerformanceReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "231", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/AgeRangePerformanceReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.AgeRangePerformanceReport.AgeRangePerformanceReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public AgeRangePerformanceReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "232", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/KeywordlessQueryReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.KeywordlessQueryReport.KeywordlessQueryReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public KeywordlessQueryReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "233", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/SearchQueryPerformanceReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.SearchQueryPerformanceReport.SearchQueryPerformanceReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public SearchQueryPerformanceReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "234", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/CampaignSharedSetReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.CampaignSharedSetReport.CampaignSharedSetReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public CampaignSharedSetReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "235", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/KeywordsPerformanceReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.KeywordsPerformanceReport.KeywordsPerformanceReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public KeywordsPerformanceReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "236", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/UserAdDistanceReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.UserAdDistanceReport.UserAdDistanceReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public UserAdDistanceReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "237", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/DisplayTopicsPerformanceReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.DisplayTopicsPerformanceReport.DisplayTopicsPerformanceReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public DisplayTopicsPerformanceReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "238", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/CreativeConversionReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.CreativeConversionReport.CreativeConversionReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public CreativeConversionReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "239", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/AutomaticPlacementsPerformanceReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.AutomaticPlacementsPerformanceReport.AutomaticPlacementsPerformanceReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public AutomaticPlacementsPerformanceReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "240", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/PaidOrganicQueryReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.PaidOrganicQueryReport.PaidOrganicQueryReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public PaidOrganicQueryReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "241", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/CampaignGroupPerformanceReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.CampaignGroupPerformanceReport.CampaignGroupPerformanceReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public CampaignGroupPerformanceReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "242", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/AdCustomizersFeedItemReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.AdCustomizersFeedItemReport.AdCustomizersFeedItemReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public AdCustomizersFeedItemReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "243", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/PlacementPerformanceReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.PlacementPerformanceReport.PlacementPerformanceReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public PlacementPerformanceReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "244", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/entities/UrlPerformanceReport.java", "methodName": "com.google.api.ads.adwords.awreporting.model.entities.UrlPerformanceReport.UrlPerformanceReport", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public UrlPerformanceReport() {\n  }", "AST": "Javadoc#Modifier#SimpleName#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block)Block)MethodDeclaration", "methodDoc": "Hibernate needs an empty constructor", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "245", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/persistence/mongodb/MongoEntityPersister.java", "methodName": "com.google.api.ads.adwords.awreporting.model.persistence.mongodb.MongoEntityPersister.MongoEntityPersister", "methodParameterType": "String#String#", "methodParameterName": "mongoConnectionUrl#mongoDataBaseName#", "methodBody": "public MongoEntityPersister(String mongoConnectionUrl, String mongoDataBaseName)\n      throws UnknownHostException, MongoException {\n    mongoClient = new MongoClient(new MongoClientURI(mongoConnectionUrl));\n    db = mongoClient.getDB(mongoDataBaseName);\n  }", "AST": "Javadoc#Modifier#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#ClassInstanceCreation#Assignment#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation)ClassInstanceCreation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Constructor that opens MongoDB client from URL, and retrives specified database.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "246", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/persistence/mongodb/MongoEntity.java", "methodName": "com.google.api.ads.adwords.awreporting.model.persistence.mongodb.MongoEntity.getRowId", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "String getRowId();", "AST": "Javadoc#SimpleName#SimpleType#SimpleName#MethodDeclaration#", "SBT": "(MethodDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)MethodDeclaration", "methodDoc": "Returns the ID to be used in Mongo.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "247", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/persistence/AuthTokenPersister.java", "methodName": "com.google.api.ads.adwords.awreporting.model.persistence.AuthTokenPersister.persistAuthToken", "methodParameterType": "AuthToken#", "methodParameterName": "authToken#", "methodBody": "void persistAuthToken(AuthToken authToken);", "AST": "Javadoc#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#MethodDeclaration#", "SBT": "(MethodDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration)MethodDeclaration", "methodDoc": "Persists the token.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "248", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/persistence/AuthTokenPersister.java", "methodName": "com.google.api.ads.adwords.awreporting.model.persistence.AuthTokenPersister.getAuthToken", "methodParameterType": "String#", "methodParameterName": "topManagerAccountId#", "methodBody": "AuthToken getAuthToken(String topManagerAccountId);", "AST": "Javadoc#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#MethodDeclaration#", "SBT": "(MethodDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration)MethodDeclaration", "methodDoc": "Retrieves the authentication token.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "249", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/persistence/sql/SqlReportEntitiesPersister.java", "methodName": "com.google.api.ads.adwords.awreporting.model.persistence.sql.SqlReportEntitiesPersister.SqlReportEntitiesPersister", "methodParameterType": "SessionFactory#Config#", "methodParameterName": "sessionFactory#config#", "methodBody": "@Autowired\n  public SqlReportEntitiesPersister(SessionFactory sessionFactory, Config config) {\n    this.sessionFactory =\n        Preconditions.checkNotNull(sessionFactory, \"SessionFactory can not be null\");\n    this.config = Preconditions.checkNotNull(config, \"Config can not be null\");\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#Modifier#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#SimpleName#StringLiteral#MethodInvocation#Assignment#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)Assignment)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Constructor.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "250", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/persistence/sql/SqlReportEntitiesPersister.java", "methodName": "com.google.api.ads.adwords.awreporting.model.persistence.sql.SqlReportEntitiesPersister.persistReportEntities", "methodParameterType": "List<? extends Report>#", "methodParameterName": "reportEntities#", "methodBody": "@Override\n  @Transactional\n  @Retryable(\n      value = {LockAcquisitionException.class},\n      maxAttemptsExpression = \"#{ @systemProperties['retryBackoff'] ?: 20}\",\n      backoff =\n          @Backoff(\n              delayExpression = \"#{ @systemProperties['retryDelay'] ?: 100}\",\n              maxDelayExpression = \"#{ @systemProperties['retryMaxDelay'] ?: 50000 }\",\n              multiplierExpression = \"#{ @systemProperties['retryMultiplier'] ?: 1.5}\"))\n  public void persistReportEntities(List<? extends Report> reportEntities) {\n    int batchFlush = 0;\n    Session session = sessionFactory.getCurrentSession();\n    FlushMode previousFlushMode = session.getHibernateFlushMode();\n    session.setHibernateFlushMode(FlushMode.MANUAL);\n\n    try {\n      for (Report report : reportEntities) {\n        report.setRowId();\n\n        session.saveOrUpdate(report);\n        batchFlush++;\n\n        if (batchFlush == config.getBatchSize()) {\n          session.flush();\n          session.clear();\n          batchFlush = 0;\n        }\n      }\n\n      if (batchFlush > 0) {\n        session.flush();\n        session.clear();\n      }\n    } catch (NonUniqueObjectException ex) {\n      // Github issue 268 & 280\n      //   https://github.com/googleads/aw-reporting/issues/268\n      //   https://github.com/googleads/aw-reporting/issues/280\n      //\n      // Currently we allow specifying report definitions which do not include all primary key\n      // fields. This leads to cryptic hibernate errors without providing a reasonable\n      // resolution strategy.\n      //\n      // This fix explains where to find the list of primary key fields, but does not address\n      // the underlying issue of allowing non-unique rows to be downloaded in the first place.\n      //\n      // Ideally we would guarantee uniqueness of rows without the user having to specify the\n      // PK fields.\n      // However, this would be a substantial migration for the AWReporting user base.\n      // Instead, we just log a (hopefully) useful error message.\n      // Also note that the error message assumes that reportEntities was not empty, because\n      // otherwise the exception would not have been thrown.\n      logger.error(\n          \"Duplicate row detected. This is most likely because your report definition does not \"\n              + \"include the primary key fields defined in {}.setRowId(). \"\n              + \"Please add the missing fields and try again.\",\n          reportEntities.get(0).getClass().getName());\n      throw ex;\n    } finally {\n      session.setHibernateFlushMode(previousFlushMode);\n    }\n  }", "AST": "Javadoc#SimpleName#MarkerAnnotation#SimpleName#MarkerAnnotation#SimpleName#SimpleName#SimpleName#SimpleType#TypeLiteral#ArrayInitializer#MemberValuePair#SimpleName#StringLiteral#MemberValuePair#SimpleName#SimpleName#SimpleName#StringLiteral#MemberValuePair#SimpleName#StringLiteral#MemberValuePair#SimpleName#StringLiteral#MemberValuePair#NormalAnnotation#MemberValuePair#NormalAnnotation#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#NumberLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#PostfixExpression#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#InfixExpression#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#NumberLiteral#Assignment#ExpressionStatement#Block#IfStatement#Block#EnhancedForStatement#SimpleName#NumberLiteral#InfixExpression#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#StringLiteral#StringLiteral#StringLiteral#InfixExpression#SimpleName#SimpleName#NumberLiteral#MethodInvocation#SimpleName#MethodInvocation#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#SimpleName#ThrowStatement#Block#CatchClause#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#TryStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(NormalAnnotation(SimpleName)SimpleName(MemberValuePair(SimpleName)SimpleName(ArrayInitializer(TypeLiteral(SimpleType(SimpleName)SimpleName)SimpleType)TypeLiteral)ArrayInitializer)MemberValuePair(MemberValuePair(SimpleName)SimpleName(StringLiteral)StringLiteral)MemberValuePair(MemberValuePair(SimpleName)SimpleName(NormalAnnotation(SimpleName)SimpleName(MemberValuePair(SimpleName)SimpleName(StringLiteral)StringLiteral)MemberValuePair(MemberValuePair(SimpleName)SimpleName(StringLiteral)StringLiteral)MemberValuePair(MemberValuePair(SimpleName)SimpleName(StringLiteral)StringLiteral)MemberValuePair)NormalAnnotation)MemberValuePair)NormalAnnotation(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType(SimpleType(SimpleName)SimpleName)SimpleType)WildcardType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(NumberLiteral)NumberLiteral)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation)ExpressionStatement(TryStatement(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleName)SimpleName(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(PostfixExpression(SimpleName)SimpleName)PostfixExpression)ExpressionStatement(IfStatement(InfixExpression(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(NumberLiteral)NumberLiteral)Assignment)ExpressionStatement)Block)IfStatement)Block)EnhancedForStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NumberLiteral)NumberLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(InfixExpression(StringLiteral)StringLiteral(StringLiteral)StringLiteral(StringLiteral)StringLiteral)InfixExpression(MethodInvocation(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement(ThrowStatement(SimpleName)SimpleName)ThrowStatement)Block)CatchClause(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)TryStatement)Block)MethodDeclaration", "methodDoc": "Persists all the given entities into the DB configured in the  {@code SessionFactory}. Specify the following system properties backoff.delay", "call_func_name": ["org.hibernate.SessionFactory.getCurrentSession", "org.hibernate.Session.getHibernateFlushMode", "org.hibernate.Session.setHibernateFlushMode", "java.util.List.iterator", "java.util.Iterator.hasNext", "java.util.Iterator.next", "com.google.api.ads.adwords.awreporting.model.entities.Report.setRowId", "org.hibernate.Session.saveOrUpdate", "org.hibernate.Session.flush", "org.hibernate.Session.clear", "java.util.List.get", "java.lang.Object.getClass", "java.lang.Class.getName", "org.slf4j.Logger.error"], "call_func_parameter": [[""], [""], ["org.hibernate.FlushMode"], [""], [""], [""], [""], ["java.lang.Object"], [""], [""], ["int"], [""], [""], ["java.lang.String", "java.lang.Object"]], "passed_comments": [{"com.google.api.ads.adwords.awreporting.model.entities.Report.setRowId": "Sets the primary key for each Report record."}]}, {"index": "251", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/persistence/EntityPersister.java", "methodName": "com.google.api.ads.adwords.awreporting.model.persistence.EntityPersister.persistReportEntities", "methodParameterType": "List<? extends Report>#", "methodParameterName": "reportEntities#", "methodBody": "void persistReportEntities(List<? extends Report> reportEntities);", "AST": "Javadoc#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#SingleVariableDeclaration#MethodDeclaration#", "SBT": "(MethodDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType(SimpleType(SimpleName)SimpleName)SimpleType)WildcardType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration)MethodDeclaration", "methodDoc": "Persists the report entities so they can be retrieved later.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "252", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/persistence/EntityPersister.java", "methodName": "com.google.api.ads.adwords.awreporting.model.persistence.EntityPersister.save", "methodParameterType": "T#", "methodParameterName": "entity#", "methodBody": "<T> T save(T entity);", "AST": "Javadoc#SimpleName#TypeParameter#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#MethodDeclaration#", "SBT": "(MethodDeclaration(TypeParameter(SimpleName)SimpleName)TypeParameter(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration)MethodDeclaration", "methodDoc": "Saves and returns the specified non-report entity.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "253", "file": "/root/repos/repos41/aw-reporting/aw-reporting-model/src/main/java/com/google/api/ads/adwords/awreporting/model/persistence/EntityPersister.java", "methodName": "com.google.api.ads.adwords.awreporting.model.persistence.EntityPersister.get", "methodParameterType": "Class<T>#String#V#", "methodParameterName": "classT#key#value#", "methodBody": "<T, V> List<T> get(Class<T> classT, String key, V value);", "AST": "Javadoc#SimpleName#TypeParameter#SimpleName#TypeParameter#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#MethodDeclaration#", "SBT": "(MethodDeclaration(TypeParameter(SimpleName)SimpleName)TypeParameter(TypeParameter(SimpleName)SimpleName)TypeParameter(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration)MethodDeclaration", "methodDoc": "Gets the entities that contains the given value on the given property.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}]