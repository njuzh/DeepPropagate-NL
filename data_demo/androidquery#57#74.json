[{"index": "0", "file": "/root/repos/repos5/androidquery/src/com/androidquery/service/MarketService.java", "methodName": "com.androidquery.service.MarketService.MarketService", "methodParameterType": "Activity#", "methodParameterName": "act#", "methodBody": "public MarketService(Activity act) {\n\t\tthis.act = act;\n\t\tthis.aq = new AQuery(act);\n\t\tthis.handler = new Handler();\n\t\tthis.locale = Locale.getDefault().toString();\n\t\tthis.rateUrl = getMarketUrl();\n\t\tthis.updateUrl = rateUrl;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleType#ClassInstanceCreation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#MethodInvocation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(MethodInvocation(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Instantiates a new MarketService.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "1", "file": "/root/repos/repos5/androidquery/src/com/androidquery/service/MarketService.java", "methodName": "com.androidquery.service.MarketService.rateUrl", "methodParameterType": "String#", "methodParameterName": "url#", "methodBody": "public MarketService rateUrl(String url){\n\t\tthis.rateUrl = url;\n\t\treturn this;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(ThisExpression)ThisExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the destination url of the default rate/review button.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "2", "file": "/root/repos/repos5/androidquery/src/com/androidquery/service/MarketService.java", "methodName": "com.androidquery.service.MarketService.level", "methodParameterType": "int#", "methodParameterName": "level#", "methodBody": "public MarketService level(int level){\n\t\tthis.level = level;\n\t\treturn this;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(ThisExpression)ThisExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the update check granularity level. Default is REVISION. <br> Can be REVISION, MINOR, or MAJOR. <br> App version format: MAJOR.MINOR.REVISION <br> Example: <br> Current app version: 3.1.2 <br> Newest app version: 3.1.4 <br> Update notice will show if level is REVISION, because the revision code is higher. <br> Update notice will NOT show if level is MINOR, because the minor code is equal (or higher).", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "3", "file": "/root/repos/repos5/androidquery/src/com/androidquery/service/MarketService.java", "methodName": "com.androidquery.service.MarketService.updateUrl", "methodParameterType": "String#", "methodParameterName": "url#", "methodBody": "public MarketService updateUrl(String url){\n\t\tthis.updateUrl = url;\n\t\treturn this;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(ThisExpression)ThisExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the destination url of the default update button.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "4", "file": "/root/repos/repos5/androidquery/src/com/androidquery/service/MarketService.java", "methodName": "com.androidquery.service.MarketService.locale", "methodParameterType": "String#", "methodParameterName": "locale#", "methodBody": "public MarketService locale(String locale){\n\t\tthis.locale = locale;\n\t\treturn this;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(ThisExpression)ThisExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Force the update dialog to a specific locale. Example: en_US, ja_JP.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "5", "file": "/root/repos/repos5/androidquery/src/com/androidquery/service/MarketService.java", "methodName": "com.androidquery.service.MarketService.progress", "methodParameterType": "int#", "methodParameterName": "id#", "methodBody": "public MarketService progress(int id){\n\t\tthis.progress = id;\n\t\treturn this;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(ThisExpression)ThisExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Display a progress view during version check.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "6", "file": "/root/repos/repos5/androidquery/src/com/androidquery/service/MarketService.java", "methodName": "com.androidquery.service.MarketService.force", "methodParameterType": "boolean#", "methodParameterName": "force#", "methodBody": "public MarketService force(boolean force){\n\t\tthis.force = force;\n\t\treturn this;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(ThisExpression)ThisExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Force a version check against the AQuery server and show a dialog regardless of versions.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "7", "file": "/root/repos/repos5/androidquery/src/com/androidquery/service/MarketService.java", "methodName": "com.androidquery.service.MarketService.expire", "methodParameterType": "long#", "methodParameterName": "expire#", "methodBody": "public MarketService expire(long expire){\n\t\tthis.expire = expire;\n\t\treturn this;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(ThisExpression)ThisExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "The time duration which last version check expires. Default is 10 hours.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "8", "file": "/root/repos/repos5/androidquery/src/com/androidquery/service/MarketService.java", "methodName": "com.androidquery.service.MarketService.checkVersion", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public void checkVersion(){\n\t\t\n\t\tString url = getQueryUrl();\n\t\t\n\t\tAjaxCallback<JSONObject> cb = new AjaxCallback<JSONObject>();\n\t\tcb.url(url).type(JSONObject.class).handler(handler, \"marketCb\").fileCache(!force).expire(expire);\n\t\t\n\t\taq.progress(progress).ajax(cb);\n\t\t\n\t}", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleType#TypeLiteral#MethodInvocation#SimpleName#SimpleName#StringLiteral#MethodInvocation#SimpleName#SimpleName#PrefixExpression#MethodInvocation#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(TypeLiteral(SimpleType(SimpleName)SimpleName)SimpleType)TypeLiteral)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation(SimpleName)SimpleName(PrefixExpression(SimpleName)SimpleName)PrefixExpression)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Perform a version check.", "call_func_name": ["com.androidquery.service.MarketService.getQueryUrl", "com.androidquery.callback.AjaxCallback.<init>", "com.androidquery.callback.AjaxCallback.url", "com.androidquery.callback.AjaxCallback.type", "com.androidquery.callback.AjaxCallback.handler", "com.androidquery.callback.AjaxCallback.fileCache", "com.androidquery.callback.AjaxCallback.expire", "com.androidquery.AQuery.progress", "com.androidquery.AQuery.ajax"], "call_func_parameter": [[""], [""], ["java.lang.String"], ["java.lang.Class"], ["java.lang.Object", "java.lang.String"], ["boolean"], ["long"], ["int"], ["com.androidquery.callback.AjaxCallback"]], "passed_comments": "/"}, {"index": "9", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AjaxStatus.java", "methodName": "com.androidquery.callback.AjaxStatus.close", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public void close(){\n\t\tAQUtility.close(close);\n\t\tclose = null;\n\t}", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#NullLiteral#Assignment#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(NullLiteral)NullLiteral)Assignment)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Close any opened inputstream associated with the response. Call this method when finish parsing the response of a synchronous call.", "call_func_name": ["com.androidquery.util.AQUtility.close"], "call_func_parameter": [["java.io.Closeable"]], "passed_comments": "/"}, {"index": "10", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AjaxStatus.java", "methodName": "com.androidquery.callback.AjaxStatus.getCode", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public int getCode() {\n\t\treturn code;\n\t}", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(Block(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the http response code. Can be also be NETWORK_ERROR, AUTH_ERROR, or TRANSFORM_ERROR.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "11", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AjaxStatus.java", "methodName": "com.androidquery.callback.AjaxStatus.getMessage", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public String getMessage() {\n\t\treturn message;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the http response message.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "12", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AjaxStatus.java", "methodName": "com.androidquery.callback.AjaxStatus.getRedirect", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public String getRedirect() {\n\t\treturn redirect;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the redirected url. Returns original url if no redirection.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "13", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AjaxStatus.java", "methodName": "com.androidquery.callback.AjaxStatus.getTime", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public Date getTime(){\n\t\treturn time;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the object fetched time. Returns original fetch time when url is file cached.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "14", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AjaxStatus.java", "methodName": "com.androidquery.callback.AjaxStatus.getRefresh", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public boolean getRefresh() {\n\t\treturn refresh;\n\t}", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(Block(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the refresh param.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "15", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AjaxStatus.java", "methodName": "com.androidquery.callback.AjaxStatus.getClient", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public DefaultHttpClient getClient() {\n\t\treturn client;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the http client used to fetch the url. User can access other resources like response headers and cookies. Returns null if object is cached (source is not AjaxStatus.NETWORK).", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "16", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AjaxStatus.java", "methodName": "com.androidquery.callback.AjaxStatus.getDuration", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public long getDuration() {\n\t\treturn duration;\n\t}", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(Block(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the duration of the ajax request in millseconds.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "17", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AjaxStatus.java", "methodName": "com.androidquery.callback.AjaxStatus.getSource", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public int getSource() {\n\t\treturn source;\n\t}", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(Block(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the source type. Can be AjaxStatus.NETWORK, AjaxStatus.DATASTORE, AjaxStatus.FILE, or AjaxStatus.MEMORY.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "18", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AjaxStatus.java", "methodName": "com.androidquery.callback.AjaxStatus.getError", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public String getError() {\n\t\treturn error;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the error response as a string. For http response code that's not 200-299.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "19", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AjaxStatus.java", "methodName": "com.androidquery.callback.AjaxStatus.expired", "methodParameterType": "long#", "methodParameterName": "expire#", "methodBody": "public boolean expired(long expire){\n\t\t\n\t\tlong mod = time.getTime();\n\t\tlong now = System.currentTimeMillis();\t\t\n\t\tlong diff = now - mod;\n\t\t\n\t\tif(diff > expire && getSource() != NETWORK){\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\treturn false;\n\t}", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#PrimitiveType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#PrimitiveType#SimpleName#SimpleName#SimpleName#InfixExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#InfixExpression#SimpleName#MethodInvocation#SimpleName#InfixExpression#InfixExpression#BooleanLiteral#ReturnStatement#Block#IfStatement#BooleanLiteral#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(InfixExpression(SimpleName)SimpleName(SimpleName)SimpleName)InfixExpression)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(InfixExpression(SimpleName)SimpleName(SimpleName)SimpleName)InfixExpression(InfixExpression(MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)InfixExpression)InfixExpression(Block(ReturnStatement(BooleanLiteral)BooleanLiteral)ReturnStatement)Block)IfStatement(ReturnStatement(BooleanLiteral)BooleanLiteral)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Test if the response is expired against current time, given the expire duration in milliseconds. If the ajax source is NETWORK, it's never considered expired.", "call_func_name": ["java.util.Date.getTime", "java.lang.System.currentTimeMillis", "com.androidquery.callback.AjaxStatus.getSource"], "call_func_parameter": [[""], [""], [""]], "passed_comments": [{"com.androidquery.callback.AjaxStatus.getSource": "Gets the source type. Can be AjaxStatus.NETWORK, AjaxStatus.DATASTORE, AjaxStatus.FILE, or AjaxStatus.MEMORY."}]}, {"index": "20", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AjaxStatus.java", "methodName": "com.androidquery.callback.AjaxStatus.getCookies", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public List<Cookie> getCookies(){\n\t\t\n\t\tif(context == null) return Collections.emptyList();\t\t\n\t\tCookieStore store = (CookieStore) context.getAttribute(ClientContext.COOKIE_STORE);\n\t\tif(store == null) return Collections.emptyList();\n\t\t\n\t\treturn store.getCookies();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#MethodInvocation#ReturnStatement#IfStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#CastExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#MethodInvocation#ReturnStatement#IfStatement#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)IfStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation)CastExpression)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Return the cookies set by the server. Return values only when source is not from cache (source == NETWORK), returns empty list otherwise.", "call_func_name": ["java.util.Collections.emptyList", "org.apache.http.protocol.HttpContext.getAttribute", "org.apache.http.client.CookieStore.getCookies"], "call_func_parameter": [[""], ["java.lang.String"], [""]], "passed_comments": "/"}, {"index": "21", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AjaxStatus.java", "methodName": "com.androidquery.callback.AjaxStatus.getHeaders", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public List<Header> getHeaders(){\n\t\t\n\t\tif(headers == null) return Collections.emptyList();\t\t\n\t\treturn Arrays.asList(headers);\n\t\t\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#MethodInvocation#ReturnStatement#IfStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Return the http response headers. Return values only when source is not from cache (source == NETWORK), returns empty list otherwise.", "call_func_name": ["java.util.Collections.emptyList", "java.util.Arrays.asList"], "call_func_parameter": [[""], ["java.lang.Object[]"]], "passed_comments": "/"}, {"index": "22", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.setTimeout", "methodParameterType": "int#", "methodParameterName": "timeout#", "methodBody": "public static void setTimeout(int timeout){\n\t\tNET_TIMEOUT = timeout;\n\t}", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#Assignment#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(SimpleName)SimpleName)Assignment)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Sets the timeout.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "23", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.setAgent", "methodParameterType": "String#", "methodParameterName": "agent#", "methodBody": "public static void setAgent(String agent){\n\t\tAGENT = agent;\n\t}", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#Assignment#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(SimpleName)SimpleName)Assignment)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Sets the agent.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "24", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.setGZip", "methodParameterType": "boolean#", "methodParameterName": "gzip#", "methodBody": "public static void setGZip(boolean gzip){\n\t\tGZIP = gzip;\n\t}", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#Assignment#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(SimpleName)SimpleName)Assignment)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Use gzip.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "25", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.setSimulateError", "methodParameterType": "boolean#", "methodParameterName": "error#", "methodBody": "public static void setSimulateError(boolean error){\n\t    SIMULATE_ERROR = error;\n    }", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#Assignment#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(SimpleName)SimpleName)Assignment)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Set to true to simulate network error.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "26", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.getType", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public Class<T> getType() {\n\t\treturn type;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(Block(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the ajax response type.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "27", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.weakHandler", "methodParameterType": "Object#String#", "methodParameterName": "handler#callback#", "methodBody": "public K weakHandler(Object handler, String callback){\n\t\tthis.whandler = new WeakReference<Object>(handler);\n\t\tthis.callback = callback;\n\t\tthis.handler = null;\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#ClassInstanceCreation#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#NullLiteral#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)ClassInstanceCreation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(NullLiteral)NullLiteral)Assignment)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set a callback handler with a weak reference. Use weak handler if you do not want the ajax callback to hold the handler object from garbage collection. For example, if the handler is an activity, weakHandler should be used since the method shouldn't be invoked if an activity is already dead and garbage collected.", "call_func_name": ["java.lang.ref.WeakReference.<init>", "com.androidquery.callback.AbstractAjaxCallback.self"], "call_func_parameter": [["java.lang.Object"], [""]], "passed_comments": "/"}, {"index": "28", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.handler", "methodParameterType": "Object#String#", "methodParameterName": "handler#callback#", "methodBody": "public K handler(Object handler, String callback){\n\t\tthis.handler = handler;\n\t\tthis.callback = callback;\n\t\tthis.whandler = null;\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#NullLiteral#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(NullLiteral)NullLiteral)Assignment)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set a callback handler. See weakHandler for handler objects, such as Activity, that should not be held from garbaged collected.", "call_func_name": ["com.androidquery.callback.AbstractAjaxCallback.self"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "29", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.url", "methodParameterType": "String#", "methodParameterName": "url#", "methodBody": "public K url(String url){\n\t\tthis.url = url;\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Url.", "call_func_name": ["com.androidquery.callback.AbstractAjaxCallback.self"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "30", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.type", "methodParameterType": "Class<T>#", "methodParameterName": "type#", "methodBody": "public K type(Class<T> type){\n\t\tthis.type = type;\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the desired ajax response type. Type parameter is required otherwise the ajax callback will not occur. Current supported type: JSONObject.class, String.class, byte[].class, Bitmap.class, XmlDom.class", "call_func_name": ["com.androidquery.callback.AbstractAjaxCallback.self"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "31", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.redirect", "methodParameterType": "boolean#", "methodParameterName": "redirect#", "methodBody": "public K redirect(boolean redirect){\n        this.redirect = redirect;\n        return self();\n    }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set if http requests should follow redirect. Default is true.", "call_func_name": ["com.androidquery.callback.AbstractAjaxCallback.self"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "32", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.transformer", "methodParameterType": "Transformer#", "methodParameterName": "transformer#", "methodBody": "public K transformer(Transformer transformer){\n\t\tthis.transformer = transformer;\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the transformer that transform raw data to desired type. If not set, default transformer will be used. Default transformer supports: JSONObject, JSONArray, XmlDom, String, byte[], and Bitmap.", "call_func_name": ["com.androidquery.callback.AbstractAjaxCallback.self"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "33", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.fileCache", "methodParameterType": "boolean#", "methodParameterName": "cache#", "methodBody": "public K fileCache(boolean cache){\n\t\tthis.fileCache = cache;\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set ajax request to be file cached.", "call_func_name": ["com.androidquery.callback.AbstractAjaxCallback.self"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "34", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.memCache", "methodParameterType": "boolean#", "methodParameterName": "cache#", "methodBody": "public K memCache(boolean cache){\n\t\tthis.memCache = cache;\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Indicate ajax request to be memcached. Note: The default ajax handler does not supply a memcache. Subclasses such as BitmapAjaxCallback can provide their own memcache.", "call_func_name": ["com.androidquery.callback.AbstractAjaxCallback.self"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "35", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.refresh", "methodParameterType": "boolean#", "methodParameterName": "refresh#", "methodBody": "public K refresh(boolean refresh){\n\t\tthis.refresh = refresh;\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Indicate the ajax request should ignore memcache and filecache.", "call_func_name": ["com.androidquery.callback.AbstractAjaxCallback.self"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "36", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.uiCallback", "methodParameterType": "boolean#", "methodParameterName": "uiCallback#", "methodBody": "public K uiCallback(boolean uiCallback){\n\t\tthis.uiCallback = uiCallback;\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Indicate the ajax request should use the main ui thread for callback. Default is true.", "call_func_name": ["com.androidquery.callback.AbstractAjaxCallback.self"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "37", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.expire", "methodParameterType": "long#", "methodParameterName": "expire#", "methodBody": "public K expire(long expire){\n\t\tthis.expire = expire;\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "The expire duation for filecache. If a cached copy will be served if a cached file exists within current time minus expire duration.", "call_func_name": ["com.androidquery.callback.AbstractAjaxCallback.self"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "38", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.header", "methodParameterType": "String#String#", "methodParameterName": "name#value#", "methodBody": "public K header(String name, String value){\n\t\tif(headers == null){\n\t\t\theaders = new HashMap<String, String>();\n\t\t}\n\t\theaders.put(name, value);\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#ClassInstanceCreation#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType)ClassInstanceCreation)Assignment)ExpressionStatement)Block)IfStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the header fields for the http request.", "call_func_name": ["java.util.HashMap.<init>", "java.util.Map.put", "com.androidquery.callback.AbstractAjaxCallback.self"], "call_func_parameter": [[""], ["java.lang.Object", "java.lang.Object"], [""]], "passed_comments": "/"}, {"index": "39", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.headers", "methodParameterType": "Map<String,String>#", "methodParameterName": "headers#", "methodBody": "public K headers(Map<String, String> headers){\n        this.headers = (Map<String, String>) headers;\n        return self();\n    }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#CastExpression#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(CastExpression(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)CastExpression)Assignment)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the header fields for the http request.", "call_func_name": ["com.androidquery.callback.AbstractAjaxCallback.self"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "40", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.cookie", "methodParameterType": "String#String#", "methodParameterName": "name#value#", "methodBody": "public K cookie(String name, String value){\n\t\tif(cookies == null){\n\t\t\tcookies = new HashMap<String, String>();\n\t\t}\n\t\tcookies.put(name, value);\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#ClassInstanceCreation#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType)ClassInstanceCreation)Assignment)ExpressionStatement)Block)IfStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the cookies for the http request.", "call_func_name": ["java.util.HashMap.<init>", "java.util.Map.put", "com.androidquery.callback.AbstractAjaxCallback.self"], "call_func_parameter": [[""], ["java.lang.Object", "java.lang.Object"], [""]], "passed_comments": "/"}, {"index": "41", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.cookies", "methodParameterType": "Map<String,String>#", "methodParameterName": "cookies#", "methodBody": "public K cookies(Map<String, String> cookies){\n        this.cookies = (Map<String, String>) cookies;\n        return self();\n    }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#CastExpression#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(CastExpression(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)CastExpression)Assignment)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set cookies for the http request.", "call_func_name": ["com.androidquery.callback.AbstractAjaxCallback.self"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "42", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.encoding", "methodParameterType": "String#", "methodParameterName": "encoding#", "methodBody": "public K encoding(String encoding){\n\t\tthis.encoding = encoding;\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the encoding used to parse the response. Default is UTF-8.", "call_func_name": ["com.androidquery.callback.AbstractAjaxCallback.self"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "43", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.param", "methodParameterType": "String#Object#", "methodParameterName": "name#value#", "methodBody": "public K param(String name, Object value){\n\t\tif(params == null){\n\t\t\tparams = new HashMap<String, Object>();\n\t\t}\n\t\tparams.put(name, value);\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#ClassInstanceCreation#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType)ClassInstanceCreation)Assignment)ExpressionStatement)Block)IfStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set http POST params. If params are set, http POST method will be used.  The UTF-8 encoded value.toString() will be sent with POST.  Header field \"Content-Type: application/x-www-form-urlencoded;charset=UTF-8\" will be added if no Content-Type header field presents.", "call_func_name": ["java.util.HashMap.<init>", "java.util.Map.put", "com.androidquery.callback.AbstractAjaxCallback.self"], "call_func_parameter": [[""], ["java.lang.Object", "java.lang.Object"], [""]], "passed_comments": "/"}, {"index": "44", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.params", "methodParameterType": "Map<String,?>#", "methodParameterName": "params#", "methodBody": "@SuppressWarnings(\"unchecked\")\n\tpublic K params(Map<String, ?> params){\n\t\tthis.params = (Map<String, Object>) params;\n\t\treturn self();\n\t}", "AST": "Javadoc#SimpleName#StringLiteral#SingleMemberAnnotation#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#CastExpression#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(SingleMemberAnnotation(SimpleName)SimpleName(StringLiteral)StringLiteral)SingleMemberAnnotation(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType)WildcardType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(CastExpression(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)CastExpression)Assignment)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the http POST params. See param(String name, Object value).", "call_func_name": ["com.androidquery.callback.AbstractAjaxCallback.self"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "45", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.progress", "methodParameterType": "View#", "methodParameterName": "view#", "methodBody": "public K progress(View view){\n\t\treturn progress((Object) view);\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the progress view (can be a progress bar or any view) to be shown (VISIBLE) and hide (GONE) depends on progress.", "call_func_name": ["com.androidquery.callback.AbstractAjaxCallback.progress"], "call_func_parameter": [["java.lang.Object"]], "passed_comments": "/"}, {"index": "46", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.progress", "methodParameterType": "Dialog#", "methodParameterName": "dialog#", "methodBody": "public K progress(Dialog dialog){\n\t\treturn progress((Object) dialog);\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the dialog to be shown and dismissed depends on progress.", "call_func_name": ["com.androidquery.callback.AbstractAjaxCallback.progress"], "call_func_parameter": [["java.lang.Object"]], "passed_comments": "/"}, {"index": "47", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.block", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public void block(){\n\t\t\n\t\tif(AQUtility.isUIThread()){\n\t\t\tthrow new IllegalStateException(\"Cannot block UI thread.\");\n\t\t}\n\t\t\n\t\tif(completed) return;\n\t\t\n\t\ttry{\n\t\t\tsynchronized(this){\n\t\t\t\tblocked = true;\n\t\t\t\t//wait at most the network timeout plus 5 seconds, this guarantee thread will never be blocked forever\n\t\t\t\tthis.wait(NET_TIMEOUT + 5000);\n\t\t\t}\n\t\t}catch(Exception e){\t\t\t\n\t\t}\n\t\t\n\t}", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleType#StringLiteral#ClassInstanceCreation#ThrowStatement#Block#IfStatement#SimpleName#ReturnStatement#IfStatement#ThisExpression#SimpleName#BooleanLiteral#Assignment#ExpressionStatement#ThisExpression#SimpleName#SimpleName#NumberLiteral#InfixExpression#MethodInvocation#ExpressionStatement#Block#SynchronizedStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#Block#CatchClause#TryStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(Block(IfStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(StringLiteral)StringLiteral)ClassInstanceCreation)ThrowStatement)Block)IfStatement(IfStatement(SimpleName)SimpleName(ReturnStatement)ReturnStatement)IfStatement(TryStatement(Block(SynchronizedStatement(ThisExpression)ThisExpression(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral)Assignment)ExpressionStatement(ExpressionStatement(MethodInvocation(ThisExpression)ThisExpression(SimpleName)SimpleName(InfixExpression(SimpleName)SimpleName(NumberLiteral)NumberLiteral)InfixExpression)MethodInvocation)ExpressionStatement)Block)SynchronizedStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block)Block)CatchClause)TryStatement)Block)MethodDeclaration", "methodDoc": "Block the current thread until the ajax call is completed. Returns immediately if ajax is already completed. Exception will be thrown if this method is called in main thread.", "call_func_name": ["com.androidquery.util.AQUtility.isUIThread", "java.lang.IllegalStateException.<init>", "java.lang.Object.wait"], "call_func_parameter": [[""], ["java.lang.String"], ["long"]], "passed_comments": "/"}, {"index": "48", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.callback", "methodParameterType": "String#T#AjaxStatus#", "methodParameterName": "url#object#status#", "methodBody": "public void callback(String url, T object, AjaxStatus status){\n\t\t\n\t}", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block)Block)MethodDeclaration", "methodDoc": "The callback method to be overwritten for subclasses.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "49", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.async", "methodParameterType": "Activity#", "methodParameterName": "act#", "methodBody": "public void async(Activity act){\n\t\t\n\t\tif(act.isFinishing()){\n\t\t\tAQUtility.warn(\"Warning\", \"Possible memory leak. Calling ajax with a terminated activity.\");\n\t\t}\n\t\t\n\t\tif(type == null){\n\t\t\tAQUtility.warn(\"Warning\", \"type() is not called with response type.\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tthis.act = new WeakReference<Activity>(act);\n\t\tasync((Context) act);\n\t\t\n\t}", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#StringLiteral#StringLiteral#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#StringLiteral#StringLiteral#MethodInvocation#ExpressionStatement#ReturnStatement#Block#IfStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#ClassInstanceCreation#Assignment#ExpressionStatement#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement)Block)IfStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement(ReturnStatement)ReturnStatement)Block)IfStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)ClassInstanceCreation)Assignment)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Starts the async process.  If activity is passed, the callback method will not be invoked if the activity is no longer in use. Specifically, isFinishing() is called to determine if the activity is active.", "call_func_name": ["android.app.Activity.isFinishing", "com.androidquery.util.AQUtility.warn", "java.lang.ref.WeakReference.<init>", "com.androidquery.callback.AbstractAjaxCallback.async"], "call_func_parameter": [[""], ["java.lang.Object", "java.lang.Object"], ["java.lang.Object"], ["android.content.Context"]], "passed_comments": [{"com.androidquery.callback.AbstractAjaxCallback.async": "Starts the async process."}]}, {"index": "50", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.async", "methodParameterType": "Context#", "methodParameterName": "context#", "methodBody": "public void async(Context context){\n\t\t\n\t\tif(status == null){\n\t\t\tstatus = new AjaxStatus();\n\t\t\tstatus.redirect(url).refresh(refresh);\n\t\t}else if(status.getDone()){\n\t\t\tstatus.reset();\n\t\t\tresult = null;\n\t\t}\n\t\t\n\t\tshowProgress(true);\n\t\t\n\t\tif(ah != null){\n\t\t\t\n\t\t\tif(!ah.authenticated()){\n\t\t\t\tAQUtility.debug(\"auth needed\", url);\n\t\t\t\tah.auth(this);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t\n\t\twork(context);\n\t\n\t}", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#Assignment#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#NullLiteral#Assignment#ExpressionStatement#Block#IfStatement#IfStatement#SimpleName#BooleanLiteral#MethodInvocation#ExpressionStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#MethodInvocation#PrefixExpression#SimpleName#SimpleName#StringLiteral#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#ThisExpression#MethodInvocation#ExpressionStatement#ReturnStatement#Block#IfStatement#Block#IfStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation)Assignment)ExpressionStatement(ExpressionStatement(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block(IfStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(NullLiteral)NullLiteral)Assignment)ExpressionStatement)Block)IfStatement)IfStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral)MethodInvocation)ExpressionStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(IfStatement(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(ThisExpression)ThisExpression)MethodInvocation)ExpressionStatement(ReturnStatement)ReturnStatement)Block)IfStatement)Block)IfStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Starts the async process.", "call_func_name": ["com.androidquery.callback.AjaxStatus.<init>", "com.androidquery.callback.AjaxStatus.redirect", "com.androidquery.callback.AjaxStatus.refresh", "com.androidquery.callback.AjaxStatus.getDone", "com.androidquery.callback.AjaxStatus.reset", "com.androidquery.callback.AbstractAjaxCallback.showProgress", "com.androidquery.auth.AccountHandle.authenticated", "com.androidquery.util.AQUtility.debug", "com.androidquery.auth.AccountHandle.auth", "com.androidquery.callback.AbstractAjaxCallback.work"], "call_func_parameter": [[""], ["java.lang.String"], ["boolean"], [""], [""], ["boolean"], [""], ["java.lang.Object", "java.lang.Object"], ["com.androidquery.callback.AbstractAjaxCallback"], ["android.content.Context"]], "passed_comments": "/"}, {"index": "51", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.run", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "@Override\n\tpublic void run() {\n\t\t\n\t\t\n\t\tif(!status.getDone()){\n\t\t\t\n\t\t\ttry{\t\t\t\n\t\t\t\tbackgroundWork();\t\t\t\n\t\t\t}catch(Throwable e){\n\t\t\t\tAQUtility.debug(e);\n\t\t\t\tstatus.code(AjaxStatus.NETWORK_ERROR).done();\n\t\t\t}\n\t\t\t\n\t\t\tif(!status.getReauth()){\n\t\t\t\t//if doesn't need to reauth\n\t\t\t\tif(uiCallback){\n\t\t\t\t\tAQUtility.post(this);\n\t\t\t\t}else{\n\t\t\t\t\tafterWork();\n\t\t\t\t}\n\t\t\t}\n\t\t}else{\n\t\t\tafterWork();\n\t\t}\n\t\t\t\n\t\t\n\t\t\n\t\t\n\t}", "AST": "Javadoc#SimpleName#MarkerAnnotation#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleName#MethodInvocation#PrefixExpression#SimpleName#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#SimpleName#MethodInvocation#ExpressionStatement#Block#CatchClause#TryStatement#SimpleName#SimpleName#MethodInvocation#PrefixExpression#SimpleName#SimpleName#SimpleName#ThisExpression#MethodInvocation#ExpressionStatement#Block#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#IfStatement#Block#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(Block(IfStatement(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)CatchClause)TryStatement(IfStatement(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression(Block(IfStatement(SimpleName)SimpleName(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(ThisExpression)ThisExpression)MethodInvocation)ExpressionStatement)Block(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)IfStatement)Block(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)MethodDeclaration", "methodDoc": "AQuert internal use. Do not call this method directly.", "call_func_name": ["com.androidquery.callback.AjaxStatus.getDone", "com.androidquery.callback.AbstractAjaxCallback.backgroundWork", "com.androidquery.util.AQUtility.debug", "com.androidquery.callback.AjaxStatus.code", "com.androidquery.callback.AjaxStatus.done", "com.androidquery.callback.AjaxStatus.getReauth", "com.androidquery.util.AQUtility.post", "com.androidquery.callback.AbstractAjaxCallback.afterWork"], "call_func_parameter": [[""], [""], ["java.lang.Throwable"], ["int"], [""], [""], ["java.lang.Runnable"], [""]], "passed_comments": "/"}, {"index": "52", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.getActiveCount", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public static int getActiveCount(){\n\t\t\n\t\tint result = 0;\n\t\t\n\t\tif(fetchExe instanceof ThreadPoolExecutor){\n\t\t\tresult = ((ThreadPoolExecutor) fetchExe).getActiveCount();\n\t\t}\n\t\t\n\t\treturn result;\n\t\t\n\t}", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#PrimitiveType#SimpleName#NumberLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#ParenthesizedExpression#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(Block(VariableDeclarationStatement(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(NumberLiteral)NumberLiteral)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(ParenthesizedExpression(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)ParenthesizedExpression(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block)IfStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Return the number of active ajax threads. Note that this doesn't necessarily correspond to active network connections. Ajax threads might be reading a cached url from file system or transforming the response after a network transfer.", "call_func_name": ["java.util.concurrent.ThreadPoolExecutor.getActiveCount"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "53", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.setNetworkLimit", "methodParameterType": "int#", "methodParameterName": "limit#", "methodBody": "public static void setNetworkLimit(int limit){\n\t\t\n\t\tNETWORK_POOL = Math.max(1, Math.min(25, limit));\n\t\tfetchExe = null;\n\t\t\n\t\tAQUtility.debug(\"setting network limit\", NETWORK_POOL);\n\t}", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#NumberLiteral#SimpleName#SimpleName#NumberLiteral#SimpleName#MethodInvocation#MethodInvocation#Assignment#ExpressionStatement#SimpleName#NullLiteral#Assignment#ExpressionStatement#SimpleName#SimpleName#StringLiteral#SimpleName#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral(SimpleName)SimpleName)MethodInvocation)MethodInvocation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(NullLiteral)NullLiteral)Assignment)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Sets the simultaneous network threads limit. Highest limit is 25.", "call_func_name": ["java.lang.Math.min", "java.lang.Math.max", "java.lang.Integer.valueOf", "com.androidquery.util.AQUtility.debug"], "call_func_parameter": [["int", "int"], ["int", "int"], ["int"], ["java.lang.Object", "java.lang.Object"]], "passed_comments": "/"}, {"index": "54", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.cancel", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public static void cancel(){\n\t\t\n\t\tif(fetchExe != null){\n\t\t\tfetchExe.shutdownNow();\n\t\t\tfetchExe = null;\n\t\t}\n\t\t\n\t\tBitmapAjaxCallback.clearTasks();\n\t}", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#NullLiteral#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(NullLiteral)NullLiteral)Assignment)ExpressionStatement)Block)IfStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Cancel ALL ajax tasks. Warning: Do not call this method unless you are exiting an application.", "call_func_name": ["java.util.concurrent.ExecutorService.shutdownNow", "com.androidquery.callback.BitmapAjaxCallback.clearTasks"], "call_func_parameter": [[""], [""]], "passed_comments": "/"}, {"index": "55", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.setSSF", "methodParameterType": "SocketFactory#", "methodParameterName": "sf#", "methodBody": "public static void setSSF(SocketFactory sf){\n\t\tssf = sf;\n\t\tclient = null;\n\t}", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#Assignment#ExpressionStatement#SimpleName#NullLiteral#Assignment#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(NullLiteral)NullLiteral)Assignment)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Set the secure socket factory. Could be used to work around SSL certificate not truested issue. http://stackoverflow.com/questions/1217141/self-signed-ssl-acceptance-android", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "56", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.auth", "methodParameterType": "Activity#String#String#", "methodParameterName": "act#type#account#", "methodBody": "public K auth(Activity act, String type, String account){\n\t\t\n\t\tif(android.os.Build.VERSION.SDK_INT >= 5 && type.startsWith(\"g.\")){\t\t\n\t\t\tah = new GoogleHandle(act, type, account);\n\t\t}\n\t\t\n\t\treturn self();\n\t\t\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#QualifiedName#SimpleName#QualifiedName#SimpleName#QualifiedName#SimpleName#QualifiedName#NumberLiteral#InfixExpression#SimpleName#SimpleName#StringLiteral#MethodInvocation#InfixExpression#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#ClassInstanceCreation#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(InfixExpression(QualifiedName(QualifiedName(QualifiedName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)QualifiedName(NumberLiteral)NumberLiteral)InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)InfixExpression(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)ClassInstanceCreation)Assignment)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the authentication type of this request. This method requires API 5+.", "call_func_name": ["java.lang.String.startsWith", "com.androidquery.auth.GoogleHandle.<init>", "com.androidquery.callback.AbstractAjaxCallback.self"], "call_func_parameter": [["java.lang.String"], ["android.app.Activity", "java.lang.String", "java.lang.String"], [""]], "passed_comments": "/"}, {"index": "57", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.auth", "methodParameterType": "AccountHandle#", "methodParameterName": "handle#", "methodBody": "public K auth(AccountHandle handle){\t\t\n\t\tah = handle;\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the authentication account handle.", "call_func_name": ["com.androidquery.callback.AbstractAjaxCallback.self"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "58", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.getUrl", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public String getUrl(){\n\t\treturn url;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the url.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "59", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.getHandler", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public Object getHandler() {\n\t\tif(handler != null) return handler;\n\t\tif(whandler == null) return null;\n\t\treturn whandler.get();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#NullLiteral#InfixExpression#SimpleName#ReturnStatement#IfStatement#SimpleName#NullLiteral#InfixExpression#NullLiteral#ReturnStatement#IfStatement#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(ReturnStatement(SimpleName)SimpleName)ReturnStatement)IfStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(ReturnStatement(NullLiteral)NullLiteral)ReturnStatement)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the handler.", "call_func_name": ["java.lang.ref.Reference.get"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "60", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.getCallback", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public String getCallback() {\n\t\treturn callback;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the callback method name.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "61", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.getResult", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public T getResult(){\n\t\treturn result;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the result. Can be null if ajax is not completed or the ajax call failed. This method should only be used after the block() method.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "62", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.getStatus", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public AjaxStatus getStatus(){\n\t\treturn status;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the ajax status. This method should only be used after the block() method.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "63", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.getEncoding", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public String getEncoding(){\n\t\treturn encoding;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the encoding. Default is UTF-8.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "64", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/AbstractAjaxCallback.java", "methodName": "com.androidquery.callback.AbstractAjaxCallback.abort", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public void abort(){\n\t\t\n\t\tabort = true;\n\t\t\n\t\tif(request != null && !request.isAborted()){\n\t\t\trequest.abort();\n\t\t}\n\t\t\n\t}", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#BooleanLiteral#Assignment#ExpressionStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#MethodInvocation#PrefixExpression#InfixExpression#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral)Assignment)ExpressionStatement(IfStatement(InfixExpression(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(PrefixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)PrefixExpression)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)MethodDeclaration", "methodDoc": "Abort the http request that will interrupt the network transfer.  This method currently doesn't work with multi-part post.  If no network transfer is involved (eg. response is file cached), this method has no effect.", "call_func_name": ["org.apache.http.client.methods.HttpUriRequest.isAborted", "org.apache.http.client.methods.HttpUriRequest.abort"], "call_func_parameter": [[""], [""]], "passed_comments": "/"}, {"index": "65", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/BitmapAjaxCallback.java", "methodName": "com.androidquery.callback.BitmapAjaxCallback.BitmapAjaxCallback", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public BitmapAjaxCallback(){\n\t\ttype(Bitmap.class).memCache(true).fileCache(true).url(\"\");\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleName#SimpleName#SimpleType#TypeLiteral#MethodInvocation#SimpleName#BooleanLiteral#MethodInvocation#SimpleName#BooleanLiteral#MethodInvocation#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(Block(ExpressionStatement(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(SimpleName)SimpleName(TypeLiteral(SimpleType(SimpleName)SimpleName)SimpleType)TypeLiteral)MethodInvocation(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral)MethodInvocation(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral)MethodInvocation(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Instantiates a new bitmap ajax callback.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "66", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/BitmapAjaxCallback.java", "methodName": "com.androidquery.callback.BitmapAjaxCallback.imageView", "methodParameterType": "ImageView#", "methodParameterName": "view#", "methodBody": "public BitmapAjaxCallback imageView(ImageView view){\t\t\t\t\n\t\tv = new WeakReference<ImageView>(view);\t\t\n\t\treturn this;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#ClassInstanceCreation#Assignment#ExpressionStatement#ThisExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)ClassInstanceCreation)Assignment)ExpressionStatement(ReturnStatement(ThisExpression)ThisExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the target Image view.", "call_func_name": ["java.lang.ref.WeakReference.<init>"], "call_func_parameter": [["java.lang.Object"]], "passed_comments": "/"}, {"index": "67", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/BitmapAjaxCallback.java", "methodName": "com.androidquery.callback.BitmapAjaxCallback.targetWidth", "methodParameterType": "int#", "methodParameterName": "targetWidth#", "methodBody": "public BitmapAjaxCallback targetWidth(int targetWidth){\n\t\tthis.targetWidth = targetWidth;\n\t\treturn this;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(ThisExpression)ThisExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the target width for downsampling.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "68", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/BitmapAjaxCallback.java", "methodName": "com.androidquery.callback.BitmapAjaxCallback.file", "methodParameterType": "File#", "methodParameterName": "imageFile#", "methodBody": "public BitmapAjaxCallback file(File imageFile){\n\t\tthis.imageFile = imageFile;\n\t\treturn this;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(ThisExpression)ThisExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the image source file.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "69", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/BitmapAjaxCallback.java", "methodName": "com.androidquery.callback.BitmapAjaxCallback.preset", "methodParameterType": "Bitmap#", "methodParameterName": "preset#", "methodBody": "public BitmapAjaxCallback preset(Bitmap preset){\n\t\t\n\t\tthis.preset = preset;\n\t\treturn this;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(ThisExpression)ThisExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the preset bitmap. This bitmap will be shown immediately until the ajax callback returns the final image from the url.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "70", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/BitmapAjaxCallback.java", "methodName": "com.androidquery.callback.BitmapAjaxCallback.bitmap", "methodParameterType": "Bitmap#", "methodParameterName": "bm#", "methodBody": "public BitmapAjaxCallback bitmap(Bitmap bm){\n\t\tthis.bm = bm;\n\t\treturn this;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(ThisExpression)ThisExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the bitmap. This bitmap will be shown immediately with aspect ratio.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "71", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/BitmapAjaxCallback.java", "methodName": "com.androidquery.callback.BitmapAjaxCallback.fallback", "methodParameterType": "int#", "methodParameterName": "resId#", "methodBody": "public BitmapAjaxCallback fallback(int resId){\n\t\tthis.fallback = resId;\n\t\treturn this;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(ThisExpression)ThisExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the fallback image in resource id.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "72", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/BitmapAjaxCallback.java", "methodName": "com.androidquery.callback.BitmapAjaxCallback.animation", "methodParameterType": "int#", "methodParameterName": "animation#", "methodBody": "public BitmapAjaxCallback animation(int animation){\n\t\tthis.animation = animation;\n\t\treturn this;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(ThisExpression)ThisExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the animation resource id, or AQuery.FADE_IN.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "73", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/BitmapAjaxCallback.java", "methodName": "com.androidquery.callback.BitmapAjaxCallback.ratio", "methodParameterType": "float#", "methodParameterName": "ratio#", "methodBody": "public BitmapAjaxCallback ratio(float ratio){\n\t\tthis.ratio = ratio;\n\t\treturn this;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(ThisExpression)ThisExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the image aspect ratio (height / width).", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "74", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/BitmapAjaxCallback.java", "methodName": "com.androidquery.callback.BitmapAjaxCallback.rotate", "methodParameterType": "boolean#", "methodParameterName": "rotate#", "methodBody": "public BitmapAjaxCallback rotate(boolean rotate){\n\t\tthis.rotate = rotate;\n\t\treturn this;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(ThisExpression)ThisExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set auto rotate to respect image Exif orientation.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "75", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/BitmapAjaxCallback.java", "methodName": "com.androidquery.callback.BitmapAjaxCallback.anchor", "methodParameterType": "float#", "methodParameterName": "anchor#", "methodBody": "public BitmapAjaxCallback anchor(float anchor){\n\t\tthis.anchor = anchor;\n\t\n\t\treturn this;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(ThisExpression)ThisExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the image aspect ratio anchor. Value of 1 implies show top end of the image, 0 implies at the center, -1 implies show at the bottom. A special value AQuery.ANCHOR_DYNAMIC will adjust the anchor base.  This setting will add up from 0 to 0.5 bias and it's suitable for portraits and common photos. Default value is ANCHOR_DYNAMIC.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "76", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/BitmapAjaxCallback.java", "methodName": "com.androidquery.callback.BitmapAjaxCallback.round", "methodParameterType": "int#", "methodParameterName": "radius#", "methodBody": "public BitmapAjaxCallback round(int radius){\n\t\tthis.round = radius;\n\t\treturn this;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(ThisExpression)ThisExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the round corner radius. Note that the current implementation transform the image to a new one and will use more transient resources.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "77", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/BitmapAjaxCallback.java", "methodName": "com.androidquery.callback.BitmapAjaxCallback.getResizedImage", "methodParameterType": "String#byte[]#int#boolean#int#boolean#", "methodParameterName": "path#data#target#width#round#rotate#", "methodBody": "public static Bitmap getResizedImage(String path, byte[] data, int target, boolean width, int round, boolean rotate){\n    \t\n\t\tif(path == null && data == null) return null;\n\t\t\n\t\tOptions options = null;\n\t\t\n\t\tif(target > 0){\n\t    \t\n    \t\tOptions info = new Options();\n    \t\tinfo.inJustDecodeBounds = true;\n\t        \n\t    \tdecode(path, data, info, rotate);\n\t        \n\t        int dim = info.outWidth;\n\t        if(!width) dim = Math.max(dim, info.outHeight);\n\t        int ssize = sampleSize(dim, target);\n\t       \n\t        options = new Options();\t        \n\t        options.inSampleSize = ssize;\t        \n    \t\n    \t}\n        \n        Bitmap bm = null;\n        try{\n        \tbm = decode(path, data, options, rotate);\n\t\t}catch(OutOfMemoryError e){\n\t\t\tclearCache();\n\t\t\tAQUtility.report(e);\n\t\t}\n        \n\t\tif(round > 0){\n\t\t\tbm = getRoundedCornerBitmap(bm, round);\n\t\t}\n        \n        return bm;\n    \t\n    }", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#Dimension#ArrayType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#NullLiteral#InfixExpression#InfixExpression#NullLiteral#ReturnStatement#IfStatement#SimpleName#SimpleType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NumberLiteral#InfixExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#QualifiedName#BooleanLiteral#Assignment#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#PrimitiveType#SimpleName#SimpleName#SimpleName#QualifiedName#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#PrefixExpression#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#Assignment#ExpressionStatement#IfStatement#PrimitiveType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#Assignment#ExpressionStatement#SimpleName#SimpleName#QualifiedName#SimpleName#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#SimpleType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#CatchClause#TryStatement#SimpleName#NumberLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ArrayType(PrimitiveType)PrimitiveType(Dimension)Dimension)ArrayType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression)InfixExpression(ReturnStatement(NullLiteral)NullLiteral)ReturnStatement)IfStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NumberLiteral)NumberLiteral)InfixExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(Assignment(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(BooleanLiteral)BooleanLiteral)Assignment)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(PrefixExpression(SimpleName)SimpleName)PrefixExpression(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation)Assignment)ExpressionStatement)IfStatement(VariableDeclarationStatement(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation)Assignment)ExpressionStatement(ExpressionStatement(Assignment(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)Assignment)ExpressionStatement)Block)IfStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(TryStatement(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)CatchClause)TryStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NumberLiteral)NumberLiteral)InfixExpression(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block)IfStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Utility method for downsampling images.", "call_func_name": ["java.lang.Math.max", "com.androidquery.callback.BitmapAjaxCallback.sampleSize", "com.androidquery.callback.BitmapAjaxCallback.clearCache", "com.androidquery.util.AQUtility.report", "com.androidquery.callback.BitmapAjaxCallback.getRoundedCornerBitmap"], "call_func_parameter": [["int", "int"], ["int", "int"], [""], ["java.lang.Throwable"], ["android.graphics.Bitmap", "int"]], "passed_comments": [{"com.androidquery.callback.BitmapAjaxCallback.clearCache": "Clear the bitmap memcache."}]}, {"index": "78", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/BitmapAjaxCallback.java", "methodName": "com.androidquery.callback.BitmapAjaxCallback.setIconCacheLimit", "methodParameterType": "int#", "methodParameterName": "limit#", "methodBody": "public static void setIconCacheLimit(int limit){\n\t\tSMALL_MAX = limit;\n\t\tclearCache();\n\t}", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Sets the icon cache size in count. Icons are images less than 50x50 pixels.", "call_func_name": ["com.androidquery.callback.BitmapAjaxCallback.clearCache"], "call_func_parameter": [[""]], "passed_comments": [{"com.androidquery.callback.BitmapAjaxCallback.clearCache": "Clear the bitmap memcache."}]}, {"index": "79", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/BitmapAjaxCallback.java", "methodName": "com.androidquery.callback.BitmapAjaxCallback.setCacheLimit", "methodParameterType": "int#", "methodParameterName": "limit#", "methodBody": "public static void setCacheLimit(int limit){\n\t\tBIG_MAX = limit;\n\t\tclearCache();\n\t}", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Sets the cache limit in count.", "call_func_name": ["com.androidquery.callback.BitmapAjaxCallback.clearCache"], "call_func_parameter": [[""]], "passed_comments": [{"com.androidquery.callback.BitmapAjaxCallback.clearCache": "Clear the bitmap memcache."}]}, {"index": "80", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/BitmapAjaxCallback.java", "methodName": "com.androidquery.callback.BitmapAjaxCallback.setDelayWrite", "methodParameterType": "boolean#", "methodParameterName": "delay#", "methodBody": "public static void setDelayWrite(boolean delay){\n\t\tDELAY_WRITE = delay;\n\t}", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#Assignment#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(SimpleName)SimpleName)Assignment)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Sets the file cache write policy. If set to true, images load from network will be served quicker before caching to disk, this however increase the chance of out of memory due to memory allocation. Default is false.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "81", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/BitmapAjaxCallback.java", "methodName": "com.androidquery.callback.BitmapAjaxCallback.setPixelLimit", "methodParameterType": "int#", "methodParameterName": "pixels#", "methodBody": "public static void setPixelLimit(int pixels){\n\t\tBIG_PIXELS = pixels;\n\t\tclearCache();\n\t}", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Sets the pixel limit per image. Image larger than limit will not be memcached.", "call_func_name": ["com.androidquery.callback.BitmapAjaxCallback.clearCache"], "call_func_parameter": [[""]], "passed_comments": [{"com.androidquery.callback.BitmapAjaxCallback.clearCache": "Clear the bitmap memcache."}]}, {"index": "82", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/BitmapAjaxCallback.java", "methodName": "com.androidquery.callback.BitmapAjaxCallback.setSmallPixel", "methodParameterType": "int#", "methodParameterName": "pixels#", "methodBody": "public static void setSmallPixel(int pixels){\n\t\tSMALL_PIXELS = pixels;\n\t\tclearCache();\n\t}", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Sets the pixel criteria for small images. Small images are cached in a separate cache. Default is 50x50 (2500 pixels)", "call_func_name": ["com.androidquery.callback.BitmapAjaxCallback.clearCache"], "call_func_parameter": [[""]], "passed_comments": [{"com.androidquery.callback.BitmapAjaxCallback.clearCache": "Clear the bitmap memcache."}]}, {"index": "83", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/BitmapAjaxCallback.java", "methodName": "com.androidquery.callback.BitmapAjaxCallback.setMaxPixelLimit", "methodParameterType": "int#", "methodParameterName": "pixels#", "methodBody": "public static void setMaxPixelLimit(int pixels){\n\t\tBIG_TPIXELS = pixels;\n\t\tclearCache();\n\t}", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Sets the max pixel limit for the entire memcache. LRU images will be expunged if max pixels limit is reached.", "call_func_name": ["com.androidquery.callback.BitmapAjaxCallback.clearCache"], "call_func_parameter": [[""]], "passed_comments": [{"com.androidquery.callback.BitmapAjaxCallback.clearCache": "Clear the bitmap memcache."}]}, {"index": "84", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/BitmapAjaxCallback.java", "methodName": "com.androidquery.callback.BitmapAjaxCallback.clearCache", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public static void clearCache(){\n\t\tbigCache = null;\n\t\tsmallCache = null;\n\t\tinvalidCache = null;\n\t}", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#SimpleName#NullLiteral#Assignment#ExpressionStatement#SimpleName#NullLiteral#Assignment#ExpressionStatement#SimpleName#NullLiteral#Assignment#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(NullLiteral)NullLiteral)Assignment)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(NullLiteral)NullLiteral)Assignment)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(NullLiteral)NullLiteral)Assignment)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Clear the bitmap memcache.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "85", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/BitmapAjaxCallback.java", "methodName": "com.androidquery.callback.BitmapAjaxCallback.isMemoryCached", "methodParameterType": "String#", "methodParameterName": "url#", "methodBody": "public static boolean isMemoryCached(String url){\n\t\treturn getBCache().containsKey(url) || getSCache().containsKey(url) || getICache().containsKey(url);\n\t}", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#InfixExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(InfixExpression(MethodInvocation(MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(MethodInvocation(MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(MethodInvocation(MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Check if the bitmap is memory cached.", "call_func_name": ["com.androidquery.callback.BitmapAjaxCallback.getBCache", "java.util.Map.containsKey", "com.androidquery.callback.BitmapAjaxCallback.getSCache", "com.androidquery.callback.BitmapAjaxCallback.getICache"], "call_func_parameter": [[""], ["java.lang.Object"], [""], [""]], "passed_comments": "/"}, {"index": "86", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/BitmapAjaxCallback.java", "methodName": "com.androidquery.callback.BitmapAjaxCallback.getMemoryCached", "methodParameterType": "String#int#", "methodParameterName": "url#targetWidth#", "methodBody": "public static Bitmap getMemoryCached(String url, int targetWidth){\n\t\treturn memGet(url, targetWidth, 0);\n\t}", "AST": "Javadoc#Modifier#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#NumberLiteral#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the memory cached bitmap.", "call_func_name": ["com.androidquery.callback.BitmapAjaxCallback.memGet"], "call_func_parameter": [["java.lang.String", "int", "int"]], "passed_comments": "/"}, {"index": "87", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/BitmapAjaxCallback.java", "methodName": "com.androidquery.callback.BitmapAjaxCallback.async", "methodParameterType": "Activity#Context#ImageView#String#Object#AccountHandle#ImageOptions#HttpHost#String#", "methodParameterName": "act#context#iv#url#progress#ah#options#proxy#networkUrl#", "methodBody": "public static void async(Activity act, Context context, ImageView iv, String url, Object progress, AccountHandle ah, ImageOptions options, HttpHost proxy, String networkUrl){\n\t\n\t\tasync(act, context, iv, url, options.memCache, options.fileCache, options.targetWidth, options.fallback, options.preset, options.animation, options.ratio, options.anchor, progress, ah, options.policy, options.round, proxy, networkUrl);\n\t\t\n\t}", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "AQuery internal use only. Please uses AQuery image() methods instead. Optimize memory usage if mem hit and there's no custom callback.", "call_func_name": ["com.androidquery.callback.BitmapAjaxCallback.async"], "call_func_parameter": [["android.app.Activity", "android.content.Context", "android.widget.ImageView", "java.lang.String", "boolean", "boolean", "int", "int", "android.graphics.Bitmap", "int", "float", "float", "java.lang.Object", "com.androidquery.auth.AccountHandle", "int", "int", "org.apache.http.HttpHost", "java.lang.String"]], "passed_comments": [{"com.androidquery.callback.BitmapAjaxCallback.async": "AQuery internal use only. Please uses AQuery image() methods instead. Optimize memory usage if mem hit and there's no custom callback."}]}, {"index": "88", "file": "/root/repos/repos5/androidquery/src/com/androidquery/callback/BitmapAjaxCallback.java", "methodName": "com.androidquery.callback.BitmapAjaxCallback.async", "methodParameterType": "Activity#Context#ImageView#String#boolean#boolean#int#int#Bitmap#int#float#float#Object#AccountHandle#int#int#HttpHost#String#", "methodParameterName": "act#context#iv#url#memCache#fileCache#targetWidth#fallbackId#preset#animation#ratio#anchor#progress#ah#policy#round#proxy#networkUrl#", "methodBody": "public static void async(Activity act, Context context, ImageView iv, String url, boolean memCache, boolean fileCache, int targetWidth, int fallbackId, Bitmap preset, int animation, float ratio, float anchor, Object progress, AccountHandle ah, int policy, int round, HttpHost proxy, String networkUrl){\n\t\t\n\t\tBitmap bm = null;\n\t\t\n\t\tif(memCache){\n\t\t\tbm = memGet(url, targetWidth, round);\n\t\t}\n\t\t\n\t\tif(bm != null){\n\t\t\tiv.setTag(AQuery.TAG_URL, url);\t\t\n\t\t\tCommon.showProgress(progress, url, false);\n\t\t\tsetBmAnimate(iv, bm, preset, fallbackId, animation, ratio, anchor, AjaxStatus.MEMORY);\n\t\t}else{\n\t\t\tBitmapAjaxCallback cb = new BitmapAjaxCallback();\t\t\t\n\t\t\tcb.url(url).imageView(iv).memCache(memCache).fileCache(fileCache).targetWidth(targetWidth).fallback(fallbackId).preset(preset).animation(animation).ratio(ratio).anchor(anchor).progress(progress).auth(ah).policy(policy).round(round).networkUrl(networkUrl);\n\t\t\tif(proxy != null){\n\t\t\t\tcb.proxy(proxy.getHostName(), proxy.getPort());\n\t\t\t}\n\t\t\tif(act != null){\n\t\t\t\tcb.async(act);\n\t\t\t}else{\n\t\t\t\tcb.async(context);\n\t\t\t}\n\t\t}\n\t\t\n\t}", "AST": "Javadoc#Modifier#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#BooleanLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#IfStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(SimpleName)SimpleName(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block)IfStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation)ExpressionStatement)Block(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block)IfStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)IfStatement)Block)MethodDeclaration", "methodDoc": "AQuery internal use only. Please uses AQuery image() methods instead. Optimize memory usage if mem hit and there's no custom callback.", "call_func_name": ["com.androidquery.callback.BitmapAjaxCallback.memGet", "android.widget.ImageView.setTag", "com.androidquery.util.Common.showProgress", "com.androidquery.callback.BitmapAjaxCallback.setBmAnimate", "com.androidquery.callback.BitmapAjaxCallback.<init>", "com.androidquery.callback.BitmapAjaxCallback.url", "com.androidquery.callback.BitmapAjaxCallback.imageView", "com.androidquery.callback.BitmapAjaxCallback.memCache", "com.androidquery.callback.BitmapAjaxCallback.fileCache", "com.androidquery.callback.BitmapAjaxCallback.targetWidth", "com.androidquery.callback.BitmapAjaxCallback.fallback", "com.androidquery.callback.BitmapAjaxCallback.preset", "com.androidquery.callback.BitmapAjaxCallback.animation", "com.androidquery.callback.BitmapAjaxCallback.ratio", "com.androidquery.callback.BitmapAjaxCallback.anchor", "com.androidquery.callback.BitmapAjaxCallback.progress", "com.androidquery.callback.BitmapAjaxCallback.auth", "com.androidquery.callback.BitmapAjaxCallback.policy", "com.androidquery.callback.BitmapAjaxCallback.round", "com.androidquery.callback.BitmapAjaxCallback.networkUrl", "org.apache.http.HttpHost.getHostName", "org.apache.http.HttpHost.getPort", "com.androidquery.callback.BitmapAjaxCallback.proxy", "com.androidquery.callback.BitmapAjaxCallback.async", "com.androidquery.callback.BitmapAjaxCallback.async"], "call_func_parameter": [["java.lang.String", "int", "int"], ["int", "java.lang.Object"], ["java.lang.Object", "java.lang.String", "boolean"], ["android.widget.ImageView", "android.graphics.Bitmap", "android.graphics.Bitmap", "int", "int", "float", "float", "int"], [""], ["java.lang.String"], ["android.widget.ImageView"], ["boolean"], ["boolean"], ["int"], ["int"], ["android.graphics.Bitmap"], ["int"], ["float"], ["float"], ["java.lang.Object"], ["com.androidquery.auth.AccountHandle"], ["int"], ["int"], ["java.lang.String"], [""], [""], ["java.lang.String", "int"], ["android.app.Activity"], ["android.content.Context"]], "passed_comments": [{"com.androidquery.callback.BitmapAjaxCallback.imageView": "Set the target Image view."}, {"com.androidquery.callback.BitmapAjaxCallback.targetWidth": "Set the target width for downsampling."}, {"com.androidquery.callback.BitmapAjaxCallback.fallback": "Set the fallback image in resource id."}, {"com.androidquery.callback.BitmapAjaxCallback.preset": "Set the preset bitmap. This bitmap will be shown immediately until the ajax callback returns the final image from the url."}, {"com.androidquery.callback.BitmapAjaxCallback.animation": "Set the animation resource id, or AQuery.FADE_IN."}, {"com.androidquery.callback.BitmapAjaxCallback.ratio": "Set the image aspect ratio (height / width)."}, {"com.androidquery.callback.BitmapAjaxCallback.anchor": "Set the image aspect ratio anchor. Value of 1 implies show top end of the image, 0 implies at the center, -1 implies show at the bottom. A special value AQuery.ANCHOR_DYNAMIC will adjust the anchor base.  This setting will add up from 0 to 0.5 bias and it's suitable for portraits and common photos. Default value is ANCHOR_DYNAMIC."}, {"com.androidquery.callback.BitmapAjaxCallback.round": "Set the round corner radius. Note that the current implementation transform the image to a new one and will use more transient resources."}]}, {"index": "89", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.AbstractAQuery", "methodParameterType": "Activity#", "methodParameterName": "act#", "methodBody": "public AbstractAQuery(Activity act){\n\t\tthis.act = act;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Instantiates a new AQuery object.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "90", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.AbstractAQuery", "methodParameterType": "View#", "methodParameterName": "root#", "methodBody": "public AbstractAQuery(View root){\n\t\tthis.root = root;\n\t\tthis.view = root;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Instantiates a new AQuery object.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "91", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.AbstractAQuery", "methodParameterType": "Activity#View#", "methodParameterName": "act#root#", "methodBody": "public AbstractAQuery(Activity act, View root){\n\t\tthis.root = root;\n\t\tthis.view = root;\n\t\tthis.act = act;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Instantiates a new AQuery object. This constructor should be used for Fragments.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "92", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.AbstractAQuery", "methodParameterType": "Context#", "methodParameterName": "context#", "methodBody": "public AbstractAQuery(Context context){\n\t\tthis.context = context;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Instantiates a new AQuery object.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "93", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.find", "methodParameterType": "int#", "methodParameterName": "id#", "methodBody": "public T find(int id){\n\t\tView view = findView(id);\n\t\treturn create(view);\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Return a new AQuery object that uses the found view as a root.", "call_func_name": ["com.androidquery.AbstractAQuery.findView", "com.androidquery.AbstractAQuery.create"], "call_func_parameter": [["int"], ["android.view.View"]], "passed_comments": "/"}, {"index": "94", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.parent", "methodParameterType": "int#", "methodParameterName": "id#", "methodBody": "public T parent(int id){\n\t\t\n\t\tView node = view;\n\t\tView result = null;\n\t\t\n\t\twhile(node != null){\t\t\t\n\t\t\tif(node.getId() == id){\n\t\t\t\tresult = node;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tViewParent p = node.getParent();\n\t\t\tif(!(p instanceof View)) break;\n\t\t\tnode = (View) p;\n\t\t}\n\t\t\n\t\treturn create(result);\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#MethodInvocation#SimpleName#InfixExpression#SimpleName#SimpleName#Assignment#ExpressionStatement#BreakStatement#Block#IfStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleType#InstanceofExpression#ParenthesizedExpression#PrefixExpression#BreakStatement#IfStatement#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#Assignment#ExpressionStatement#Block#WhileStatement#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(SimpleName)SimpleName)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(WhileStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(IfStatement(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)InfixExpression(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(SimpleName)SimpleName)Assignment)ExpressionStatement(BreakStatement)BreakStatement)Block)IfStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(PrefixExpression(ParenthesizedExpression(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression)ParenthesizedExpression)PrefixExpression(BreakStatement)BreakStatement)IfStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)Assignment)ExpressionStatement)Block)WhileStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Return a new AQuery object that uses the found parent as a root. If no parent with matching id is found, operating view will be null and isExist() will return false.", "call_func_name": ["android.view.View.getId", "android.view.View.getParent", "com.androidquery.AbstractAQuery.create"], "call_func_parameter": [[""], [""], ["android.view.View"]], "passed_comments": "/"}, {"index": "95", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.recycle", "methodParameterType": "View#", "methodParameterName": "root#", "methodBody": "public T recycle(View root){\n\t\tthis.root = root;\n\t\tthis.view = root;\n\t\treset();\n\t\tthis.context = null;\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ExpressionStatement#ThisExpression#SimpleName#FieldAccess#NullLiteral#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(NullLiteral)NullLiteral)Assignment)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Recycle this AQuery object.  The method is designed to avoid recreating an AQuery object repeatedly, such as when in list adapter getView method.", "call_func_name": ["com.androidquery.AbstractAQuery.reset", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [[""], [""]], "passed_comments": "/"}, {"index": "96", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.getView", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public View getView(){\n\t\treturn view;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Return the current operating view.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "97", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.id", "methodParameterType": "int#", "methodParameterName": "id#", "methodBody": "public T id(int id){\n\t\t\n\t\treturn id(findView(id));\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Points the current operating view to the first view found with the id under the root.", "call_func_name": ["com.androidquery.AbstractAQuery.findView", "com.androidquery.AbstractAQuery.id"], "call_func_parameter": [["int"], ["android.view.View"]], "passed_comments": [{"com.androidquery.AbstractAQuery.id": "Points the current operating view to the specified view."}]}, {"index": "98", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.id", "methodParameterType": "View#", "methodParameterName": "view#", "methodBody": "public T id(View view){\n\t\tthis.view = view;\t\n\t\treset();\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Points the current operating view to the specified view.", "call_func_name": ["com.androidquery.AbstractAQuery.reset", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [[""], [""]], "passed_comments": "/"}, {"index": "99", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.id", "methodParameterType": "String#", "methodParameterName": "tag#", "methodBody": "public T id(String tag){\n\t\treturn id(findView(tag));\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Points the current operating view to the specified view with tag.", "call_func_name": ["com.androidquery.AbstractAQuery.findView", "com.androidquery.AbstractAQuery.id"], "call_func_parameter": [["java.lang.String"], ["android.view.View"]], "passed_comments": [{"com.androidquery.AbstractAQuery.id": "Points the current operating view to the specified view."}]}, {"index": "100", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.id", "methodParameterType": "int#", "methodParameterName": "path#", "methodBody": "public T id(int... path){\n\t\t\n\t\treturn id(findView(path));\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Find the first view with first id, under that view, find again with 2nd id, etc...", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "101", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.progress", "methodParameterType": "int#", "methodParameterName": "id#", "methodBody": "public T progress(int id){\n\t\tprogress = findView(id);\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Find the progress bar and show the progress for the next ajax/image request.  Once ajax or image is called, current progress view is consumed. Subsequent ajax/image calls won't show progress view unless progress is called again. If a file or network requests is required, the progress bar is set to be \"VISIBLE\". Once the requests completes, progress bar is set to \"GONE\".", "call_func_name": ["com.androidquery.AbstractAQuery.findView", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["int"], [""]], "passed_comments": "/"}, {"index": "102", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.progress", "methodParameterType": "Object#", "methodParameterName": "view#", "methodBody": "public T progress(Object view){\n\t\tprogress = view;\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the progress bar and show the progress for the next ajax/image request.  Once ajax or image is called, current progress view is consumed. Subsequent ajax/image calls won't show progress view unless progress is called again. If a file or network requests is required, the progress bar is set to be \"VISIBLE\". Once the requests completes, progress bar is set to \"GONE\".", "call_func_name": ["com.androidquery.AbstractAQuery.self"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "103", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.progress", "methodParameterType": "Dialog#", "methodParameterName": "dialog#", "methodBody": "public T progress(Dialog dialog){\n\t\tprogress = dialog;\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the progress dialog and show the progress for the next ajax/image request.  Progress dialogs cannot be reused. They are dismissed on ajax callback. If a file or network requests is required, the dialog is shown. Once the requests completes, dialog is dismissed. It's the caller responsibility to dismiss the dialog when the activity terminates before the ajax is completed. Calling aq.dismiss() in activity's onDestroy() will ensure all dialogs are properly dismissed.", "call_func_name": ["com.androidquery.AbstractAQuery.self"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "104", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.auth", "methodParameterType": "AccountHandle#", "methodParameterName": "handle#", "methodBody": "public T auth(AccountHandle handle){\n\t\tah = handle;\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Apply the account handler for authentication for the next ajax request.", "call_func_name": ["com.androidquery.AbstractAQuery.self"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "105", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.transformer", "methodParameterType": "Transformer#", "methodParameterName": "transformer#", "methodBody": "public T transformer(Transformer transformer){\n\t\ttrans = transformer;\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(SimpleName)SimpleName)Assignment)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Apply the transformer to convert raw data to desired object type for the next ajax request.", "call_func_name": ["com.androidquery.AbstractAQuery.self"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "106", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.proxy", "methodParameterType": "String#int#", "methodParameterName": "host#port#", "methodBody": "public T proxy(String host, int port){\n\t\tproxy = new HttpHost(host, port);\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#ClassInstanceCreation#Assignment#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleName)SimpleName)ClassInstanceCreation)Assignment)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Apply the proxy info to next ajax request.", "call_func_name": ["org.apache.http.HttpHost.<init>", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["java.lang.String", "int"], [""]], "passed_comments": "/"}, {"index": "107", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.rating", "methodParameterType": "float#", "methodParameterName": "rating#", "methodBody": "public T rating(float rating){\n\t\t\n\t\tif(view instanceof RatingBar){\t\t\t\n\t\t\tRatingBar rb = (RatingBar) view;\n\t\t\trb.setRating(rating);\n\t\t}\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the rating of a RatingBar.", "call_func_name": ["android.widget.RatingBar.setRating", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["float"], [""]], "passed_comments": "/"}, {"index": "108", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.text", "methodParameterType": "int#", "methodParameterName": "resid#", "methodBody": "public T text(int resid){\n\t\t\n\t\tif(view instanceof TextView){\t\t\t\n\t\t\tTextView tv = (TextView) view;\n\t\t\ttv.setText(resid);\n\t\t}\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the text of a TextView.", "call_func_name": ["android.widget.TextView.setText", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["int"], [""]], "passed_comments": "/"}, {"index": "109", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.text", "methodParameterType": "int#Object#", "methodParameterName": "resid#formatArgs#", "methodBody": "public T text(int resid, Object... formatArgs) {\n\t\tContext context = getContext();\n\t\tif (context != null) {\n\t\t\tCharSequence text = context.getString(resid, formatArgs);\n\t\t\ttext(text);\n\t\t}\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the text of a TextView with localized formatted string from application's package's default string table", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "110", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.text", "methodParameterType": "CharSequence#", "methodParameterName": "text#", "methodBody": "public T text(CharSequence text){\n\t\t\t\n\t\tif(view instanceof TextView){\t\t\t\n\t\t\tTextView tv = (TextView) view;\n\t\t\ttv.setText(text);\n\t\t}\n\t\t\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the text of a TextView.", "call_func_name": ["android.widget.TextView.setText", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["java.lang.CharSequence"], [""]], "passed_comments": "/"}, {"index": "111", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.text", "methodParameterType": "CharSequence#boolean#", "methodParameterName": "text#goneIfEmpty#", "methodBody": "public T text(CharSequence text, boolean goneIfEmpty){\n\t\t\t\n\t\tif(goneIfEmpty && (text == null || text.length() == 0)){\n\t\t\treturn gone();\n\t\t}else{\n\t\t\treturn text(text);\n\t\t}\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#MethodInvocation#NumberLiteral#InfixExpression#InfixExpression#ParenthesizedExpression#InfixExpression#SimpleName#MethodInvocation#ReturnStatement#Block#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#IfStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(SimpleName)SimpleName(ParenthesizedExpression(InfixExpression(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(NumberLiteral)NumberLiteral)InfixExpression)InfixExpression)ParenthesizedExpression)InfixExpression(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)IfStatement)Block)MethodDeclaration", "methodDoc": "Set the text of a TextView. Hide the view (gone) if text is empty.", "call_func_name": ["java.lang.CharSequence.length", "com.androidquery.AbstractAQuery.gone", "com.androidquery.AbstractAQuery.text"], "call_func_parameter": [[""], [""], ["java.lang.CharSequence"]], "passed_comments": [{"com.androidquery.AbstractAQuery.gone": "Set view visibility to View.GONE."}, {"com.androidquery.AbstractAQuery.text": "Set the text of a TextView."}]}, {"index": "112", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.text", "methodParameterType": "Spanned#", "methodParameterName": "text#", "methodBody": "public T text(Spanned text){\n\t\t\n\t\t\n\t\tif(view instanceof TextView){\t\t\t\n\t\t\tTextView tv = (TextView) view;\n\t\t\ttv.setText(text);\n\t\t}\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the text of a TextView.", "call_func_name": ["android.widget.TextView.setText", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["java.lang.CharSequence"], [""]], "passed_comments": "/"}, {"index": "113", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.textColor", "methodParameterType": "int#", "methodParameterName": "color#", "methodBody": "public T textColor(int color){\n\t\t\n\t\tif(view instanceof TextView){\t\t\t\n\t\t\tTextView tv = (TextView) view;\n\t\t\ttv.setTextColor(color);\n\t\t}\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the text color of a TextView. Note that it's not a color resource id.", "call_func_name": ["android.widget.TextView.setTextColor", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["int"], [""]], "passed_comments": "/"}, {"index": "114", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.textColorId", "methodParameterType": "int#", "methodParameterName": "id#", "methodBody": "public T textColorId(int id){\n        \n        return textColor(getContext().getResources().getColor(id));\n    }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(MethodInvocation(MethodInvocation(MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the text color of a TextView from  a color resource id.", "call_func_name": ["com.androidquery.AbstractAQuery.getContext", "android.content.Context.getResources", "android.content.res.Resources.getColor", "com.androidquery.AbstractAQuery.textColor"], "call_func_parameter": [[""], [""], ["int"], ["int"]], "passed_comments": [{"com.androidquery.AbstractAQuery.getContext": "Return the context of activity or view."}, {"com.androidquery.AbstractAQuery.textColor": "Set the text color of a TextView. Note that it's not a color resource id."}]}, {"index": "115", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.typeface", "methodParameterType": "Typeface#", "methodParameterName": "tf#", "methodBody": "public T typeface(Typeface tf){\n\t\t\n\t\tif(view instanceof TextView){\t\t\t\n\t\t\tTextView tv = (TextView) view;\n\t\t\ttv.setTypeface(tf);\n\t\t}\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the text typeface of a TextView.", "call_func_name": ["android.widget.TextView.setTypeface", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["android.graphics.Typeface"], [""]], "passed_comments": "/"}, {"index": "116", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.textSize", "methodParameterType": "float#", "methodParameterName": "size#", "methodBody": "public T textSize(float size){\n\t\t\n\t\tif(view instanceof TextView){\t\t\t\n\t\t\tTextView tv = (TextView) view;\n\t\t\ttv.setTextSize(size);\n\t\t}\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the text size (in sp) of a TextView.", "call_func_name": ["android.widget.TextView.setTextSize", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["float"], [""]], "passed_comments": "/"}, {"index": "117", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.adapter", "methodParameterType": "Adapter#", "methodParameterName": "adapter#", "methodBody": "@SuppressWarnings({\"unchecked\", \"rawtypes\" })\n\tpublic T adapter(Adapter adapter){\n\t\t\n\t\tif(view instanceof AdapterView){\n\t\t\tAdapterView av = (AdapterView) view;\n\t\t\tav.setAdapter(adapter);\n\t\t}\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#SimpleName#StringLiteral#StringLiteral#ArrayInitializer#SingleMemberAnnotation#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(SingleMemberAnnotation(SimpleName)SimpleName(ArrayInitializer(StringLiteral)StringLiteral(StringLiteral)StringLiteral)ArrayInitializer)SingleMemberAnnotation(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the adapter of an AdapterView.", "call_func_name": ["android.widget.AdapterView.setAdapter", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["android.widget.Adapter"], [""]], "passed_comments": "/"}, {"index": "118", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.adapter", "methodParameterType": "ExpandableListAdapter#", "methodParameterName": "adapter#", "methodBody": "public T adapter(ExpandableListAdapter adapter){\n\t\t\n\t\tif(view instanceof ExpandableListView){\n\t\t\tExpandableListView av = (ExpandableListView) view;\n\t\t\tav.setAdapter(adapter);\n\t\t}\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the adapter of an ExpandableListView.", "call_func_name": ["android.widget.ExpandableListView.setAdapter", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["android.widget.ExpandableListAdapter"], [""]], "passed_comments": "/"}, {"index": "119", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.image", "methodParameterType": "int#", "methodParameterName": "resid#", "methodBody": "public T image(int resid){\n\t\t\n\t\tif(view instanceof ImageView){\n\t\t\tImageView iv = (ImageView) view;\n\t\t\tiv.setTag(AQuery.TAG_URL, null);\n\t\t\tif(resid == 0){\n\t\t\t\tiv.setImageBitmap(null);\n\t\t\t}else{\t\t\t\t\n\t\t\t\tiv.setImageResource(resid);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#NullLiteral#MethodInvocation#ExpressionStatement#SimpleName#NumberLiteral#InfixExpression#SimpleName#SimpleName#NullLiteral#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(NullLiteral)NullLiteral)MethodInvocation)ExpressionStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NumberLiteral)NumberLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NullLiteral)NullLiteral)MethodInvocation)ExpressionStatement)Block(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the image of an ImageView.", "call_func_name": ["android.widget.ImageView.setTag", "android.widget.ImageView.setImageBitmap", "android.widget.ImageView.setImageResource", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["int", "java.lang.Object"], ["android.graphics.Bitmap"], ["int"], [""]], "passed_comments": "/"}, {"index": "120", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.image", "methodParameterType": "Drawable#", "methodParameterName": "drawable#", "methodBody": "public T image(Drawable drawable){\n\t\t\n\t\tif(view instanceof ImageView){\n\t\t\tImageView iv = (ImageView) view;\n\t\t\tiv.setTag(AQuery.TAG_URL, null);\n\t\t\tiv.setImageDrawable(drawable);\n\t\t}\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#NullLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(NullLiteral)NullLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the image of an ImageView.", "call_func_name": ["android.widget.ImageView.setTag", "android.widget.ImageView.setImageDrawable", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["int", "java.lang.Object"], ["android.graphics.drawable.Drawable"], [""]], "passed_comments": "/"}, {"index": "121", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.image", "methodParameterType": "Bitmap#", "methodParameterName": "bm#", "methodBody": "public T image(Bitmap bm){\n\t\t\n\t\tif(view instanceof ImageView){\n\t\t\tImageView iv = (ImageView) view;\n\t\t\tiv.setTag(AQuery.TAG_URL, null);\n\t\t\tiv.setImageBitmap(bm);\n\t\t}\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#NullLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(NullLiteral)NullLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the image of an ImageView.", "call_func_name": ["android.widget.ImageView.setTag", "android.widget.ImageView.setImageBitmap", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["int", "java.lang.Object"], ["android.graphics.Bitmap"], [""]], "passed_comments": "/"}, {"index": "122", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.image", "methodParameterType": "String#", "methodParameterName": "url#", "methodBody": "public T image(String url){\n\t\treturn image(url, true, true, 0, 0);\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#BooleanLiteral#BooleanLiteral#NumberLiteral#NumberLiteral#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral(BooleanLiteral)BooleanLiteral(NumberLiteral)NumberLiteral(NumberLiteral)NumberLiteral)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the image of an ImageView.", "call_func_name": ["com.androidquery.AbstractAQuery.image"], "call_func_parameter": [["java.lang.String", "boolean", "boolean", "int", "int"]], "passed_comments": [{"com.androidquery.AbstractAQuery.image": "Set the image of an ImageView."}]}, {"index": "123", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.image", "methodParameterType": "String#boolean#boolean#", "methodParameterName": "url#memCache#fileCache#", "methodBody": "public T image(String url, boolean memCache, boolean fileCache){\t\t\n\t\treturn image(url, memCache, fileCache, 0, 0);\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#NumberLiteral#NumberLiteral#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral(NumberLiteral)NumberLiteral)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the image of an ImageView.", "call_func_name": ["com.androidquery.AbstractAQuery.image"], "call_func_parameter": [["java.lang.String", "boolean", "boolean", "int", "int"]], "passed_comments": [{"com.androidquery.AbstractAQuery.image": "Set the image of an ImageView."}]}, {"index": "124", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.image", "methodParameterType": "String#boolean#boolean#int#int#", "methodParameterName": "url#memCache#fileCache#targetWidth#fallbackId#", "methodBody": "public T image(String url, boolean memCache, boolean fileCache, int targetWidth, int fallbackId){\n\t\t\n\t\treturn image(url, memCache, fileCache, targetWidth, fallbackId, null, 0);\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#NullLiteral#NumberLiteral#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(NullLiteral)NullLiteral(NumberLiteral)NumberLiteral)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the image of an ImageView.", "call_func_name": ["com.androidquery.AbstractAQuery.image"], "call_func_parameter": [["java.lang.String", "boolean", "boolean", "int", "int", "android.graphics.Bitmap", "int"]], "passed_comments": [{"com.androidquery.AbstractAQuery.image": "Set the image of an ImageView."}]}, {"index": "125", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.image", "methodParameterType": "String#boolean#boolean#int#int#Bitmap#int#", "methodParameterName": "url#memCache#fileCache#targetWidth#fallbackId#preset#animId#", "methodBody": "public T image(String url, boolean memCache, boolean fileCache, int targetWidth, int fallbackId, Bitmap preset, int animId){\n\t\t\n\t\treturn image(url, memCache, fileCache, targetWidth, fallbackId, preset, animId, 0);\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#NumberLiteral#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the image of an ImageView.", "call_func_name": ["com.androidquery.AbstractAQuery.image"], "call_func_parameter": [["java.lang.String", "boolean", "boolean", "int", "int", "android.graphics.Bitmap", "int", "float"]], "passed_comments": [{"com.androidquery.AbstractAQuery.image": "Set the image of an ImageView."}]}, {"index": "126", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.image", "methodParameterType": "String#boolean#boolean#int#int#Bitmap#int#float#", "methodParameterName": "url#memCache#fileCache#targetWidth#fallbackId#preset#animId#ratio#", "methodBody": "public T image(String url, boolean memCache, boolean fileCache, int targetWidth, int fallbackId, Bitmap preset, int animId, float ratio){\n\t\treturn image(url, memCache, fileCache, targetWidth, fallbackId, preset, animId, ratio, 0, null);\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#NumberLiteral#NullLiteral#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral(NullLiteral)NullLiteral)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the image of an ImageView.", "call_func_name": ["com.androidquery.AbstractAQuery.image"], "call_func_parameter": [["java.lang.String", "boolean", "boolean", "int", "int", "android.graphics.Bitmap", "int", "float", "int", "java.lang.String"]], "passed_comments": "/"}, {"index": "127", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.image", "methodParameterType": "BitmapAjaxCallback#", "methodParameterName": "callback#", "methodBody": "public T image(BitmapAjaxCallback callback){\n\t\t\n\t\tif(view instanceof ImageView){\t\t\t\n\t\t\tcallback.imageView((ImageView) view);\n\t\t\tinvoke(callback);\n\t\t} \n\t\t\n\t\treturn self();\n\t\t\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the image of an ImageView with a custom callback.", "call_func_name": ["com.androidquery.callback.BitmapAjaxCallback.imageView", "com.androidquery.AbstractAQuery.invoke", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["android.widget.ImageView"], ["com.androidquery.callback.AbstractAjaxCallback"], [""]], "passed_comments": [{"com.androidquery.callback.BitmapAjaxCallback.imageView": "Set the target Image view."}]}, {"index": "128", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.image", "methodParameterType": "String#boolean#boolean#int#int#BitmapAjaxCallback#", "methodParameterName": "url#memCache#fileCache#targetWidth#resId#callback#", "methodBody": "public T image(String url, boolean memCache, boolean fileCache, int targetWidth, int resId, BitmapAjaxCallback callback){\n\t\t\n\t\tcallback.targetWidth(targetWidth).fallback(resId)\n\t\t.url(url).memCache(memCache).fileCache(fileCache);\n\t\t\n\t\treturn image(callback);\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the image of an ImageView with a custom callback.", "call_func_name": ["com.androidquery.callback.BitmapAjaxCallback.targetWidth", "com.androidquery.callback.BitmapAjaxCallback.fallback", "com.androidquery.callback.BitmapAjaxCallback.url", "com.androidquery.callback.BitmapAjaxCallback.memCache", "com.androidquery.callback.BitmapAjaxCallback.fileCache", "com.androidquery.AbstractAQuery.image"], "call_func_parameter": [["int"], ["int"], ["java.lang.String"], ["boolean"], ["boolean"], ["com.androidquery.callback.BitmapAjaxCallback"]], "passed_comments": [{"com.androidquery.callback.BitmapAjaxCallback.targetWidth": "Set the target width for downsampling."}, {"com.androidquery.callback.BitmapAjaxCallback.fallback": "Set the fallback image in resource id."}, {"com.androidquery.AbstractAQuery.image": "Set the image of an ImageView with a custom callback."}]}, {"index": "129", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.image", "methodParameterType": "File#int#", "methodParameterName": "file#targetWidth#", "methodBody": "public T image(File file, int targetWidth){\t\t\n\t\treturn image(file, true, targetWidth, null);\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#BooleanLiteral#SimpleName#NullLiteral#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral(SimpleName)SimpleName(NullLiteral)NullLiteral)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the image of an ImageView from a file.", "call_func_name": ["com.androidquery.AbstractAQuery.image"], "call_func_parameter": [["java.io.File", "boolean", "int", "com.androidquery.callback.BitmapAjaxCallback"]], "passed_comments": [{"com.androidquery.AbstractAQuery.image": "Set the image of an ImageView from a file with a custom callback."}]}, {"index": "130", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.image", "methodParameterType": "File#boolean#int#BitmapAjaxCallback#", "methodParameterName": "file#memCache#targetWidth#callback#", "methodBody": "public T image(File file, boolean memCache, int targetWidth, BitmapAjaxCallback callback){\n\t\t\n\t\tif(callback == null) callback = new BitmapAjaxCallback();\t\t\n\t\tcallback.file(file);\t\n\t\t\n\t\tString url = null;\n\t\tif(file != null) url = file.getAbsolutePath();\n\t\treturn image(url, memCache, true, targetWidth, 0, callback);\n\t\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#Assignment#ExpressionStatement#IfStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#IfStatement#SimpleName#SimpleName#SimpleName#BooleanLiteral#SimpleName#NumberLiteral#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(ExpressionStatement(Assignment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation)Assignment)ExpressionStatement)IfStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral(SimpleName)SimpleName(NumberLiteral)NumberLiteral(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the image of an ImageView from a file with a custom callback.", "call_func_name": ["com.androidquery.callback.BitmapAjaxCallback.<init>", "com.androidquery.callback.BitmapAjaxCallback.file", "java.io.File.getAbsolutePath", "com.androidquery.AbstractAQuery.image"], "call_func_parameter": [[""], ["java.io.File"], [""], ["java.lang.String", "boolean", "boolean", "int", "int", "com.androidquery.callback.BitmapAjaxCallback"]], "passed_comments": [{"com.androidquery.callback.BitmapAjaxCallback.file": "Set the image source file."}, {"com.androidquery.AbstractAQuery.image": "Set the image of an ImageView with a custom callback."}]}, {"index": "131", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.image", "methodParameterType": "Bitmap#float#", "methodParameterName": "bm#ratio#", "methodBody": "public T image(Bitmap bm, float ratio){\n\t\tBitmapAjaxCallback cb = new BitmapAjaxCallback();\n\t\tcb.ratio(ratio).bitmap(bm);\n\t\treturn image(cb);\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the image of an ImageView from a file with aspect ratio.", "call_func_name": ["com.androidquery.callback.BitmapAjaxCallback.<init>", "com.androidquery.callback.BitmapAjaxCallback.ratio", "com.androidquery.callback.BitmapAjaxCallback.bitmap", "com.androidquery.AbstractAQuery.image"], "call_func_parameter": [[""], ["float"], ["android.graphics.Bitmap"], ["com.androidquery.callback.BitmapAjaxCallback"]], "passed_comments": [{"com.androidquery.callback.BitmapAjaxCallback.ratio": "Set the image aspect ratio (height / width)."}, {"com.androidquery.callback.BitmapAjaxCallback.bitmap": "Set the bitmap. This bitmap will be shown immediately with aspect ratio."}, {"com.androidquery.AbstractAQuery.image": "Set the image of an ImageView with a custom callback."}]}, {"index": "132", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.tag", "methodParameterType": "Object#", "methodParameterName": "tag#", "methodBody": "public T tag(Object tag){\n\t\t\n\t\tif(view != null){\n\t\t\tview.setTag(tag);\n\t\t}\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set tag object of a view.", "call_func_name": ["android.view.View.setTag", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["java.lang.Object"], [""]], "passed_comments": "/"}, {"index": "133", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.tag", "methodParameterType": "int#Object#", "methodParameterName": "key#tag#", "methodBody": "public T tag(int key, Object tag){\n\t\t\n\t\tif(view != null){\n\t\t\tview.setTag(key, tag);\n\t\t}\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set tag object of a view.", "call_func_name": ["android.view.View.setTag", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["int", "java.lang.Object"], [""]], "passed_comments": "/"}, {"index": "134", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.transparent", "methodParameterType": "boolean#", "methodParameterName": "transparent#", "methodBody": "public T transparent(boolean transparent){\n\t\t\n\t\tif(view != null){\n\t\t\tAQUtility.transparent(view, transparent);\n\t\t}\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set a view to be transparent.", "call_func_name": ["com.androidquery.util.AQUtility.transparent", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["android.view.View", "boolean"], [""]], "passed_comments": "/"}, {"index": "135", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.enabled", "methodParameterType": "boolean#", "methodParameterName": "enabled#", "methodBody": "public T enabled(boolean enabled){\n\t\t\n\t\tif(view != null){\n\t\t\tview.setEnabled(enabled);\n\t\t}\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Enable a view.", "call_func_name": ["android.view.View.setEnabled", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["boolean"], [""]], "passed_comments": "/"}, {"index": "136", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.checked", "methodParameterType": "boolean#", "methodParameterName": "checked#", "methodBody": "public T checked(boolean checked){\n\t\t\n\t\tif(view instanceof CompoundButton){\n\t\t\tCompoundButton cb = (CompoundButton) view;\n\t\t\tcb.setChecked(checked);\n\t\t}\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set checked state of a compound button.", "call_func_name": ["android.widget.CompoundButton.setChecked", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["boolean"], [""]], "passed_comments": "/"}, {"index": "137", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.isChecked", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public boolean isChecked(){\n\t\t\n\t\tboolean checked = false;\n\t\t\n\t\tif(view instanceof CompoundButton){\n\t\t\tCompoundButton cb = (CompoundButton) view;\n\t\t\tchecked = cb.isChecked();\n\t\t}\n\t\t\n\t\treturn checked;\n\t}", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#PrimitiveType#SimpleName#BooleanLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(Block(VariableDeclarationStatement(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block)IfStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Get checked state of a compound button.", "call_func_name": ["android.widget.CompoundButton.isChecked"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "138", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.clickable", "methodParameterType": "boolean#", "methodParameterName": "clickable#", "methodBody": "public T clickable(boolean clickable){\n\t\t\n\t\tif(view != null){\n\t\t\tview.setClickable(clickable);\n\t\t}\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set clickable for a view.", "call_func_name": ["android.view.View.setClickable", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["boolean"], [""]], "passed_comments": "/"}, {"index": "139", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.gone", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public T gone(){\n\t\t/*\n\t\tif(view != null && view.getVisibility() != View.GONE){\n\t\t\tview.setVisibility(View.GONE);\n\t\t}\n\t\t\n\t\treturn self();\n\t\t*/\n\t\treturn visibility(View.GONE);\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set view visibility to View.GONE.", "call_func_name": ["com.androidquery.AbstractAQuery.visibility"], "call_func_parameter": [["int"]], "passed_comments": [{"com.androidquery.AbstractAQuery.visibility": "Set view visibility, such as View.VISIBLE."}]}, {"index": "140", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.invisible", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public T invisible(){\n\t\t\n\t\t/*\n\t\tif(view != null && view.getVisibility() != View.INVISIBLE){\n\t\t\tview.setVisibility(View.INVISIBLE);\n\t\t}\n\t\t\n\t\treturn self();\n\t\t*/\n\t\treturn visibility(View.INVISIBLE);\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set view visibility to View.INVISIBLE.", "call_func_name": ["com.androidquery.AbstractAQuery.visibility"], "call_func_parameter": [["int"]], "passed_comments": [{"com.androidquery.AbstractAQuery.visibility": "Set view visibility, such as View.VISIBLE."}]}, {"index": "141", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.visible", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public T visible(){\n\t\t\n\t\t/*\n\t\tif(view != null && view.getVisibility() != View.VISIBLE){\n\t\t\tview.setVisibility(View.VISIBLE);\n\t\t}\n\t\t\n\t\treturn self();\n\t\t*/\n\t\treturn visibility(View.VISIBLE);\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set view visibility to View.VISIBLE.", "call_func_name": ["com.androidquery.AbstractAQuery.visibility"], "call_func_parameter": [["int"]], "passed_comments": [{"com.androidquery.AbstractAQuery.visibility": "Set view visibility, such as View.VISIBLE."}]}, {"index": "142", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.visibility", "methodParameterType": "int#", "methodParameterName": "visibility#", "methodBody": "public T visibility(int visibility){\n\t\t\n\t\tif(view != null && view.getVisibility() != visibility){\n\t\t\tview.setVisibility(visibility);\n\t\t}\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#MethodInvocation#SimpleName#InfixExpression#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)InfixExpression)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set view visibility, such as View.VISIBLE.", "call_func_name": ["android.view.View.getVisibility", "android.view.View.setVisibility", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [[""], ["int"], [""]], "passed_comments": "/"}, {"index": "143", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.background", "methodParameterType": "int#", "methodParameterName": "id#", "methodBody": "public T background(int id){\n\t\t\n\t\tif(view != null){\n\t\t\n\t\t\tif(id != 0){\n\t\t\t\tview.setBackgroundResource(id);\n\t\t\t}else{\n\t\t\t\tview.setBackgroundDrawable(null);\n\t\t\t}\n\t\t\n\t\t}\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#NumberLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleName#NullLiteral#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NumberLiteral)NumberLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NullLiteral)NullLiteral)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set view background.", "call_func_name": ["android.view.View.setBackgroundResource", "android.view.View.setBackgroundDrawable", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["int"], ["android.graphics.drawable.Drawable"], [""]], "passed_comments": "/"}, {"index": "144", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.backgroundColor", "methodParameterType": "int#", "methodParameterName": "color#", "methodBody": "public T backgroundColor(int color){\n\t\t\n\t\tif(view != null){\t\t\n\t\t\tview.setBackgroundColor(color);\t\t\n\t\t}\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set view background color.", "call_func_name": ["android.view.View.setBackgroundColor", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["int"], [""]], "passed_comments": "/"}, {"index": "145", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.backgroundColorId", "methodParameterType": "int#", "methodParameterName": "colorId#", "methodBody": "public T backgroundColorId(int colorId){\n        \n        if(view != null){       \n            view.setBackgroundColor(getContext().getResources().getColor(colorId));     \n        }\n        \n        return self();\n    }", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(MethodInvocation(MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set view background color.", "call_func_name": ["com.androidquery.AbstractAQuery.getContext", "android.content.Context.getResources", "android.content.res.Resources.getColor", "android.view.View.setBackgroundColor", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [[""], [""], ["int"], ["int"], [""]], "passed_comments": [{"com.androidquery.AbstractAQuery.getContext": "Return the context of activity or view."}]}, {"index": "146", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.dataChanged", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public T dataChanged(){\n\t\t\n\t\tif(view instanceof AdapterView){\n\t\t\t\n\t\t\tAdapterView<?> av = (AdapterView<?>) view;\n\t\t\tAdapter a = av.getAdapter();\n\t\t\t\n\t\t\tif(a instanceof BaseAdapter){\n\t\t\t\tBaseAdapter ba = (BaseAdapter) a;\n\t\t\t\tba.notifyDataSetChanged();\n\t\t\t}\n\t\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#CastExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType)WildcardType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(CastExpression(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType)WildcardType)ParameterizedType(SimpleName)SimpleName)CastExpression)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Notify a ListView that the data of it's adapter is changed.", "call_func_name": ["android.widget.AdapterView.getAdapter", "android.widget.BaseAdapter.notifyDataSetChanged", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [[""], [""], [""]], "passed_comments": "/"}, {"index": "147", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.isExist", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public boolean isExist(){\n\t\treturn view != null;\n\t}", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#SimpleName#NullLiteral#InfixExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(Block(ReturnStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Checks if the current view exist.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "148", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.getTag", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public Object getTag(){\n\t\tObject result = null;\n\t\tif(view != null){\n\t\t\tresult = view.getTag();\n\t\t}\n\t\treturn result;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block)IfStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the tag of the view.", "call_func_name": ["android.view.View.getTag"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "149", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.getTag", "methodParameterType": "int#", "methodParameterName": "id#", "methodBody": "public Object getTag(int id){\n\t\tObject result = null;\n\t\tif(view != null){\n\t\t\tresult = view.getTag(id);\n\t\t}\n\t\treturn result;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block)IfStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the tag of the view.", "call_func_name": ["android.view.View.getTag"], "call_func_parameter": [["int"]], "passed_comments": "/"}, {"index": "150", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.getImageView", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public ImageView getImageView(){\n\t\treturn (ImageView) view;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the current view as an image view.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "151", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.getGallery", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public Gallery getGallery(){\n\t\treturn (Gallery) view;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the current view as an Gallery.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "152", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.getTextView", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public TextView getTextView(){\n\t\treturn (TextView) view;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the current view as a text view.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "153", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.getEditText", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public EditText getEditText(){\n\t\treturn (EditText) view;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the current view as an edit text.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "154", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.getProgressBar", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public ProgressBar getProgressBar(){\n\t\treturn (ProgressBar) view;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the current view as an progress bar.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "155", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.getSeekBar", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public SeekBar getSeekBar(){\n\t\treturn (SeekBar) view;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the current view as seek bar.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "156", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.getButton", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public Button getButton(){\n\t\treturn (Button) view;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the current view as a button.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "157", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.getCheckBox", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public CheckBox getCheckBox(){\n\t\treturn (CheckBox) view;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the current view as a checkbox.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "158", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.getListView", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public ListView getListView(){\n\t\treturn (ListView) view;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the current view as a listview.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "159", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.getExpandableListView", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public ExpandableListView getExpandableListView(){\n\t\treturn (ExpandableListView) view;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the current view as a ExpandableListView.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "160", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.getGridView", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public GridView getGridView(){\n\t\treturn (GridView) view;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the current view as a gridview.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "161", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.getRatingBar", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public RatingBar getRatingBar(){\n\t\treturn (RatingBar) view;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the current view as a RatingBar.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "162", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.getWebView", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public WebView getWebView(){\n\t\treturn (WebView) view;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the current view as a webview.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "163", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.getSpinner", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public Spinner getSpinner(){\n\t\treturn (Spinner) view;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the current view as a spinner.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "164", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.getEditable", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public Editable getEditable(){\n\t\t\n\t\tEditable result = null;\n\t\t\n\t\tif(view instanceof EditText){\n\t\t\tresult = ((EditText) view).getEditableText();\n\t\t}\n\t\t\n\t\treturn result;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#ParenthesizedExpression#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(ParenthesizedExpression(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)ParenthesizedExpression(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block)IfStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the editable.", "call_func_name": ["android.widget.EditText.getEditableText"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "165", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.getText", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public CharSequence getText(){\n\t\t\n\t\tCharSequence result = null;\n\t\t\n\t\tif(view instanceof TextView){\n\t\t\tresult = ((TextView) view).getText();\n\t\t}\n\t\t\n\t\treturn result;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#ParenthesizedExpression#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(ParenthesizedExpression(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)ParenthesizedExpression(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block)IfStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the text of a TextView.", "call_func_name": ["android.widget.TextView.getText"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "166", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.getSelectedItem", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public Object getSelectedItem(){\n\t\t\n\t\tObject result = null;\n\t\t\n\t\tif(view instanceof AdapterView<?>){\n\t\t\tresult = ((AdapterView<?>) view).getSelectedItem();\n\t\t}\n\t\t\n\t\treturn result;\n\t\t\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleType#WildcardType#ParameterizedType#InstanceofExpression#SimpleName#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#CastExpression#ParenthesizedExpression#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InstanceofExpression(SimpleName)SimpleName(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType)WildcardType)ParameterizedType)InstanceofExpression(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(ParenthesizedExpression(CastExpression(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType)WildcardType)ParameterizedType(SimpleName)SimpleName)CastExpression)ParenthesizedExpression(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block)IfStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the selected item if current view is an adapter view.", "call_func_name": ["android.widget.AdapterView.getSelectedItem"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "167", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.getSelectedItemPosition", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public int getSelectedItemPosition(){\n\t\t\n\t\tint result = AdapterView.INVALID_POSITION;\n\t\t\n\t\tif(view instanceof AdapterView<?>){\n\t\t\tresult = ((AdapterView<?>) view).getSelectedItemPosition();\n\t\t}\n\t\t\n\t\treturn result;\n\t\t\n\t}", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#PrimitiveType#SimpleName#SimpleName#SimpleName#QualifiedName#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleType#WildcardType#ParameterizedType#InstanceofExpression#SimpleName#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#CastExpression#ParenthesizedExpression#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(Block(VariableDeclarationStatement(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InstanceofExpression(SimpleName)SimpleName(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType)WildcardType)ParameterizedType)InstanceofExpression(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(ParenthesizedExpression(CastExpression(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType)WildcardType)ParameterizedType(SimpleName)SimpleName)CastExpression)ParenthesizedExpression(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block)IfStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the selected item position if current view is an adapter view. Returns AdapterView.INVALID_POSITION if not valid.", "call_func_name": ["android.widget.AdapterView.getSelectedItemPosition"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "168", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.clicked", "methodParameterType": "Object#String#", "methodParameterName": "handler#method#", "methodBody": "public T clicked(Object handler, String method){\n\t\n\t\tCommon common = new Common().forward(handler, method, true, ON_CLICK_SIG);\n\t\treturn clicked(common);\n\t\t\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#SimpleName#SimpleName#SimpleName#BooleanLiteral#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Register a callback method for when the view is clicked. Method must have signature of method(View view).", "call_func_name": ["com.androidquery.util.Common.<init>", "com.androidquery.util.Common.forward"], "call_func_parameter": [[""], ["java.lang.Object", "java.lang.String", "boolean", "java.lang.Class[]"]], "passed_comments": "/"}, {"index": "169", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.clicked", "methodParameterType": "OnClickListener#", "methodParameterName": "listener#", "methodBody": "public T clicked(OnClickListener listener){\n\t\t\n\t\tif(view != null){\t\t\t\t\t\t\n\t\t\tview.setOnClickListener(listener);\n\t\t}\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Register a callback method for when the view is clicked.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "170", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.longClicked", "methodParameterType": "Object#String#", "methodParameterName": "handler#method#", "methodBody": "public T longClicked(Object handler, String method){\n\t\n\t\tCommon common = new Common().forward(handler, method, true, ON_CLICK_SIG);\n\t\treturn longClicked(common);\n\t\t\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#SimpleName#SimpleName#SimpleName#BooleanLiteral#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Register a callback method for when the view is long clicked. Method must have signature of method(View view).", "call_func_name": ["com.androidquery.util.Common.<init>", "com.androidquery.util.Common.forward"], "call_func_parameter": [[""], ["java.lang.Object", "java.lang.String", "boolean", "java.lang.Class[]"]], "passed_comments": "/"}, {"index": "171", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.longClicked", "methodParameterType": "OnLongClickListener#", "methodParameterName": "listener#", "methodBody": "public T longClicked(OnLongClickListener listener){\n\t\t\n\t\tif(view != null){\t\t\t\t\t\t\n\t\t\tview.setOnLongClickListener(listener);\n\t\t}\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Register a callback method for when the view is long clicked.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "172", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.itemClicked", "methodParameterType": "Object#String#", "methodParameterName": "handler#method#", "methodBody": "public T itemClicked(Object handler, String method){\n\t\t\n\t\tCommon common = new Common().forward(handler, method, true, ON_ITEM_SIG);\n\t\treturn itemClicked(common);\n\t\t\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#SimpleName#SimpleName#SimpleName#BooleanLiteral#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Register a callback method for when an item is clicked in the ListView. Method must have signature of method(AdapterView<?> parent, View v, int pos, long id).", "call_func_name": ["com.androidquery.util.Common.<init>", "com.androidquery.util.Common.forward"], "call_func_parameter": [[""], ["java.lang.Object", "java.lang.String", "boolean", "java.lang.Class[]"]], "passed_comments": "/"}, {"index": "173", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.itemClicked", "methodParameterType": "OnItemClickListener#", "methodParameterName": "listener#", "methodBody": "public T itemClicked(OnItemClickListener listener){\n\t\t\n\t\tif(view instanceof AdapterView){\n\t\t\n\t\t\tAdapterView<?> alv = (AdapterView<?>) view;\n\t\t\talv.setOnItemClickListener(listener);\n\t\t\t\n\t\t\n\t\t}\n\t\t\n\t\treturn self();\n\t\t\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#CastExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType)WildcardType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(CastExpression(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType)WildcardType)ParameterizedType(SimpleName)SimpleName)CastExpression)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Register a callback method for when an item is clicked in the ListView.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "174", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.itemLongClicked", "methodParameterType": "Object#String#", "methodParameterName": "handler#method#", "methodBody": "public T itemLongClicked(Object handler, String method){\n\t\t\n\t\tCommon common = new Common().forward(handler, method, true, ON_ITEM_SIG);\n\t\treturn itemLongClicked(common);\n\t\t\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#SimpleName#SimpleName#SimpleName#BooleanLiteral#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Register a callback method for when an item is long clicked in the ListView. Method must have signature of method(AdapterView<?> parent, View v, int pos, long id).", "call_func_name": ["com.androidquery.util.Common.<init>", "com.androidquery.util.Common.forward"], "call_func_parameter": [[""], ["java.lang.Object", "java.lang.String", "boolean", "java.lang.Class[]"]], "passed_comments": "/"}, {"index": "175", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.itemLongClicked", "methodParameterType": "OnItemLongClickListener#", "methodParameterName": "listener#", "methodBody": "public T itemLongClicked(OnItemLongClickListener listener){\n\t\t\n\t\tif(view instanceof AdapterView){\n\t\t\n\t\t\tAdapterView<?> alv = (AdapterView<?>) view;\n\t\t\talv.setOnItemLongClickListener(listener);\n\t\t\t\n\t\t\n\t\t}\n\t\t\n\t\treturn self();\n\t\t\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#CastExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType)WildcardType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(CastExpression(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType)WildcardType)ParameterizedType(SimpleName)SimpleName)CastExpression)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Register a callback method for when an item is long clicked in the ListView.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "176", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.itemSelected", "methodParameterType": "Object#String#", "methodParameterName": "handler#method#", "methodBody": "public T itemSelected(Object handler, String method){\n\t\t\t\t\n\t\tCommon common = new Common().forward(handler, method, true, ON_ITEM_SIG);\n\t\treturn itemSelected(common);\n\t\t\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#SimpleName#SimpleName#SimpleName#BooleanLiteral#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Register a callback method for when an item is selected. Method must have signature of method(AdapterView<?> parent, View v, int pos, long id).", "call_func_name": ["com.androidquery.util.Common.<init>", "com.androidquery.util.Common.forward"], "call_func_parameter": [[""], ["java.lang.Object", "java.lang.String", "boolean", "java.lang.Class[]"]], "passed_comments": "/"}, {"index": "177", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.itemSelected", "methodParameterType": "OnItemSelectedListener#", "methodParameterName": "listener#", "methodBody": "public T itemSelected(OnItemSelectedListener listener){\n\t\t\n\t\tif(view instanceof AdapterView){\t\t\n\t\t\tAdapterView<?> alv = (AdapterView<?>) view;\n\t\t\talv.setOnItemSelectedListener(listener);\t\t\n\t\t}\n\t\t\n\t\treturn self();\n\t\t\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#CastExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType)WildcardType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(CastExpression(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType)WildcardType)ParameterizedType(SimpleName)SimpleName)CastExpression)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Register a callback method for when an item is selected.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "178", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.setSelection", "methodParameterType": "int#", "methodParameterName": "position#", "methodBody": "public T setSelection(int position){\n\t\t\n\t\tif(view instanceof AdapterView){\t\t\n\t\t\tAdapterView<?> alv = (AdapterView<?>) view;\n\t\t\talv.setSelection(position);\t\t\n\t\t}\n\t\t\n\t\treturn self();\n\t\t\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#CastExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType)WildcardType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(CastExpression(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType)WildcardType)ParameterizedType(SimpleName)SimpleName)CastExpression)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set selected item of an AdapterView.", "call_func_name": ["android.widget.AdapterView.setSelection", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["int"], [""]], "passed_comments": "/"}, {"index": "179", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.scrolledBottom", "methodParameterType": "Object#String#", "methodParameterName": "handler#method#", "methodBody": "public T scrolledBottom(Object handler, String method){\n\t\t\n\t\tif(view instanceof AbsListView){\n\t\t\tsetScrollListener().forward(handler, method, true, ON_SCROLLED_STATE_SIG);\n\t\t}\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleName#BooleanLiteral#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(ExpressionStatement(MethodInvocation(MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Register a callback method for when a list is scrolled to bottom. Method must have signature of method(AbsListView view, int scrollState).", "call_func_name": ["com.androidquery.AbstractAQuery.setScrollListener", "com.androidquery.util.Common.forward", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [[""], ["java.lang.Object", "java.lang.String", "boolean", "java.lang.Class[]"], [""]], "passed_comments": "/"}, {"index": "180", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.scrolled", "methodParameterType": "OnScrollListener#", "methodParameterName": "listener#", "methodBody": "public T scrolled(OnScrollListener listener){\n\t\t\n\t\tif(view instanceof AbsListView){\n\t\t\tsetScrollListener().forward(listener);\n\t\t}\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(ExpressionStatement(MethodInvocation(MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Register an on scroll listener to a list view, grid view (or any AbsListView).", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "181", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.textChanged", "methodParameterType": "Object#String#", "methodParameterName": "handler#method#", "methodBody": "public T textChanged(Object handler, String method){\n\t\t\n\t\tif(view instanceof TextView){\t\t\t\n\t\t\n\t\t\tTextView tv = (TextView) view;\n\t\t\tCommon common = new Common().forward(handler, method, true, TEXT_CHANGE_SIG);\n\t\t\ttv.addTextChangedListener(common);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#SimpleName#SimpleName#SimpleName#BooleanLiteral#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Register a callback method for when a textview text is changed. Method must have signature of method(CharSequence s, int start, int before, int count)).", "call_func_name": ["com.androidquery.util.Common.<init>", "com.androidquery.util.Common.forward", "android.widget.TextView.addTextChangedListener", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [[""], ["java.lang.Object", "java.lang.String", "boolean", "java.lang.Class[]"], ["android.text.TextWatcher"], [""]], "passed_comments": "/"}, {"index": "182", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.overridePendingTransition5", "methodParameterType": "int#int#", "methodParameterName": "enterAnim#exitAnim#", "methodBody": "public T overridePendingTransition5(int enterAnim, int exitAnim){\n\t\t\n\t\tif(act != null){\n\t\t\tAQUtility.invokeHandler(act, \"overridePendingTransition\", false, false, PENDING_TRANSITION_SIG, enterAnim, exitAnim);\n\t\t}\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#StringLiteral#BooleanLiteral#BooleanLiteral#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(BooleanLiteral)BooleanLiteral(BooleanLiteral)BooleanLiteral(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Call the overridePendingTransition of the activity. Only applies when device API is 5+.", "call_func_name": ["java.lang.Integer.valueOf", "com.androidquery.util.AQUtility.invokeHandler", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["int"], ["java.lang.Object", "java.lang.String", "boolean", "boolean", "java.lang.Class[]", "java.lang.Object[]"], [""]], "passed_comments": "/"}, {"index": "183", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.setOverScrollMode9", "methodParameterType": "int#", "methodParameterName": "mode#", "methodBody": "public T setOverScrollMode9(int mode){\n\t\t\n\t\tif(view instanceof AbsListView){\n\t\t\tAQUtility.invokeHandler(view, \"setOverScrollMode\", false, false, OVER_SCROLL_SIG, mode);\n\t\t}\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleName#SimpleName#StringLiteral#BooleanLiteral#BooleanLiteral#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(BooleanLiteral)BooleanLiteral(BooleanLiteral)BooleanLiteral(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Call the setOverScrollMode of the view. Only applies when device API is 9+.", "call_func_name": ["java.lang.Integer.valueOf", "com.androidquery.util.AQUtility.invokeHandler", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["int"], ["java.lang.Object", "java.lang.String", "boolean", "boolean", "java.lang.Class[]", "java.lang.Object[]"], [""]], "passed_comments": "/"}, {"index": "184", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.setLayerType11", "methodParameterType": "int#Paint#", "methodParameterName": "type#paint#", "methodBody": "public T setLayerType11(int type, Paint paint){\n\t\t\n\t\tif(view != null){\n\t\t\t\n\t\t\tAQUtility.invokeHandler(view, \"setLayerType\", false, false, LAYER_TYPE_SIG, type, paint);\n\t\t}\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#StringLiteral#BooleanLiteral#BooleanLiteral#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral(BooleanLiteral)BooleanLiteral(BooleanLiteral)BooleanLiteral(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Call the setLayerType of the view. Only applies when device API is 11+. Type must be AQuery.LAYER_TYPE_SOFTWARE or AQuery.LAYER_TYPE_HARDWARE.", "call_func_name": ["java.lang.Integer.valueOf", "com.androidquery.util.AQUtility.invokeHandler", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["int"], ["java.lang.Object", "java.lang.String", "boolean", "boolean", "java.lang.Class[]", "java.lang.Object[]"], [""]], "passed_comments": "/"}, {"index": "185", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.invoke", "methodParameterType": "String#Class<?>[]#Object#", "methodParameterName": "method#sig#params#", "methodBody": "public Object invoke(String method, Class<?>[] sig, Object... params){\n\t\t\n\t\tObject handler = view;\n\t\tif(handler == null) handler = act;\n\t\t\n\t\treturn AQUtility.invokeHandler(handler, method, false, false, sig, params);\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#WildcardType#ParameterizedType#Dimension#ArrayType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#Assignment#ExpressionStatement#IfStatement#SimpleName#SimpleName#SimpleName#SimpleName#BooleanLiteral#BooleanLiteral#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ArrayType(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType)WildcardType)ParameterizedType(Dimension)Dimension)ArrayType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(SimpleName)SimpleName)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(ExpressionStatement(Assignment(SimpleName)SimpleName(SimpleName)SimpleName)Assignment)ExpressionStatement)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral(BooleanLiteral)BooleanLiteral(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Invoke the method on the current view.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "186", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.hardwareAccelerated11", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public T hardwareAccelerated11(){\n\t\t\n\t\tif(act != null){\n\t\t\tact.getWindow().setFlags(AQuery.FLAG_HARDWARE_ACCELERATED, AQuery.FLAG_HARDWARE_ACCELERATED);\n\t\t}\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleName#SimpleName#QualifiedName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the activity to be hardware accelerated. Only applies when device API is 11+.", "call_func_name": ["android.app.Activity.getWindow", "android.view.Window.setFlags", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [[""], ["int", "int"], [""]], "passed_comments": "/"}, {"index": "187", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.clear", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public T clear(){\n\t\t\n\t\tif(view != null){\n\t\t\t\n\t\t\tif(view instanceof ImageView){\n\t\t\t\tImageView iv = ((ImageView) view);\n\t\t\t\tiv.setImageBitmap(null);\n\t\t\t\tiv.setTag(AQuery.TAG_URL, null);\n\t\t\t}else if(view instanceof WebView){\n\t\t\t\tWebView wv = ((WebView) view);\n\t\t\t\twv.stopLoading();\n\t\t\t\twv.clearView();\n\t\t\t\twv.setTag(AQuery.TAG_URL, null);\n\t\t\t}else if(view instanceof TextView){\n\t\t\t\tTextView tv = ((TextView) view);\n\t\t\t\ttv.setText(\"\");\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#ParenthesizedExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#NullLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#NullLiteral#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#ParenthesizedExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#NullLiteral#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#CastExpression#ParenthesizedExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#StringLiteral#MethodInvocation#ExpressionStatement#Block#IfStatement#IfStatement#IfStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ParenthesizedExpression(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)ParenthesizedExpression)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NullLiteral)NullLiteral)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(NullLiteral)NullLiteral)MethodInvocation)ExpressionStatement)Block(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ParenthesizedExpression(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)ParenthesizedExpression)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(NullLiteral)NullLiteral)MethodInvocation)ExpressionStatement)Block(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ParenthesizedExpression(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)ParenthesizedExpression)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(StringLiteral)StringLiteral)MethodInvocation)ExpressionStatement)Block)IfStatement)IfStatement)IfStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Clear a view. Applies to ImageView, WebView, and TextView.", "call_func_name": ["android.widget.ImageView.setImageBitmap", "android.widget.ImageView.setTag", "android.webkit.WebView.stopLoading", "android.webkit.WebView.clearView", "android.webkit.WebView.setTag", "android.widget.TextView.setText", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["android.graphics.Bitmap"], ["int", "java.lang.Object"], [""], [""], ["int", "java.lang.Object"], ["java.lang.CharSequence"], [""]], "passed_comments": "/"}, {"index": "188", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.margin", "methodParameterType": "float#float#float#float#", "methodParameterName": "leftDip#topDip#rightDip#bottomDip#", "methodBody": "public T margin(float leftDip, float topDip, float rightDip, float bottomDip){\n\t\t\n\t\tif(view != null){\n\t\t\n\t\t\tLayoutParams lp = view.getLayoutParams();\n\t\t\t\n\t\t\tif(lp instanceof MarginLayoutParams){\n\t\t\t\n\t\t\t\tContext context = getContext();\n\t\t\t\t\t\n\t\t\t\tint left = AQUtility.dip2pixel(context, leftDip);\n\t\t\t\tint top = AQUtility.dip2pixel(context, topDip);\n\t\t\t\tint right = AQUtility.dip2pixel(context, rightDip);\n\t\t\t\tint bottom = AQUtility.dip2pixel(context, bottomDip);\n\t\t\t\t\n\t\t\t\t((MarginLayoutParams) lp).setMargins(left, top, right, bottom);\n\t\t\t\tview.setLayoutParams(lp);\n\t\t\t}\n\t\t\n\t\t}\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleType#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#PrimitiveType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#PrimitiveType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#PrimitiveType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#PrimitiveType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#CastExpression#ParenthesizedExpression#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(ParenthesizedExpression(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression)ParenthesizedExpression(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the margin of a view. Notes all parameters are in DIP, not in pixel.", "call_func_name": ["android.view.View.getLayoutParams", "com.androidquery.AbstractAQuery.getContext", "com.androidquery.util.AQUtility.dip2pixel", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [[""], [""], ["android.content.Context", "float"], [""]], "passed_comments": [{"com.androidquery.AbstractAQuery.getContext": "Return the context of activity or view."}]}, {"index": "189", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.width", "methodParameterType": "int#", "methodParameterName": "dip#", "methodBody": "public T width(int dip){\t\t\n\t\tsize(true, dip, true);\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#BooleanLiteral#SimpleName#BooleanLiteral#MethodInvocation#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral)MethodInvocation)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the width of a view in dip.  Can also be ViewGroup.LayoutParams.FILL_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT, or ViewGroup.LayoutParams.MATCH_PARENT.", "call_func_name": ["com.androidquery.AbstractAQuery.size", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["boolean", "int", "boolean"], [""]], "passed_comments": "/"}, {"index": "190", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.height", "methodParameterType": "int#", "methodParameterName": "dip#", "methodBody": "public T height(int dip){\t\t\n\t\tsize(false, dip, true);\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#BooleanLiteral#SimpleName#BooleanLiteral#MethodInvocation#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral)MethodInvocation)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the height of a view in dip.  Can also be ViewGroup.LayoutParams.FILL_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT, or ViewGroup.LayoutParams.MATCH_PARENT.", "call_func_name": ["com.androidquery.AbstractAQuery.size", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["boolean", "int", "boolean"], [""]], "passed_comments": "/"}, {"index": "191", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.width", "methodParameterType": "int#boolean#", "methodParameterName": "width#dip#", "methodBody": "public T width(int width, boolean dip){\t\t\n\t\tsize(true, width, dip);\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#BooleanLiteral#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the width of a view in dip or pixel.  Can also be ViewGroup.LayoutParams.FILL_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT, or ViewGroup.LayoutParams.MATCH_PARENT.", "call_func_name": ["com.androidquery.AbstractAQuery.size", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["boolean", "int", "boolean"], [""]], "passed_comments": "/"}, {"index": "192", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.height", "methodParameterType": "int#boolean#", "methodParameterName": "height#dip#", "methodBody": "public T height(int height, boolean dip){\t\t\n\t\tsize(false, height, dip);\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#BooleanLiteral#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Set the height of a view in dip or pixel.  Can also be ViewGroup.LayoutParams.FILL_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT, or ViewGroup.LayoutParams.MATCH_PARENT.", "call_func_name": ["com.androidquery.AbstractAQuery.size", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["boolean", "int", "boolean"], [""]], "passed_comments": "/"}, {"index": "193", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.getContext", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public Context getContext(){\n\t\tif(act != null){\n\t\t\treturn act;\n\t\t}\n\t\tif(root != null){\n\t\t\treturn root.getContext();\n\t\t}\n\t\treturn context;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#NullLiteral#InfixExpression#SimpleName#ReturnStatement#Block#IfStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#IfStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)IfStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)IfStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Return the context of activity or view.", "call_func_name": ["android.view.View.getContext"], "call_func_parameter": [[""]], "passed_comments": "/"}, {"index": "194", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.ajax", "methodParameterType": "AjaxCallback<K>#", "methodParameterName": "callback#", "methodBody": "public <K> T ajax(AjaxCallback<K> callback){\n\t\treturn invoke(callback);\n\t}", "AST": "Javadoc#Modifier#SimpleName#TypeParameter#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(TypeParameter(SimpleName)SimpleName)TypeParameter(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Advanced Ajax callback. User must manually prepare the callback object settings (url, type, etc...) by using its methods.", "call_func_name": ["com.androidquery.AbstractAQuery.invoke"], "call_func_parameter": [["com.androidquery.callback.AbstractAjaxCallback"]], "passed_comments": "/"}, {"index": "195", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.ajax", "methodParameterType": "String#Class<K>#AjaxCallback<K>#", "methodParameterName": "url#type#callback#", "methodBody": "public <K> T ajax(String url, Class<K> type, AjaxCallback<K> callback){\n\t\t\n\t\tcallback.type(type).url(url);\n\t\treturn ajax(callback);\n\t}", "AST": "Javadoc#Modifier#SimpleName#TypeParameter#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(TypeParameter(SimpleName)SimpleName)TypeParameter(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Ajax call with various callback data types.", "call_func_name": ["com.androidquery.callback.AjaxCallback.type", "com.androidquery.callback.AjaxCallback.url", "com.androidquery.AbstractAQuery.ajax"], "call_func_parameter": [["java.lang.Class"], ["java.lang.String"], ["com.androidquery.callback.AjaxCallback"]], "passed_comments": [{"com.androidquery.AbstractAQuery.ajax": "Advanced Ajax callback. User must manually prepare the callback object settings (url, type, etc...) by using its methods."}]}, {"index": "196", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.ajax", "methodParameterType": "String#Class<K>#long#AjaxCallback<K>#", "methodParameterName": "url#type#expire#callback#", "methodBody": "public <K> T ajax(String url, Class<K> type, long expire, AjaxCallback<K> callback){\n\t\t\n\t\tcallback.type(type).url(url).fileCache(true).expire(expire);\n\t\t\n\t\treturn ajax(callback);\n\t}", "AST": "Javadoc#Modifier#SimpleName#TypeParameter#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#BooleanLiteral#MethodInvocation#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(TypeParameter(SimpleName)SimpleName)TypeParameter(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Ajax call with various callback data types with file caching. The expire param is the duration to consider cached data expired (if hit). For example, expire = 15", "call_func_name": ["com.androidquery.callback.AjaxCallback.type", "com.androidquery.callback.AjaxCallback.url", "com.androidquery.callback.AjaxCallback.fileCache", "com.androidquery.callback.AjaxCallback.expire", "com.androidquery.AbstractAQuery.ajax"], "call_func_parameter": [["java.lang.Class"], ["java.lang.String"], ["boolean"], ["long"], ["com.androidquery.callback.AjaxCallback"]], "passed_comments": [{"com.androidquery.AbstractAQuery.ajax": "Advanced Ajax callback. User must manually prepare the callback object settings (url, type, etc...) by using its methods."}]}, {"index": "197", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.ajax", "methodParameterType": "String#Class<K>#Object#String#", "methodParameterName": "url#type#handler#callback#", "methodBody": "public <K> T ajax(String url, Class<K> type, Object handler, String callback){\n\t\t\n\t\t\n\t\tAjaxCallback<K> cb = new AjaxCallback<K>();\n\t\tcb.type(type).weakHandler(handler, callback);\n\t\t\n\t\treturn ajax(url, type, cb);\n\t\t\n\t}", "AST": "Javadoc#Modifier#SimpleName#TypeParameter#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(TypeParameter(SimpleName)SimpleName)TypeParameter(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Ajax call with various callback data types. The handler signature must be (String url, <K> object, AjaxStatus status)", "call_func_name": ["com.androidquery.callback.AjaxCallback.<init>", "com.androidquery.callback.AjaxCallback.type", "com.androidquery.callback.AjaxCallback.weakHandler", "com.androidquery.AbstractAQuery.ajax"], "call_func_parameter": [[""], ["java.lang.Class"], ["java.lang.Object", "java.lang.String"], ["java.lang.String", "java.lang.Class", "com.androidquery.callback.AjaxCallback"]], "passed_comments": [{"com.androidquery.AbstractAQuery.ajax": "Ajax call with various callback data types."}]}, {"index": "198", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.ajax", "methodParameterType": "String#Class<K>#long#Object#String#", "methodParameterName": "url#type#expire#handler#callback#", "methodBody": "public <K> T ajax(String url, Class<K> type, long expire, Object handler, String callback){\n\t\t\n\t\tAjaxCallback<K> cb = new AjaxCallback<K>();\n\t\tcb.type(type).weakHandler(handler, callback).fileCache(true).expire(expire);\n\t\t\n\t\treturn ajax(url, type, cb);\n\t}", "AST": "Javadoc#Modifier#SimpleName#TypeParameter#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#BooleanLiteral#MethodInvocation#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(TypeParameter(SimpleName)SimpleName)TypeParameter(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Ajax call with various callback data types with file caching. The expire param is the duration to consider cache data expired (if hit). For example, expire = 15", "call_func_name": ["com.androidquery.callback.AjaxCallback.<init>", "com.androidquery.callback.AjaxCallback.type", "com.androidquery.callback.AjaxCallback.weakHandler", "com.androidquery.callback.AjaxCallback.fileCache", "com.androidquery.callback.AjaxCallback.expire", "com.androidquery.AbstractAQuery.ajax"], "call_func_parameter": [[""], ["java.lang.Class"], ["java.lang.Object", "java.lang.String"], ["boolean"], ["long"], ["java.lang.String", "java.lang.Class", "com.androidquery.callback.AjaxCallback"]], "passed_comments": [{"com.androidquery.AbstractAQuery.ajax": "Ajax call with various callback data types."}]}, {"index": "199", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.ajax", "methodParameterType": "String#Map<String,?>#Class<K>#AjaxCallback<K>#", "methodParameterName": "url#params#type#callback#", "methodBody": "public <K> T ajax(String url, Map<String, ?> params, Class<K> type, AjaxCallback<K> callback){\n\t\t\n\t\tcallback.type(type).url(url).params(params);\n\t\treturn ajax(callback);\n\t}", "AST": "Javadoc#Modifier#SimpleName#TypeParameter#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(TypeParameter(SimpleName)SimpleName)TypeParameter(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType)WildcardType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Ajax call with POST method. The handler signature must be (String url, <K> object, AjaxStatus status)", "call_func_name": ["com.androidquery.callback.AjaxCallback.type", "com.androidquery.callback.AjaxCallback.url", "com.androidquery.callback.AjaxCallback.params", "com.androidquery.AbstractAQuery.ajax"], "call_func_parameter": [["java.lang.Class"], ["java.lang.String"], ["java.util.Map"], ["com.androidquery.callback.AjaxCallback"]], "passed_comments": [{"com.androidquery.AbstractAQuery.ajax": "Advanced Ajax callback. User must manually prepare the callback object settings (url, type, etc...) by using its methods."}]}, {"index": "200", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.ajax", "methodParameterType": "String#Map<String,?>#Class<K>#Object#String#", "methodParameterName": "url#params#type#handler#callback#", "methodBody": "public <K> T ajax(String url, Map<String, ?> params, Class<K> type, Object handler, String callback){\n\t\t\n\t\t\n\t\tAjaxCallback<K> cb = new AjaxCallback<K>();\n\t\tcb.type(type).weakHandler(handler, callback);\n\t\t\n\t\treturn ajax(url, params, type, cb);\n\t\t\n\t}", "AST": "Javadoc#Modifier#SimpleName#TypeParameter#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#WildcardType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(TypeParameter(SimpleName)SimpleName)TypeParameter(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType(WildcardType)WildcardType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Ajax call with POST method. The handler signature must be (String url, <K> object, AjaxStatus status)", "call_func_name": ["com.androidquery.callback.AjaxCallback.<init>", "com.androidquery.callback.AjaxCallback.type", "com.androidquery.callback.AjaxCallback.weakHandler", "com.androidquery.AbstractAQuery.ajax"], "call_func_parameter": [[""], ["java.lang.Class"], ["java.lang.Object", "java.lang.String"], ["java.lang.String", "java.util.Map", "java.lang.Class", "com.androidquery.callback.AjaxCallback"]], "passed_comments": [{"com.androidquery.AbstractAQuery.ajax": "Ajax call with POST method. The handler signature must be (String url, <K> object, AjaxStatus status)"}]}, {"index": "201", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.delete", "methodParameterType": "String#Class<K>#AjaxCallback<K>#", "methodParameterName": "url#type#callback#", "methodBody": "public <K> T delete(String url, Class<K> type, AjaxCallback<K> callback){\n\t\t\n\t\tcallback.url(url).type(type).method(AQuery.METHOD_DELETE);\t\t\n\t\treturn ajax(callback);\n\t\t\n\t}", "AST": "Javadoc#Modifier#SimpleName#TypeParameter#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(TypeParameter(SimpleName)SimpleName)TypeParameter(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Ajax HTTP delete.", "call_func_name": ["com.androidquery.callback.AjaxCallback.url", "com.androidquery.callback.AjaxCallback.type", "com.androidquery.callback.AjaxCallback.method", "com.androidquery.AbstractAQuery.ajax"], "call_func_parameter": [["java.lang.String"], ["java.lang.Class"], ["int"], ["com.androidquery.callback.AjaxCallback"]], "passed_comments": [{"com.androidquery.AbstractAQuery.ajax": "Advanced Ajax callback. User must manually prepare the callback object settings (url, type, etc...) by using its methods."}]}, {"index": "202", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.put", "methodParameterType": "String#String#HttpEntity#Class<K>#AjaxCallback<K>#", "methodParameterName": "url#contentHeader#entity#type#callback#", "methodBody": "public <K> T put(String url, String contentHeader, HttpEntity entity, Class<K> type, AjaxCallback<K> callback){\n\t\t\n\t\tcallback.url(url).type(type).method(AQuery.METHOD_PUT).header(\"Content-Type\", contentHeader).param(AQuery.POST_ENTITY, entity);\t\t\n\t\treturn ajax(callback);\n\t\t\n\t}", "AST": "Javadoc#Modifier#SimpleName#TypeParameter#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#SimpleName#StringLiteral#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(TypeParameter(SimpleName)SimpleName)TypeParameter(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation(SimpleName)SimpleName(StringLiteral)StringLiteral(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Ajax HTTP put.", "call_func_name": ["com.androidquery.callback.AjaxCallback.url", "com.androidquery.callback.AjaxCallback.type", "com.androidquery.callback.AjaxCallback.method", "com.androidquery.callback.AjaxCallback.header", "com.androidquery.callback.AjaxCallback.param", "com.androidquery.AbstractAQuery.ajax"], "call_func_parameter": [["java.lang.String"], ["java.lang.Class"], ["int"], ["java.lang.String", "java.lang.String"], ["java.lang.String", "java.lang.Object"], ["com.androidquery.callback.AjaxCallback"]], "passed_comments": [{"com.androidquery.AbstractAQuery.ajax": "Advanced Ajax callback. User must manually prepare the callback object settings (url, type, etc...) by using its methods."}]}, {"index": "203", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.delete", "methodParameterType": "String#Class<K>#Object#String#", "methodParameterName": "url#type#handler#callback#", "methodBody": "public <K> T delete(String url, Class<K> type, Object handler, String callback){\n\t\t\n\t\tAjaxCallback<K> cb = new AjaxCallback<K>();\n\t\tcb.weakHandler(handler, callback);\n\t\t\n\t\treturn delete(url, type, cb);\n\t\t\n\t}", "AST": "Javadoc#Modifier#SimpleName#TypeParameter#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(TypeParameter(SimpleName)SimpleName)TypeParameter(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Ajax HTTP delete. The handler signature must be (String url, <K> object, AjaxStatus status)", "call_func_name": ["com.androidquery.callback.AjaxCallback.<init>", "com.androidquery.callback.AjaxCallback.weakHandler", "com.androidquery.AbstractAQuery.delete"], "call_func_parameter": [[""], ["java.lang.Object", "java.lang.String"], ["java.lang.String", "java.lang.Class", "com.androidquery.callback.AjaxCallback"]], "passed_comments": [{"com.androidquery.AbstractAQuery.delete": "Ajax HTTP delete."}]}, {"index": "204", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.sync", "methodParameterType": "AjaxCallback<K>#", "methodParameterName": "callback#", "methodBody": "public <K> T sync(AjaxCallback<K> callback){\n\t\tajax(callback);\n\t\tcallback.block();\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#TypeParameter#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(TypeParameter(SimpleName)SimpleName)TypeParameter(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Ajax call with that block until response is ready. This method cannot be called on UI thread.", "call_func_name": ["com.androidquery.AbstractAQuery.ajax", "com.androidquery.callback.AjaxCallback.block", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["com.androidquery.callback.AjaxCallback"], [""], [""]], "passed_comments": [{"com.androidquery.AbstractAQuery.ajax": "Advanced Ajax callback. User must manually prepare the callback object settings (url, type, etc...) by using its methods."}]}, {"index": "205", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.cache", "methodParameterType": "String#long#", "methodParameterName": "url#expire#", "methodBody": "public T cache(String url, long expire){\t\t\n\t\treturn ajax(url, byte[].class, expire, null, null);\t\t\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#PrimitiveType#Dimension#ArrayType#TypeLiteral#SimpleName#NullLiteral#NullLiteral#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(TypeLiteral(ArrayType(PrimitiveType)PrimitiveType(Dimension)Dimension)ArrayType)TypeLiteral(SimpleName)SimpleName(NullLiteral)NullLiteral(NullLiteral)NullLiteral)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Cache the url to file cache without any callback.", "call_func_name": ["com.androidquery.AbstractAQuery.ajax"], "call_func_parameter": [["java.lang.String", "java.lang.Class", "long", "java.lang.Object", "java.lang.String"]], "passed_comments": [{"com.androidquery.AbstractAQuery.ajax": "Ajax call with various callback data types with file caching. The expire param is the duration to consider cache data expired (if hit). For example, expire = 15"}]}, {"index": "206", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.ajaxCancel", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public T ajaxCancel(){\n\t\t\n\t\tAjaxCallback.cancel();\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Stop all ajax activities. Should only be called when app exits.", "call_func_name": ["com.androidquery.callback.AjaxCallback.cancel", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [[""], [""]], "passed_comments": "/"}, {"index": "207", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.getCachedFile", "methodParameterType": "String#", "methodParameterName": "url#", "methodBody": "public File getCachedFile(String url){\n\t\n\t\t//return AQUtility.getExistedCacheByUrl(AQUtility.getCacheDir(getContext()), url);\n\t\tFile result = AQUtility.getExistedCacheByUrl(AQUtility.getCacheDir(getContext(), AQuery.CACHE_PERSISTENT), url);\n\t\tif(result == null) result = AQUtility.getExistedCacheByUrl(AQUtility.getCacheDir(getContext(), AQuery.CACHE_DEFAULT), url);\n\t\treturn result;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#QualifiedName#MethodInvocation#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#QualifiedName#MethodInvocation#SimpleName#MethodInvocation#Assignment#ExpressionStatement#IfStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName)MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName)MethodInvocation(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)IfStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Return file cached by ajax or image requests. Returns null if url is not cached.", "call_func_name": ["com.androidquery.AbstractAQuery.getContext", "com.androidquery.util.AQUtility.getCacheDir", "com.androidquery.util.AQUtility.getExistedCacheByUrl"], "call_func_parameter": [[""], ["android.content.Context", "int"], ["java.io.File", "java.lang.String"]], "passed_comments": [{"com.androidquery.AbstractAQuery.getContext": "Return the context of activity or view."}]}, {"index": "208", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.invalidate", "methodParameterType": "String#", "methodParameterName": "url#", "methodBody": "public T invalidate(String url){\n\n\t\tFile file = getCachedFile(url);\n\t\tif (file != null)\n\t\t\tfile.delete();\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Delete any cached file for the url.", "call_func_name": ["com.androidquery.AbstractAQuery.getCachedFile", "java.io.File.delete", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["java.lang.String"], [""], [""]], "passed_comments": [{"com.androidquery.AbstractAQuery.getCachedFile": "Return file cached by ajax or image requests. Returns null if url is not cached."}]}, {"index": "209", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.getCachedImage", "methodParameterType": "String#", "methodParameterName": "url#", "methodBody": "public Bitmap getCachedImage(String url){\n\t\treturn getCachedImage(url, 0);\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#NumberLiteral#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Return bitmap cached by image requests. Returns null if url is not cached.", "call_func_name": ["com.androidquery.AbstractAQuery.getCachedImage"], "call_func_parameter": [["java.lang.String", "int"]], "passed_comments": [{"com.androidquery.AbstractAQuery.getCachedImage": "Return bitmap cached by image requests. Returns null if url is not cached."}]}, {"index": "210", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.getCachedImage", "methodParameterType": "String#int#", "methodParameterName": "url#targetWidth#", "methodBody": "public Bitmap getCachedImage(String url, int targetWidth){\n\t\t\n\t\tBitmap result = BitmapAjaxCallback.getMemoryCached(url, targetWidth);\n\t\tif(result == null){\n\t\t\tFile file = getCachedFile(url);\n\t\t\tif(file != null){\n\t\t\t\tresult = BitmapAjaxCallback.getResizedImage(file.getAbsolutePath(), null, targetWidth, true, 0);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#NullLiteral#SimpleName#BooleanLiteral#NumberLiteral#MethodInvocation#Assignment#ExpressionStatement#Block#IfStatement#Block#IfStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(NullLiteral)NullLiteral(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral(NumberLiteral)NumberLiteral)MethodInvocation)Assignment)ExpressionStatement)Block)IfStatement)Block)IfStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Return bitmap cached by image requests. Returns null if url is not cached.", "call_func_name": ["com.androidquery.callback.BitmapAjaxCallback.getMemoryCached", "com.androidquery.AbstractAQuery.getCachedFile", "java.io.File.getAbsolutePath", "com.androidquery.callback.BitmapAjaxCallback.getResizedImage"], "call_func_parameter": [["java.lang.String", "int"], ["java.lang.String"], [""], ["java.lang.String", "byte[]", "int", "boolean", "int"]], "passed_comments": [{"com.androidquery.callback.BitmapAjaxCallback.getMemoryCached": "Gets the memory cached bitmap."}, {"com.androidquery.AbstractAQuery.getCachedFile": "Return file cached by ajax or image requests. Returns null if url is not cached."}]}, {"index": "211", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.getCachedImage", "methodParameterType": "int#", "methodParameterName": "resId#", "methodBody": "public Bitmap getCachedImage(int resId){\t\t\n\t\treturn BitmapAjaxCallback.getMemoryCached(getContext(), resId);\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Return cached bitmap with a resourceId. Returns null if url is not cached. Use this method instead of BitmapFactory.decodeResource(getResources(), resId) for caching.", "call_func_name": ["com.androidquery.AbstractAQuery.getContext", "com.androidquery.callback.BitmapAjaxCallback.getMemoryCached"], "call_func_parameter": [[""], ["android.content.Context", "int"]], "passed_comments": [{"com.androidquery.AbstractAQuery.getContext": "Return the context of activity or view."}]}, {"index": "212", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.shouldDelay", "methodParameterType": "View#ViewGroup#String#float#", "methodParameterName": "convertView#parent#url#velocity#", "methodBody": "@Deprecated public boolean shouldDelay(View convertView, ViewGroup parent, String url, float velocity){\n\t\treturn Common.shouldDelay(convertView, parent, url, velocity, true);\n\t}", "AST": "Javadoc#SimpleName#MarkerAnnotation#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#BooleanLiteral#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "@deprecated  As of release 0.21.3, replaced by shouldDelay(int position, View convertView, ViewGroup parent, String url)This method is less efficient and promote file check which could hold up the UI thread. {@link #shouldDelay(int position,View convertView,ViewGroup parent,String url)}", "call_func_name": ["com.androidquery.util.Common.shouldDelay"], "call_func_parameter": [["android.view.View", "android.view.ViewGroup", "java.lang.String", "float", "boolean"]], "passed_comments": "/"}, {"index": "213", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.shouldDelay", "methodParameterType": "View#ViewGroup#String#float#boolean#", "methodParameterName": "convertView#parent#url#velocity#fileCheck#", "methodBody": "@Deprecated public boolean shouldDelay(View convertView, ViewGroup parent, String url, float velocity, boolean fileCheck){\n\t\treturn Common.shouldDelay(convertView, parent, url, velocity, fileCheck);\n\t}", "AST": "Javadoc#SimpleName#MarkerAnnotation#Modifier#PrimitiveType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(MarkerAnnotation(SimpleName)SimpleName)MarkerAnnotation(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "@deprecated  As of release 0.21.3, replaced by shouldDelay(int position, View convertView, ViewGroup parent, String url)This method is less efficient and promote file check which could hold up the UI thread. {@link #shouldDelay(int position,View convertView,ViewGroup parent,String url)}", "call_func_name": ["com.androidquery.util.Common.shouldDelay"], "call_func_parameter": [["android.view.View", "android.view.ViewGroup", "java.lang.String", "float", "boolean"]], "passed_comments": "/"}, {"index": "214", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.shouldDelay", "methodParameterType": "int#boolean#View#ViewGroup#String#", "methodParameterName": "groupPosition#isExpanded#convertView#parent#url#", "methodBody": "public boolean shouldDelay(int groupPosition, boolean isExpanded, View convertView, ViewGroup parent, String url){\n\t\treturn Common.shouldDelay(groupPosition, -1, convertView, parent, url);\n\t}", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#NumberLiteral#PrefixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(PrefixExpression(NumberLiteral)NumberLiteral)PrefixExpression(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Determines if a group item of an expandable list should delay loading a url resource. Designed to be used inside getGroupView(int groupPosition, boolean isExpanded, View convertView, ViewGroup parent)  of an expandable list adapter.", "call_func_name": ["com.androidquery.util.Common.shouldDelay"], "call_func_parameter": [["int", "int", "android.view.View", "android.view.ViewGroup", "java.lang.String"]], "passed_comments": "/"}, {"index": "215", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.shouldDelay", "methodParameterType": "int#int#boolean#View#ViewGroup#String#", "methodParameterName": "groupPosition#childPosition#isLastChild#convertView#parent#url#", "methodBody": "public boolean shouldDelay(int groupPosition, int childPosition, boolean isLastChild, View convertView, ViewGroup parent, String url){\n\t\n\t\treturn Common.shouldDelay(groupPosition, childPosition, convertView, parent, url);\n\t}", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Determines if a child item of an expandable list item should delay loading a url resource. Designed to be used inside  getChildView(int groupPosition, int childPosition, boolean isLastChild, View convertView, ViewGroup parent) of an expandable list adapter.", "call_func_name": ["com.androidquery.util.Common.shouldDelay"], "call_func_parameter": [["int", "int", "android.view.View", "android.view.ViewGroup", "java.lang.String"]], "passed_comments": "/"}, {"index": "216", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.shouldDelay", "methodParameterType": "int#View#ViewGroup#String#", "methodParameterName": "position#convertView#parent#url#", "methodBody": "public boolean shouldDelay(int position, View convertView, ViewGroup parent, String url){\n\t\tif(parent instanceof ExpandableListView){\n\t\t\tthrow new IllegalArgumentException(\"Please use the other shouldDelay methods for expandable list.\");\n\t\t}\n\t\treturn Common.shouldDelay(position, convertView, parent, url);\n\t}", "AST": "Javadoc#Modifier#PrimitiveType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleType#StringLiteral#ClassInstanceCreation#ThrowStatement#Block#IfStatement#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(PrimitiveType)PrimitiveType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(StringLiteral)StringLiteral)ClassInstanceCreation)ThrowStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Determines if a list or gallery view item should delay loading a url resource because the view is scrolling very fast. The primary purpose of this method is to skip loading remote resources (such as images) over the internet  until the list stop flinging and the user is focusing on the displaying items. If the scrolling stops and there are delayed items displaying, the getView method will be called again to force the delayed items to be redrawn. During redraw, this method will always return false, thus allowing a particular  resource to be loaded. Designed to be used inside getView(int position, View convertView, ViewGroup parent) of an adapter. <br> <br> Example usage: <pre> public View getView(int position, View convertView, ViewGroup parent) { ... if(aq.shouldDelay(position, convertView, parent, tbUrl)){ aq.id(R.id.tb).image(placeholder); }else{ aq.id(R.id.tb).image(tbUrl, true, true, 0, 0, placeholder, 0, 0); } ... } </pre> <br> NOTE:  <br> This method uses the setOnScrollListener() method and will override any previously non-aquery assigned scroll listener. If a scrolled listener is required, use the aquery method scrolled(OnScrollListener listener) to set the listener instead of directly calling setOnScrollListener().", "call_func_name": ["java.lang.IllegalArgumentException.<init>", "com.androidquery.util.Common.shouldDelay"], "call_func_parameter": [["java.lang.String"], ["int", "android.view.View", "android.view.ViewGroup", "java.lang.String"]], "passed_comments": "/"}, {"index": "217", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.makeSharedFile", "methodParameterType": "String#String#", "methodParameterName": "url#filename#", "methodBody": "public File makeSharedFile(String url, String filename){\n\t\t\n\t\tFile file = null;\n\t\t\n\t\ttry{\n\t\t\n\t\t\tFile cached = getCachedFile(url);\n\t\t\t\n\t\t\tif(cached != null){\n\t\t\t\n\t\t\t\tFile temp = AQUtility.getTempDir();\n\t\t\t\t\n\t\t\t\tif(temp != null){\n\t\t\t\t\n\t\t\t\t\tfile = new File(temp, filename);\n\t\t\t\t\tfile.createNewFile();\n\t\t\t\t\t\n\t\t\t\t\tFileInputStream fis = new FileInputStream(cached);\n\t\t\t\t\tFileOutputStream fos = new FileOutputStream(file);\n\t\t\t\t\t\n\t\t\t\t    FileChannel ic = fis.getChannel();\n\t\t\t\t    FileChannel oc = fos.getChannel();\n\t\t\t\t    \n\t\t\t\t    try{\n\t\t\t\t    \tic.transferTo(0, ic.size(), oc);\n\t\t\t\t    }finally{\n\t\t\t\t    \tAQUtility.close(fis);\n\t\t\t\t    \tAQUtility.close(fos);\n\t\t\t\t    \tAQUtility.close(ic);\n\t\t\t\t    \tAQUtility.close(oc);\n\t\t\t\t    }\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t}catch(Exception e){\n\t\t\tAQUtility.debug(e);\n\t\t}\n\t\t\n\t\treturn file;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#ClassInstanceCreation#Assignment#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#NumberLiteral#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#TryStatement#Block#IfStatement#Block#IfStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#CatchClause#TryStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SimpleName)SimpleName)ClassInstanceCreation)Assignment)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)TryStatement)Block)IfStatement)Block)IfStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)CatchClause)TryStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Create a temporary file on EXTERNAL storage (sdcard) that holds the cached content of the url. Returns null if url is not cached, or the system cannot create such file (sdcard is absent, such as in emulator). The returned file is accessable to all apps, therefore it is ideal for sharing content (such as photo) via the intent mechanism. <br> <br> Example Usage: <pre> Intent intent = new Intent(Intent.ACTION_SEND); intent.setType(\"image/jpeg\"); intent.putExtra(Intent.EXTRA_STREAM, Uri.fromFile(file)); startActivityForResult(Intent.createChooser(intent, \"Share via:\"), 0); </pre> <br> The temp file will be deleted when AQUtility.cleanCacheAsync is invoked, or the file can be explicitly deleted after use.", "call_func_name": ["com.androidquery.AbstractAQuery.getCachedFile", "com.androidquery.util.AQUtility.getTempDir", "java.io.File.<init>", "java.io.File.createNewFile", "java.io.FileInputStream.<init>", "java.io.FileOutputStream.<init>", "java.io.FileInputStream.getChannel", "java.io.FileOutputStream.getChannel", "java.nio.channels.FileChannel.size", "java.nio.channels.FileChannel.transferTo", "com.androidquery.util.AQUtility.close", "com.androidquery.util.AQUtility.debug"], "call_func_parameter": [["java.lang.String"], [""], ["java.io.File", "java.lang.String"], [""], ["java.io.File"], ["java.io.File"], [""], [""], [""], ["long", "long", "java.nio.channels.WritableByteChannel"], ["java.io.Closeable"], ["java.lang.Throwable"]], "passed_comments": [{"com.androidquery.AbstractAQuery.getCachedFile": "Return file cached by ajax or image requests. Returns null if url is not cached."}]}, {"index": "218", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.animate", "methodParameterType": "int#", "methodParameterName": "animId#", "methodBody": "public T animate(int animId){\n\t\treturn animate(animId, null);\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#NullLiteral#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NullLiteral)NullLiteral)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Starts an animation on the view. <br> contributed by: marcosbeirigo", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "219", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.animate", "methodParameterType": "int#AnimationListener#", "methodParameterName": "animId#listener#", "methodBody": "public T animate(int animId, AnimationListener listener){\n\t\tAnimation anim = AnimationUtils.loadAnimation(getContext(), animId);\n\t\tanim.setAnimationListener(listener);\n\t\treturn animate(anim);\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Starts an animation on the view. <br> contributed by: marcosbeirigo", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "220", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.animate", "methodParameterType": "Animation#", "methodParameterName": "anim#", "methodBody": "public T animate(Animation anim){\n\t\tif(view != null && anim != null){\n\t\t\tview.startAnimation(anim);\n\t\t}\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#NullLiteral#InfixExpression#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Starts an animation on the view. <br> contributed by: marcosbeirigo", "call_func_name": ["android.view.View.startAnimation", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["android.view.animation.Animation"], [""]], "passed_comments": "/"}, {"index": "221", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.click", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public T click(){\n\t\tif(view != null){\n\t\t\tview.performClick();\n\t\t}\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Trigger click event <br> contributed by: neocoin", "call_func_name": ["android.view.View.performClick", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [[""], [""]], "passed_comments": "/"}, {"index": "222", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.longClick", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public T longClick(){\n\t\tif(view != null){\n\t\t\tview.performLongClick();\n\t\t}\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Trigger long click event <br> contributed by: neocoin", "call_func_name": ["android.view.View.performLongClick", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [[""], [""]], "passed_comments": "/"}, {"index": "223", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.show", "methodParameterType": "Dialog#", "methodParameterName": "dialog#", "methodBody": "public T show(Dialog dialog){\n\t\t\n\t\ttry{\n\t\t\tif(dialog != null){\n\t\t\t\tdialog.show();\n\t\t\t\tdialogs.put(dialog, null);\n\t\t\t}\n\t\t}catch(Exception e){\t\t\t\n\t\t}\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#NullLiteral#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#Block#CatchClause#TryStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(TryStatement(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(NullLiteral)NullLiteral)MethodInvocation)ExpressionStatement)Block)IfStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block)Block)CatchClause)TryStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Show a dialog. Method dismiss() or dismissAll() should be called later.", "call_func_name": ["android.app.Dialog.show", "java.util.WeakHashMap.put", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [[""], ["java.lang.Object", "java.lang.Object"], [""]], "passed_comments": "/"}, {"index": "224", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.dismiss", "methodParameterType": "Dialog#", "methodParameterName": "dialog#", "methodBody": "public T dismiss(Dialog dialog){\n\t\t\n\t\ttry{\n\t\t\tif(dialog != null){\t\t\t\n\t\t\t\tdialogs.remove(dialog);\n\t\t\t\tdialog.dismiss();\n\t\t\t}\n\t\t}catch(Exception e){\t\t\t\n\t\t}\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#IfStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#Block#CatchClause#TryStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(TryStatement(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)IfStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block)Block)CatchClause)TryStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Dismiss a dialog previously shown with show().", "call_func_name": ["java.util.WeakHashMap.keySet", "java.util.Set.iterator", "java.util.Iterator.hasNext", "java.util.Iterator.next", "android.app.Dialog.dismiss", "java.util.Iterator.remove", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [[""], [""], [""], [""], [""], [""], [""]], "passed_comments": "/"}, {"index": "225", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.dismiss", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public T dismiss(){\n\t\t\n\t\tIterator<Dialog> keys = dialogs.keySet().iterator();\n\t\t\n\t\twhile(keys.hasNext()){\n\t\t\t\n\t\t\tDialog d = keys.next();\n\t\t\ttry{\n\t\t\t\td.dismiss();\n\t\t\t}catch(Exception e){\t\t\t\t\n\t\t\t}\n\t\t\tkeys.remove();\n\t\t\t\n\t\t}\n\t\treturn self();\n\t\t\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#Block#CatchClause#TryStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#Block#WhileStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(WhileStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block)Block)CatchClause)TryStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement)Block)WhileStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Dismiss any AQuery dialogs.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "226", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.webImage", "methodParameterType": "String#", "methodParameterName": "url#", "methodBody": "public T webImage(String url){\n\t\treturn webImage(url, true, false, 0xFF000000);\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#BooleanLiteral#BooleanLiteral#NumberLiteral#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral(BooleanLiteral)BooleanLiteral(NumberLiteral)NumberLiteral)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Load the webview with an image with a url. Zoom is enabled without zoom control. Default background color is solid black (0xFF000000).", "call_func_name": ["com.androidquery.AbstractAQuery.webImage"], "call_func_parameter": [["java.lang.String", "boolean", "boolean", "int"]], "passed_comments": [{"com.androidquery.AbstractAQuery.webImage": "Load the webview with an image with a url. Zoom control can only be disabled for API level 14+. Lower level apis will always show zoom control if zoom is enabled. Note that color is AARRGGBB, where AA is the alpha value. Solid color (0xFF??????) should be used for performance reason. Transparent background is not well supported by WebView in most devices."}]}, {"index": "227", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.webImage", "methodParameterType": "String#boolean#boolean#int#", "methodParameterName": "url#zoom#control#color#", "methodBody": "public T webImage(String url, boolean zoom, boolean control, int color){\n\t\t\n\t\tif(view instanceof WebView){\n\t\t\tsetLayerType11(AQuery.LAYER_TYPE_SOFTWARE, null);\n\t\t\t\n\t\t\tWebImage wi = new WebImage((WebView) view, url, progress, zoom, control, color);\n\t\t\twi.load();\n\t\t\tprogress = null;\n\t\t}\n\t\t\n\t\treturn self();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleType#InstanceofExpression#SimpleName#SimpleName#SimpleName#QualifiedName#NullLiteral#MethodInvocation#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#CastExpression#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#NullLiteral#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InstanceofExpression(SimpleName)SimpleName(SimpleType(SimpleName)SimpleName)SimpleType)InstanceofExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(NullLiteral)NullLiteral)MethodInvocation)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)CastExpression(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ExpressionStatement(Assignment(SimpleName)SimpleName(NullLiteral)NullLiteral)Assignment)ExpressionStatement)Block)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Load the webview with an image with a url. Zoom control can only be disabled for API level 14+. Lower level apis will always show zoom control if zoom is enabled. Note that color is AARRGGBB, where AA is the alpha value. Solid color (0xFF??????) should be used for performance reason. Transparent background is not well supported by WebView in most devices.", "call_func_name": ["com.androidquery.AbstractAQuery.setLayerType11", "com.androidquery.util.WebImage.<init>", "com.androidquery.util.WebImage.load", "com.androidquery.AbstractAQuery.self"], "call_func_parameter": [["int", "android.graphics.Paint"], ["android.webkit.WebView", "java.lang.String", "java.lang.Object", "boolean", "boolean", "int"], [""], [""]], "passed_comments": [{"com.androidquery.AbstractAQuery.setLayerType11": "Call the setLayerType of the view. Only applies when device API is 11+. Type must be AQuery.LAYER_TYPE_SOFTWARE or AQuery.LAYER_TYPE_HARDWARE."}]}, {"index": "228", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.inflate", "methodParameterType": "View#int#ViewGroup#", "methodParameterName": "convertView#layoutId#root#", "methodBody": "public View inflate(View convertView, int layoutId, ViewGroup root){\n\t\t\n\t\tif(convertView != null){\n\t\t\tInteger layout = (Integer) convertView.getTag(AQuery.TAG_LAYOUT);\n\t\t\tif(layout != null && layout.intValue() == layoutId){\n\t\t\t\treturn convertView;\n\t\t\t}\n\t\t}\n\t\t\n\t\tLayoutInflater inflater = null;\n\t\t\n\t\tif(act != null){\n\t\t\tinflater = act.getLayoutInflater();\n\t\t}else{\n\t\t\tinflater = (LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n\t\t}\n\t\t\n\t\tView view = inflater.inflate(layoutId, root, false);\t\n\t\tview.setTag(AQuery.TAG_LAYOUT, layoutId);\n\t\t\n\t\treturn view;\n\t\t\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#CastExpression#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#MethodInvocation#SimpleName#InfixExpression#InfixExpression#SimpleName#ReturnStatement#Block#IfStatement#Block#IfStatement#SimpleName#SimpleType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#Block#SimpleName#SimpleName#SimpleType#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleName#QualifiedName#MethodInvocation#CastExpression#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#BooleanLiteral#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#QualifiedName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation)CastExpression)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName)InfixExpression)InfixExpression(Block(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)IfStatement)Block)IfStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement)Block(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(MethodInvocation(MethodInvocation(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName)MethodInvocation)CastExpression)Assignment)ExpressionStatement)Block)IfStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(BooleanLiteral)BooleanLiteral)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(QualifiedName(SimpleName)SimpleName(SimpleName)SimpleName)QualifiedName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Inflate a view from xml layout. This method is similar to LayoutInflater.inflate() but with sanity checks against the layout type of the convert view.  If the convertView is null or the convertView type doesn't matches layoutId type, a new view is inflated. Otherwise the convertView will be returned for reuse.", "call_func_name": ["android.view.View.getTag", "java.lang.Integer.intValue", "android.app.Activity.getLayoutInflater", "com.androidquery.AbstractAQuery.getContext", "android.content.Context.getSystemService", "android.view.LayoutInflater.inflate", "java.lang.Integer.valueOf", "android.view.View.setTag"], "call_func_parameter": [["int"], [""], [""], [""], ["java.lang.String"], ["int", "android.view.ViewGroup", "boolean"], ["int"], ["int", "java.lang.Object"]], "passed_comments": [{"com.androidquery.AbstractAQuery.getContext": "Return the context of activity or view."}]}, {"index": "229", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.download", "methodParameterType": "String#File#AjaxCallback<File>#", "methodParameterName": "url#target#cb#", "methodBody": "public T download(String url, File target, AjaxCallback<File> cb){\n\t\t\n\t\tcb.url(url).type(File.class).targetFile(target);\t\t\n\t\treturn ajax(cb);\n\t\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleType#TypeLiteral#MethodInvocation#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(MethodInvocation(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(TypeLiteral(SimpleType(SimpleName)SimpleName)SimpleType)TypeLiteral)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Download a file asynchronously.", "call_func_name": ["com.androidquery.callback.AjaxCallback.url", "com.androidquery.callback.AjaxCallback.type", "com.androidquery.callback.AjaxCallback.targetFile", "com.androidquery.AbstractAQuery.ajax"], "call_func_parameter": [["java.lang.String"], ["java.lang.Class"], ["java.io.File"], ["com.androidquery.callback.AjaxCallback"]], "passed_comments": [{"com.androidquery.AbstractAQuery.ajax": "Advanced Ajax callback. User must manually prepare the callback object settings (url, type, etc...) by using its methods."}]}, {"index": "230", "file": "/root/repos/repos5/androidquery/src/com/androidquery/AbstractAQuery.java", "methodName": "com.androidquery.AbstractAQuery.download", "methodParameterType": "String#File#Object#String#", "methodParameterName": "url#target#handler#callback#", "methodBody": "public T download(String url, File target, Object handler, String callback){\n\t\t\n\t\tAjaxCallback<File> cb = new AjaxCallback<File>();\n\t\tcb.weakHandler(handler, callback);\n\t\treturn download(url, target, cb);\n\t\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ExpressionStatement#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ExpressionStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Download a file asynchronously.", "call_func_name": ["com.androidquery.callback.AjaxCallback.<init>", "com.androidquery.callback.AjaxCallback.weakHandler", "com.androidquery.AbstractAQuery.download"], "call_func_parameter": [[""], ["java.lang.Object", "java.lang.String"], ["java.lang.String", "java.io.File", "com.androidquery.callback.AjaxCallback"]], "passed_comments": [{"com.androidquery.AbstractAQuery.download": "Download a file asynchronously."}]}, {"index": "231", "file": "/root/repos/repos5/androidquery/src/com/androidquery/util/XmlDom.java", "methodName": "com.androidquery.util.XmlDom.getElement", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public Element getElement(){\n\t\treturn root;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Gets the element that this node represent.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "232", "file": "/root/repos/repos5/androidquery/src/com/androidquery/util/XmlDom.java", "methodName": "com.androidquery.util.XmlDom.XmlDom", "methodParameterType": "Element#", "methodParameterName": "element#", "methodBody": "public XmlDom(Element element){\n\t\tthis.root = element;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#ThisExpression#SimpleName#FieldAccess#SimpleName#Assignment#ExpressionStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(SimpleName)SimpleName)Assignment)ExpressionStatement)Block)MethodDeclaration", "methodDoc": "Instantiates a new xml dom.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "233", "file": "/root/repos/repos5/androidquery/src/com/androidquery/util/XmlDom.java", "methodName": "com.androidquery.util.XmlDom.XmlDom", "methodParameterType": "String#", "methodParameterName": "str#", "methodBody": "public XmlDom(String str) throws SAXException{\n\t\tthis(str.getBytes());\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#MethodInvocation#ConstructorInvocation#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(ConstructorInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ConstructorInvocation)Block)MethodDeclaration", "methodDoc": "Instantiates a new xml dom.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "234", "file": "/root/repos/repos5/androidquery/src/com/androidquery/util/XmlDom.java", "methodName": "com.androidquery.util.XmlDom.XmlDom", "methodParameterType": "byte[]#", "methodParameterName": "data#", "methodBody": "public XmlDom(byte[] data) throws SAXException{\n\t\t\n\t\tthis(new ByteArrayInputStream(data));\t\t\n\t\t\n\t}", "AST": "Javadoc#Modifier#SimpleName#PrimitiveType#Dimension#ArrayType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#ConstructorInvocation#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(ArrayType(PrimitiveType)PrimitiveType(Dimension)Dimension)ArrayType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(ConstructorInvocation(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation)ConstructorInvocation)Block)MethodDeclaration", "methodDoc": "Instantiates a new xml dom.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "235", "file": "/root/repos/repos5/androidquery/src/com/androidquery/util/XmlDom.java", "methodName": "com.androidquery.util.XmlDom.XmlDom", "methodParameterType": "InputStream#", "methodParameterName": "is#", "methodBody": "public XmlDom(InputStream is) throws SAXException{\n\t\t\n\t\tDocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n\t\tDocumentBuilder builder;\n\t\t\n\t\ttry {\n\t\t\tbuilder = factory.newDocumentBuilder();\n\t\t\tDocument doc = builder.parse(is);\t\t\t\n\t\t\tthis.root = (Element) doc.getDocumentElement();\n\t\t}catch(ParserConfigurationException e) {\t\t\t\n\t\t}catch(IOException e){\n\t\t\tthrow new SAXException(e);\n\t\t}\n\t\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#SimpleName#MethodInvocation#Assignment#ExpressionStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#ThisExpression#SimpleName#FieldAccess#SimpleName#SimpleType#SimpleName#SimpleName#MethodInvocation#CastExpression#Assignment#ExpressionStatement#Block#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#Block#CatchClause#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#ClassInstanceCreation#ThrowStatement#Block#CatchClause#TryStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName)VariableDeclarationFragment)VariableDeclarationStatement(TryStatement(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)Assignment)ExpressionStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ExpressionStatement(Assignment(FieldAccess(ThisExpression)ThisExpression(SimpleName)SimpleName)FieldAccess(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)CastExpression)Assignment)ExpressionStatement)Block(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block)Block)CatchClause(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)ClassInstanceCreation)ThrowStatement)Block)CatchClause)TryStatement)Block)MethodDeclaration", "methodDoc": "Instantiates a new xml dom.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}, {"index": "236", "file": "/root/repos/repos5/androidquery/src/com/androidquery/util/XmlDom.java", "methodName": "com.androidquery.util.XmlDom.tag", "methodParameterType": "String#", "methodParameterName": "tag#", "methodBody": "public XmlDom tag(String tag){\n\t\t\n\t\tNodeList nl = root.getElementsByTagName(tag);\n\t\t\n\t\tXmlDom result = null;\n\t\t\n\t\tif(nl != null && nl.getLength() > 0){\n\t\t\tresult = new XmlDom((Element) nl.item(0));\n\t\t}\n\t\t\n\t\t\n\t\treturn result;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleType#SimpleName#NullLiteral#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#SimpleName#SimpleName#MethodInvocation#NumberLiteral#InfixExpression#InfixExpression#SimpleName#SimpleName#SimpleType#SimpleName#SimpleType#SimpleName#SimpleName#NumberLiteral#MethodInvocation#CastExpression#ClassInstanceCreation#Assignment#ExpressionStatement#Block#IfStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(NullLiteral)NullLiteral)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(NumberLiteral)NumberLiteral)InfixExpression)InfixExpression(Block(ExpressionStatement(Assignment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType(CastExpression(SimpleType(SimpleName)SimpleName)SimpleType(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation)CastExpression)ClassInstanceCreation)Assignment)ExpressionStatement)Block)IfStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Return a node that represents the first matched tag. A dummy node is returned if none found.", "call_func_name": ["org.w3c.dom.Element.getElementsByTagName", "org.w3c.dom.NodeList.getLength", "org.w3c.dom.NodeList.item", "com.androidquery.util.XmlDom.<init>"], "call_func_parameter": [["java.lang.String"], [""], ["int"], ["org.w3c.dom.Element"]], "passed_comments": "/"}, {"index": "237", "file": "/root/repos/repos5/androidquery/src/com/androidquery/util/XmlDom.java", "methodName": "com.androidquery.util.XmlDom.tag", "methodParameterType": "String#String#String#", "methodParameterName": "tag#attr#value#", "methodBody": "public XmlDom tag(String tag, String attr, String value){\n\t\t\n\t\tList<XmlDom> tags = tags(tag, attr, value);\n\t\t\n\t\tif(tags.size() == 0){\n\t\t\treturn null;\n\t\t}else{\n\t\t\treturn tags.get(0);\n\t\t}\n\t\t\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#NumberLiteral#InfixExpression#NullLiteral#ReturnStatement#Block#SimpleName#SimpleName#NumberLiteral#MethodInvocation#ReturnStatement#Block#IfStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(NumberLiteral)NumberLiteral)InfixExpression(Block(ReturnStatement(NullLiteral)NullLiteral)ReturnStatement)Block(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation)ReturnStatement)Block)IfStatement)Block)MethodDeclaration", "methodDoc": "Return a node that represents the first matched tag. If value == null, node that has the attr are considered a match. A dummy node is returned if none found.", "call_func_name": ["com.androidquery.util.XmlDom.tags", "java.util.List.size", "java.util.List.get"], "call_func_parameter": [["java.lang.String", "java.lang.String", "java.lang.String"], [""], ["int"]], "passed_comments": [{"com.androidquery.util.XmlDom.tags": "Return a list of nodes that represents the matched tags that has attribute attr=value. If attr == null, any tag with specified name matches. If value == null, any nodes that has the attr matches."}]}, {"index": "238", "file": "/root/repos/repos5/androidquery/src/com/androidquery/util/XmlDom.java", "methodName": "com.androidquery.util.XmlDom.tags", "methodParameterType": "String#", "methodParameterName": "tag#", "methodBody": "public List<XmlDom> tags(String tag){\t\t\n\t\treturn tags(tag, null, null);\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#NullLiteral#NullLiteral#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NullLiteral)NullLiteral(NullLiteral)NullLiteral)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Return a list of nodes that represents the matched tags.", "call_func_name": ["com.androidquery.util.XmlDom.tags"], "call_func_parameter": [["java.lang.String", "java.lang.String", "java.lang.String"]], "passed_comments": [{"com.androidquery.util.XmlDom.tags": "Return a list of nodes that represents the matched tags that has attribute attr=value. If attr == null, any tag with specified name matches. If value == null, any nodes that has the attr matches."}]}, {"index": "239", "file": "/root/repos/repos5/androidquery/src/com/androidquery/util/XmlDom.java", "methodName": "com.androidquery.util.XmlDom.child", "methodParameterType": "String#", "methodParameterName": "tag#", "methodBody": "public XmlDom child(String tag){\n\t\treturn child(tag, null, null);\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#NullLiteral#NullLiteral#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NullLiteral)NullLiteral(NullLiteral)NullLiteral)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Return the first child node that represent the matched tag. A dummy node is returned if none found.", "call_func_name": ["com.androidquery.util.XmlDom.child"], "call_func_parameter": [["java.lang.String", "java.lang.String", "java.lang.String"]], "passed_comments": [{"com.androidquery.util.XmlDom.child": "Return the first child node that represent the matched tag that has attribute attr=value. A dummy node is returned if none found."}]}, {"index": "240", "file": "/root/repos/repos5/androidquery/src/com/androidquery/util/XmlDom.java", "methodName": "com.androidquery.util.XmlDom.child", "methodParameterType": "String#String#String#", "methodParameterName": "tag#attr#value#", "methodBody": "public XmlDom child(String tag, String attr, String value){\n\t\tList<XmlDom> c = children(tag, attr, value);\n\t\tif(c.size() == 0) return null;\n\t\treturn c.get(0);\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#NumberLiteral#InfixExpression#NullLiteral#ReturnStatement#IfStatement#SimpleName#SimpleName#NumberLiteral#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(NumberLiteral)NumberLiteral)InfixExpression(ReturnStatement(NullLiteral)NullLiteral)ReturnStatement)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Return the first child node that represent the matched tag that has attribute attr=value. A dummy node is returned if none found.", "call_func_name": ["com.androidquery.util.XmlDom.children", "java.util.List.size", "java.util.List.get"], "call_func_parameter": [["java.lang.String", "java.lang.String", "java.lang.String"], [""], ["int"]], "passed_comments": [{"com.androidquery.util.XmlDom.children": "Return a list of child nodes that represents the matched tags."}]}, {"index": "241", "file": "/root/repos/repos5/androidquery/src/com/androidquery/util/XmlDom.java", "methodName": "com.androidquery.util.XmlDom.children", "methodParameterType": "String#", "methodParameterName": "tag#", "methodBody": "public List<XmlDom> children(String tag){\n\t\treturn children(tag, null, null);\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#NullLiteral#NullLiteral#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NullLiteral)NullLiteral(NullLiteral)NullLiteral)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Return a list of child nodes that represents the matched tags.", "call_func_name": ["com.androidquery.util.XmlDom.children"], "call_func_parameter": [["java.lang.String", "java.lang.String", "java.lang.String"]], "passed_comments": [{"com.androidquery.util.XmlDom.children": "Return a list of child nodes that represents the matched tags."}]}, {"index": "242", "file": "/root/repos/repos5/androidquery/src/com/androidquery/util/XmlDom.java", "methodName": "com.androidquery.util.XmlDom.children", "methodParameterType": "String#String#String#", "methodParameterName": "tag#attr#value#", "methodBody": "public List<XmlDom> children(String tag, String attr, String value){\n\t\t\t\t\t\t\t\n\t\treturn convert(root.getChildNodes(), tag, attr, value);\n\t\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Return a list of child nodes that represents the matched tags.", "call_func_name": ["org.w3c.dom.Element.getChildNodes", "com.androidquery.util.XmlDom.convert"], "call_func_parameter": [[""], ["org.w3c.dom.NodeList", "java.lang.String", "java.lang.String", "java.lang.String"]], "passed_comments": "/"}, {"index": "243", "file": "/root/repos/repos5/androidquery/src/com/androidquery/util/XmlDom.java", "methodName": "com.androidquery.util.XmlDom.tags", "methodParameterType": "String#String#String#", "methodParameterName": "tag#attr#value#", "methodBody": "public List<XmlDom> tags(String tag, String attr, String value){\n\t\t\n\t\tNodeList nl = root.getElementsByTagName(tag);\t\t\n\t\treturn convert(nl, null, attr, value);\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleType#ParameterizedType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#NullLiteral#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(ParameterizedType(SimpleType(SimpleName)SimpleName)SimpleType(SimpleType(SimpleName)SimpleName)SimpleType)ParameterizedType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NullLiteral)NullLiteral(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Return a list of nodes that represents the matched tags that has attribute attr=value. If attr == null, any tag with specified name matches. If value == null, any nodes that has the attr matches.", "call_func_name": ["org.w3c.dom.Element.getElementsByTagName", "com.androidquery.util.XmlDom.convert"], "call_func_parameter": [["java.lang.String"], ["org.w3c.dom.NodeList", "java.lang.String", "java.lang.String", "java.lang.String"]], "passed_comments": "/"}, {"index": "244", "file": "/root/repos/repos5/androidquery/src/com/androidquery/util/XmlDom.java", "methodName": "com.androidquery.util.XmlDom.text", "methodParameterType": "String#", "methodParameterName": "tag#", "methodBody": "public String text(String tag){\n\t\t\t\n\t\tXmlDom dom = child(tag);\n\t\tif(dom == null) return null;\n\t\treturn dom.text();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#NullLiteral#InfixExpression#NullLiteral#ReturnStatement#IfStatement#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(SimpleName)SimpleName(NullLiteral)NullLiteral)InfixExpression(ReturnStatement(NullLiteral)NullLiteral)ReturnStatement)IfStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Return the text content of the first matched tag. Short cut for \"xml.child(tag).text()\" Return null if there's no matched tag.", "call_func_name": ["org.w3c.dom.Element.getChildNodes", "org.w3c.dom.NodeList.getLength", "org.w3c.dom.NodeList.item", "org.w3c.dom.Node.getNodeValue", "java.lang.StringBuilder.<init>", "com.androidquery.util.XmlDom.text", "java.lang.StringBuilder.append", "java.lang.StringBuilder.toString"], "call_func_parameter": [[""], [""], ["int"], [""], [""], ["org.w3c.dom.Node"], ["java.lang.String"], [""]], "passed_comments": [{"com.androidquery.util.XmlDom.child": "Return the first child node that represent the matched tag. A dummy node is returned if none found."}, {"com.androidquery.util.XmlDom.text": "Return the text content of the first matched tag. Short cut for \"xml.child(tag).text()\" Return null if there's no matched tag."}, {"com.androidquery.util.XmlDom.text": "Return the text content of the current node. Returns empty string if there's no text or cdata child elements."}]}, {"index": "245", "file": "/root/repos/repos5/androidquery/src/com/androidquery/util/XmlDom.java", "methodName": "com.androidquery.util.XmlDom.attr", "methodParameterType": "String#", "methodParameterName": "name#", "methodBody": "public String attr(String name){\n\t\t\n\t\tString result = root.getAttribute(name);\n\t\treturn result;\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName)SingleVariableDeclaration(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(ReturnStatement(SimpleName)SimpleName)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Return the value of the attribute of current node.", "call_func_name": ["org.w3c.dom.Element.getAttribute"], "call_func_parameter": [["java.lang.String"]], "passed_comments": "/"}, {"index": "246", "file": "/root/repos/repos5/androidquery/src/com/androidquery/util/XmlDom.java", "methodName": "com.androidquery.util.XmlDom.toString", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public String toString(){\n\t\treturn toString(0);\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#NumberLiteral#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Return the raw xml of this node. WARNING: This method is for debugging only. Does not guarantee a proper XML transformation.", "call_func_name": ["com.androidquery.util.XmlDom.toString"], "call_func_parameter": [["int"]], "passed_comments": [{"com.androidquery.util.XmlDom.toString": "Return the raw xml of this node. WARNING: This method is for debugging only. Does not guarantee a proper XML transformation."}]}, {"index": "247", "file": "/root/repos/repos5/androidquery/src/com/androidquery/util/XmlDom.java", "methodName": "com.androidquery.util.XmlDom.toString", "methodParameterType": "int#", "methodParameterName": "intentSpaces#", "methodBody": "public String toString(int intentSpaces){\t\t\n\t\treturn serialize(root, intentSpaces);\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#PrimitiveType#SimpleName#SingleVariableDeclaration#SimpleName#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(SingleVariableDeclaration(PrimitiveType)PrimitiveType(SimpleName)SimpleName)SingleVariableDeclaration(Block(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Return the raw xml of this node. WARNING: This method is for debugging only. Does not guarantee a proper XML transformation.", "call_func_name": ["com.androidquery.util.XmlDom.serialize"], "call_func_parameter": [["org.w3c.dom.Element", "int"]], "passed_comments": "/"}, {"index": "248", "file": "/root/repos/repos5/androidquery/src/com/androidquery/util/XmlDom.java", "methodName": "com.androidquery.util.XmlDom.text", "methodParameterType": "/", "methodParameterName": "/", "methodBody": "public String text(){\n\t\t\n\t\tNodeList list = root.getChildNodes();\n\t\tif(list.getLength() == 1) return list.item(0).getNodeValue();\n\t\t\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor(int i = 0; i < list.getLength(); i++){\n\t\t\tsb.append(text(list.item(i)));\n\t\t}\n\t\t\n\t\treturn sb.toString();\n\t}", "AST": "Javadoc#Modifier#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#SimpleName#SimpleName#SimpleName#MethodInvocation#VariableDeclarationFragment#VariableDeclarationStatement#SimpleName#SimpleName#MethodInvocation#NumberLiteral#InfixExpression#SimpleName#SimpleName#NumberLiteral#MethodInvocation#SimpleName#MethodInvocation#ReturnStatement#IfStatement#SimpleName#SimpleType#SimpleName#SimpleName#SimpleType#ClassInstanceCreation#VariableDeclarationFragment#VariableDeclarationStatement#PrimitiveType#SimpleName#NumberLiteral#VariableDeclarationFragment#VariableDeclarationExpression#SimpleName#SimpleName#SimpleName#MethodInvocation#InfixExpression#SimpleName#PostfixExpression#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#SimpleName#MethodInvocation#MethodInvocation#MethodInvocation#ExpressionStatement#Block#ForStatement#SimpleName#SimpleName#MethodInvocation#ReturnStatement#Block#MethodDeclaration#", "SBT": "(MethodDeclaration(Modifier)Modifier(SimpleType(SimpleName)SimpleName)SimpleType(SimpleName)SimpleName(Block(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)VariableDeclarationFragment)VariableDeclarationStatement(IfStatement(InfixExpression(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation(NumberLiteral)NumberLiteral)InfixExpression(ReturnStatement(MethodInvocation(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(NumberLiteral)NumberLiteral)MethodInvocation(SimpleName)SimpleName)MethodInvocation)ReturnStatement)IfStatement(VariableDeclarationStatement(SimpleType(SimpleName)SimpleName)SimpleType(VariableDeclarationFragment(SimpleName)SimpleName(ClassInstanceCreation(SimpleType(SimpleName)SimpleName)SimpleType)ClassInstanceCreation)VariableDeclarationFragment)VariableDeclarationStatement(ForStatement(VariableDeclarationExpression(PrimitiveType)PrimitiveType(VariableDeclarationFragment(SimpleName)SimpleName(NumberLiteral)NumberLiteral)VariableDeclarationFragment)VariableDeclarationExpression(InfixExpression(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)InfixExpression(PostfixExpression(SimpleName)SimpleName)PostfixExpression(Block(ExpressionStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)MethodInvocation)MethodInvocation)ExpressionStatement)Block)ForStatement(ReturnStatement(MethodInvocation(SimpleName)SimpleName(SimpleName)SimpleName)MethodInvocation)ReturnStatement)Block)MethodDeclaration", "methodDoc": "Return the text content of the current node. Returns empty string if there's no text or cdata child elements.", "call_func_name": "/", "call_func_parameter": "/", "passed_comments": "/"}]